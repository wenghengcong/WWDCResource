1
00:00:19,520 --> 00:00:22,823
<c.magenta>tvOS焦点互动</c>


2
00:00:24,625 --> 00:00:25,993
<c.magenta>下午好</c>


3
00:00:28,295 --> 00:00:30,430
<c.magenta>大家好 我是Matthew Ricketson</c>


4
00:00:30,664 --> 00:00:32,799
<c.magenta>UIKit的软件工程师</c>


5
00:00:33,400 --> 00:00:37,004
<c.magenta>今天我们要谈谈tvOS焦点互动</c>


6
00:00:38,939 --> 00:00:41,074
<c.magenta>去年我们介绍了tvOS</c>


7
00:00:41,341 --> 00:00:44,478
<c.magenta>一个很棒的新平台</c>
<c.magenta>用来开发Apple TV上的应用</c>


8
00:00:46,246 --> 00:00:48,715
<c.magenta>无论你是为Apple TV开发一个</c>
<c.magenta>全新的应用</c>


9
00:00:49,082 --> 00:00:52,586
<c.magenta>还是从其他平台移植一个已有的应用</c>


10
00:00:53,086 --> 00:00:56,857
<c.magenta>很明显Apple TV不同于</c>
<c.magenta>其他Apple设备</c>


11
00:00:57,991 --> 00:01:00,928
<c.magenta>TV上没有触摸屏或鼠标</c>


12
00:01:01,195 --> 00:01:04,096
<c.magenta>因为这些用户输入设备没意义</c>


13
00:01:04,164 --> 00:01:05,799
<c.magenta>在客厅环境中</c>


14
00:01:06,533 --> 00:01:10,804
<c.magenta>反而 我们用这个 遥控器</c>
<c.magenta>比如Siri Remote</c>


15
00:01:11,171 --> 00:01:13,874
<c.magenta>来从一定距离外控制Apple TV</c>


16
00:01:14,975 --> 00:01:18,312
<c.magenta>Siri Remote和</c>
<c.magenta>Apple TV是一起设计的</c>


17
00:01:18,779 --> 00:01:20,981
<c.magenta>来提供最好的浏览体验</c>


18
00:01:22,649 --> 00:01:25,986
<c.magenta>但是Apple TV</c>
<c.magenta>还支持很多其他的输入设备</c>


19
00:01:26,486 --> 00:01:28,956
<c.magenta>比如游戏控制器</c>
<c.magenta>Bluetooth键盘</c>


20
00:01:29,656 --> 00:01:31,158
<c.magenta>和新的遥控应用</c>


21
00:01:32,292 --> 00:01:34,895
<c.magenta>有时用户可能更喜欢用</c>


22
00:01:34,962 --> 00:01:36,830
<c.magenta>这些其他输入设备中的一种</c>


23
00:01:37,397 --> 00:01:39,566
<c.magenta>来控制他们的Apple TV</c>


24
00:01:39,933 --> 00:01:42,536
<c.magenta>tvOS帮助你支持所有的这些</c>


25
00:01:42,736 --> 00:01:45,973
<c.magenta>通过一个我们叫做焦点的用户交互模型</c>


26
00:01:48,342 --> 00:01:51,945
<c.magenta>有了焦点互动 用户间接控制UI</c>


27
00:01:52,179 --> 00:01:54,781
<c.magenta>通过一个被聚焦的用户界面元素</c>


28
00:01:55,148 --> 00:01:58,886
<c.magenta>可用任何输入设备在屏幕上移动焦点</c>


29
00:02:00,954 --> 00:02:04,124
<c.magenta>用户希望你的应用进行了优化</c>


30
00:02:04,191 --> 00:02:06,093
<c.magenta>对焦点互动优化的很好</c>


31
00:02:06,860 --> 00:02:10,430
<c.magenta>为了帮助做到这点</c>
<c.magenta>UIKit提供内置的焦点行为</c>


32
00:02:10,497 --> 00:02:12,366
<c.magenta>为它的所有标准控制</c>


33
00:02:13,967 --> 00:02:17,437
<c.magenta>然而你可能还想定制应用的焦点行为</c>


34
00:02:17,504 --> 00:02:21,408
<c.magenta>使它们到达下一个层次并提供</c>
<c.magenta>更好的用户体验</c>


35
00:02:21,909 --> 00:02:25,179
<c.magenta>为此UIKit提供一个焦点API</c>


36
00:02:27,948 --> 00:02:30,150
<c.magenta>今天要谈的就是这个焦点API</c>


37
00:02:30,217 --> 00:02:32,186
<c.magenta>我们把它分成两部分</c>


38
00:02:32,386 --> 00:02:34,454
<c.magenta>首先 我们会看看有哪些新功能</c>


39
00:02:34,521 --> 00:02:36,723
<c.magenta>今年的tvOS 10的焦点API中</c>


40
00:02:38,125 --> 00:02:39,626
<c.magenta>在这个演讲的第二部分</c>


41
00:02:39,693 --> 00:02:43,664
<c.magenta>我们会用一个扩展的案例研究</c>
<c.magenta>来解释如何从零开始开发一个定制的</c>


42
00:02:44,031 --> 00:02:46,533
<c.magenta>完全可聚焦的控制</c>


43
00:02:47,434 --> 00:02:48,869
<c.magenta>这个演示会向你展示</c>


44
00:02:48,936 --> 00:02:52,806
<c.magenta>怎样开始为你的tvOS应用</c>
<c.magenta>开发独特的互动体验</c>


45
00:02:54,441 --> 00:02:56,310
<c.magenta>在我们开始前有一个快速说明</c>


46
00:02:56,643 --> 00:02:59,479
<c.magenta>我们假设你至少有一定的熟悉度</c>


47
00:02:59,546 --> 00:03:01,782
<c.magenta>对焦点API和基本的概念</c>


48
00:03:02,082 --> 00:03:04,251
<c.magenta>焦点在tvOS上怎么工作</c>


49
00:03:04,484 --> 00:03:07,354
<c.magenta>但若你是这个平台的新手 不要担心</c>


50
00:03:08,088 --> 00:03:09,857
<c.magenta>你总体上还是跟得上</c>


51
00:03:09,923 --> 00:03:12,926
<c.magenta>在今天演讲的最后</c>
<c.magenta>我们会给出一些有用的资源</c>


52
00:03:12,993 --> 00:03:15,896
<c.magenta>帮你开始为Apple TV开发应用</c>


53
00:03:19,399 --> 00:03:25,205
<c.magenta>那么在tvOS 10中有哪些新内容</c>
<c.magenta>首先我们加了一些新的API</c>


54
00:03:26,073 --> 00:03:28,475
<c.magenta>来增强优先焦点系统</c>


55
00:03:30,344 --> 00:03:32,980
<c.magenta>让我们做个快速回顾</c>
<c.magenta>当我们谈论优先焦点</c>


56
00:03:33,280 --> 00:03:35,115
<c.magenta>我们的意思是一个过程用来决定</c>


57
00:03:35,182 --> 00:03:38,418
<c.magenta>焦点应该显示在哪 在一次焦点更新后</c>


58
00:03:40,153 --> 00:03:41,255
<c.magenta>无论其何时发生</c>


59
00:03:41,321 --> 00:03:43,357
<c.magenta>比如当你的应用第一次启动</c>


60
00:03:43,423 --> 00:03:46,593
<c.magenta>焦点引擎需要知道焦点要定向到哪</c>


61
00:03:47,494 --> 00:03:49,196
<c.magenta>它实现这的方法是问你的应用</c>


62
00:03:49,830 --> 00:03:51,965
<c.magenta>它优先把焦点定向到哪</c>


63
00:03:52,833 --> 00:03:54,635
<c.magenta>让我们看一个具体的例子</c>


64
00:03:55,769 --> 00:03:57,938 line:1
<c.magenta>当你的应用第一次启动焦点引擎</c>


65
00:03:58,639 --> 00:04:01,742 line:1
<c.magenta>尝试找出根据默认焦点应该显示在哪</c>


66
00:04:02,709 --> 00:04:05,412 line:1
<c.magenta>然后它开始检查焦点环境</c>


67
00:04:05,479 --> 00:04:07,014 line:1
<c.magenta>我们也对这个环境更新焦点</c>


68
00:04:07,080 --> 00:04:09,349 line:1
<c.magenta>当我们的应用首次启动</c>
<c.magenta>这个焦点环境是窗口</c>


69
00:04:09,416 --> 00:04:12,419 line:1
<c.magenta>这种情况下 焦点引擎会询问窗口</c>


70
00:04:12,486 --> 00:04:14,354 line:1
<c.magenta>它优先的焦点视图是什么</c>


71
00:04:15,222 --> 00:04:18,725 line:1
<c.magenta>窗口把这转发给它的根视图控制器</c>


72
00:04:18,825 --> 00:04:22,362 line:1
<c.magenta>根控制器会返回结构中的一些其他视图</c>


73
00:04:22,529 --> 00:04:24,031 line:1
<c.magenta>作为优先的焦点视图</c>


74
00:04:24,831 --> 00:04:26,600 line:1
<c.magenta>焦点引擎会询问那个视图</c>


75
00:04:26,667 --> 00:04:28,168 line:1
<c.magenta>它优先的焦点视图是什么</c>


76
00:04:28,235 --> 00:04:30,537 line:1
<c.magenta>会在这个链一直持续下去</c>


77
00:04:30,604 --> 00:04:33,173 line:1
<c.magenta>直到到达最后一个可聚焦的视图</c>


78
00:04:33,240 --> 00:04:37,110 line:1
<c.magenta>这就是屏幕上的新焦点视图</c>


79
00:04:38,178 --> 00:04:40,581 line:1
<c.magenta>利用优先焦点系统很重要</c>


80
00:04:40,647 --> 00:04:44,518 line:1
<c.magenta>特别是对复杂应用提供好的用户体验</c>


81
00:04:45,385 --> 00:04:48,088 line:1
<c.magenta>所以焦点被定向到屏幕上正确的部分</c>


82
00:04:48,155 --> 00:04:49,590 line:1
<c.magenta>在适当的时间</c>


83
00:04:51,692 --> 00:04:54,328
<c.magenta>tvOS 10中</c>
<c.magenta>我们提供一个新属性</c>


84
00:04:54,394 --> 00:04:59,032
<c.magenta>允许你的应用能简单表达复杂焦点偏好</c>


85
00:04:59,233 --> 00:05:01,802
<c.magenta>这个属性有一个适当的名字</c>


86
00:05:01,869 --> 00:05:03,370
<c.magenta>优先焦点环境</c>


87
00:05:03,704 --> 00:05:07,674
<c.magenta>在UIFocusEnvironment协议里</c>
<c.magenta>被申明且它返回一个数组</c>


88
00:05:07,741 --> 00:05:11,044
<c.magenta>一个遵守UIFocusEnvironment</c>
<c.magenta>协议的对象的数组</c>


89
00:05:11,712 --> 00:05:13,814
<c.magenta>这个属性有两个主要优点</c>


90
00:05:15,682 --> 00:05:19,186
<c.magenta>首先通过返回</c>
<c.magenta>遵守UIFocusEnvironment的对象</c>


91
00:05:20,153 --> 00:05:24,291
<c.magenta>你可指定焦点被定向到屏幕任何环境中</c>


92
00:05:24,358 --> 00:05:26,960
<c.magenta>不仅视图 还可直接定向到视图控制器</c>


93
00:05:27,895 --> 00:05:29,563
<c.magenta>这个属性的第二个优点</c>


94
00:05:29,630 --> 00:05:32,432
<c.magenta>是它返回焦点环境数组</c>


95
00:05:32,933 --> 00:05:35,636
<c.magenta>允许你指定一个偏好的有序列表</c>


96
00:05:36,136 --> 00:05:39,139
<c.magenta>这允许复杂 多部分的偏好</c>


97
00:05:39,206 --> 00:05:41,141
<c.magenta>可以被更简洁的表达</c>


98
00:05:42,976 --> 00:05:46,213
<c.magenta>举例让我们看看这是怎么发生的</c>


99
00:05:46,847 --> 00:05:49,016
<c.magenta>优先焦点通常被用在</c>


100
00:05:49,082 --> 00:05:51,485
<c.magenta>定制的容器视图控制器</c>


101
00:05:51,685 --> 00:05:53,487
<c.magenta>让我们看一个例子</c>


102
00:05:56,490 --> 00:05:58,926
<c.magenta>假设我们有一个应用 其结构是这样的</c>


103
00:05:59,426 --> 00:06:01,261
<c.magenta>我们有一个容器视图控制器</c>


104
00:06:01,328 --> 00:06:03,397
<c.magenta>有两个子视图控制器</c>


105
00:06:04,765 --> 00:06:06,834
<c.magenta>在这个例子中 我们希望容器优先</c>


106
00:06:06,900 --> 00:06:09,903
<c.magenta>让焦点显示在左边的子视图控制器</c>


107
00:06:10,704 --> 00:06:13,273
<c.magenta>但是如果这不可能 焦点应该定向到</c>


108
00:06:13,340 --> 00:06:15,342
<c.magenta>它的右子视图控制器</c>


109
00:06:15,943 --> 00:06:18,212
<c.magenta>我们可以简洁地表达这个逻辑</c>


110
00:06:18,278 --> 00:06:21,181
<c.magenta>使用preferredFocusEnvironments新属性</c>


111
00:06:22,683 --> 00:06:25,652 line:1
<c.magenta>我们在这覆盖</c>
<c.magenta>preferredFocusEnvironments</c>


112
00:06:25,853 --> 00:06:28,889 line:1
<c.magenta>来返回一个数组包含左边的子项</c>


113
00:06:28,956 --> 00:06:30,624 line:1
<c.magenta>做为数组的第一项</c>


114
00:06:32,392 --> 00:06:34,661 line:1
<c.magenta>这很好因为我们不需要自己去检查</c>


115
00:06:34,728 --> 00:06:36,263 line:1
<c.magenta>是否左子视图控制器</c>


116
00:06:36,330 --> 00:06:37,865 line:1
<c.magenta>实际上包含任何可聚焦元素</c>


117
00:06:37,931 --> 00:06:39,066 line:1
<c.magenta>我们不需要知道</c>


118
00:06:39,132 --> 00:06:41,034 line:1
<c.magenta>那个控制器的内容</c>


119
00:06:41,768 --> 00:06:44,204 line:1
<c.magenta>只需告诉焦点引擎我们偏好什么</c>


120
00:06:44,271 --> 00:06:46,773 line:1
<c.magenta>它会帮我们完成复杂的工作</c>


121
00:06:47,508 --> 00:06:49,109 line:1
<c.magenta>所以如果我们的左子视图控制器</c>


122
00:06:49,176 --> 00:06:52,479 line:1
<c.magenta>在此例中恰好不包含任何可聚焦元素</c>


123
00:06:52,646 --> 00:06:54,781 line:1
<c.magenta>焦点引擎将会自动后退</c>


124
00:06:54,848 --> 00:06:57,017 line:1
<c.magenta>到右子视图控制器</c>


125
00:06:57,084 --> 00:07:00,053 line:1
<c.magenta>此例中 它可能找到一些可聚焦的元素</c>


126
00:07:02,256 --> 00:07:04,091 line:1
<c.magenta>preferredFocusEnvironments属性</c>


127
00:07:04,157 --> 00:07:07,394 line:1
<c.magenta>帮助我们更清楚简洁地表达这些偏好</c>


128
00:07:08,095 --> 00:07:10,864 line:1
<c.magenta>如果第一项不包括可聚焦元素</c>


129
00:07:10,931 --> 00:07:14,668 line:1
<c.magenta>我们可以简单后退到列表中的其他环境</c>


130
00:07:16,069 --> 00:07:19,106
<c.magenta>接着我们有另一对优先焦点系统的改进</c>


131
00:07:19,439 --> 00:07:23,443
<c.magenta>用于与恢复焦点有关</c>
<c.magenta>的更加具体的使用案例中</c>


132
00:07:23,644 --> 00:07:25,312
<c.magenta>在视图控制器的转换之后</c>


133
00:07:26,780 --> 00:07:30,050
<c.magenta>在我们介绍这个API前</c>
<c.magenta>让我们先看一个例子</c>


134
00:07:30,117 --> 00:07:33,487
<c.magenta>来演示什么是我们所说的焦点恢复</c>


135
00:07:36,423 --> 00:07:38,258
<c.magenta>假设我们有一个应用看起来是这样</c>


136
00:07:38,659 --> 00:07:41,461
<c.magenta>这是一个简单的视图控制器</c>
<c.magenta>有一个按钮菜单</c>


137
00:07:41,828 --> 00:07:43,997
<c.magenta>我们的根视图控制器首选</c>


138
00:07:44,064 --> 00:07:46,834
<c.magenta>根据默认我们想要聚焦第一个按钮</c>


139
00:07:47,000 --> 00:07:49,036
<c.magenta>它通过使用</c>
<c.magenta>preferredFocusEnvironments来这么做</c>


140
00:07:49,102 --> 00:07:50,637
<c.magenta>我们刚刚看过的属性</c>


141
00:07:51,805 --> 00:07:54,808
<c.magenta>现假设用户移动到列表的最后一个按钮</c>


142
00:07:55,242 --> 00:07:56,643
<c.magenta>然后选择这个按钮</c>


143
00:07:56,743 --> 00:07:58,912
<c.magenta>来显示一个详情视图控制器</c>


144
00:08:00,581 --> 00:08:02,115
<c.magenta>在这种情况下我们想</c>


145
00:08:02,316 --> 00:08:04,751
<c.magenta>详情视图控制器什么时候关闭</c>


146
00:08:06,887 --> 00:08:09,923
<c.magenta>在关闭后 焦点需要被恢复</c>


147
00:08:10,190 --> 00:08:11,825
<c.magenta>到根视图控制器</c>


148
00:08:13,360 --> 00:08:15,229
<c.magenta>现在用户可能希望</c>


149
00:08:15,896 --> 00:08:18,065
<c.magenta>焦点恢复到按钮上</c>


150
00:08:18,165 --> 00:08:20,367
<c.magenta>最后被聚焦的按钮</c>
<c.magenta>在显示详情视图控制器前</c>


151
00:08:20,434 --> 00:08:22,569
<c.magenta>也就是列表的最后一个按钮</c>


152
00:08:23,937 --> 00:08:26,139
<c.magenta>然而 如果我们询问根视图控制器</c>


153
00:08:26,206 --> 00:08:29,076
<c.magenta>这次它优先的聚焦环境</c>


154
00:08:29,543 --> 00:08:32,078
<c.magenta>它仍然会把我们指引到第一个默认按钮</c>


155
00:08:33,313 --> 00:08:37,284
<c.magenta>然而焦点引擎自动记录最后聚焦的项目</c>


156
00:08:38,751 --> 00:08:40,554
<c.magenta>所以当转变完成之后</c>


157
00:08:40,621 --> 00:08:43,490
<c.magenta>它自动恢复焦点到最后那个按钮</c>


158
00:08:43,590 --> 00:08:45,025
<c.magenta>这是用户希望的</c>


159
00:08:46,727 --> 00:08:48,929
<c.magenta>这是在tvOS 9中扩展的行为</c>


160
00:08:51,331 --> 00:08:54,101
<c.magenta>虽然这基本上总是用户</c>


161
00:08:54,168 --> 00:08:57,371
<c.magenta>和开发者想要的行为</c>


162
00:08:57,437 --> 00:09:01,175
<c.magenta>有一些情况下 你可能想要</c>
<c.magenta>恢复焦点到你用户界面的其他部分</c>


163
00:09:02,109 --> 00:09:05,045
<c.magenta>比如当显示详情视图时</c>


164
00:09:05,579 --> 00:09:07,648
<c.magenta>应用的底层数据变了</c>


165
00:09:07,714 --> 00:09:09,516
<c.magenta>所以最后的按钮现在含有</c>


166
00:09:09,583 --> 00:09:12,853
<c.magenta>和之前相比一个完全不同的动作或数据</c>


167
00:09:12,986 --> 00:09:16,323
<c.magenta>这种情况下用户可能不希望焦点</c>


168
00:09:16,390 --> 00:09:18,091
<c.magenta>自动恢复到最后一项上</c>


169
00:09:19,826 --> 00:09:21,595
<c.magenta>这种情况 我们希望焦点引擎</c>


170
00:09:22,196 --> 00:09:25,265
<c.magenta>使用你的视图控制器优先的焦点环境</c>


171
00:09:25,799 --> 00:09:28,435
<c.magenta>来决定焦点应当被恢复到哪</c>


172
00:09:28,802 --> 00:09:30,737
<c.magenta>tvOS 10中我们提供一个API</c>


173
00:09:30,804 --> 00:09:32,472
<c.magenta>允许你这么做</c>


174
00:09:33,841 --> 00:09:36,577
<c.magenta>叫做restoresFocusAfterTransition</c>


175
00:09:37,344 --> 00:09:40,647
<c.magenta>是UIViewController</c>
<c.magenta>定义的布尔型属性</c>


176
00:09:41,715 --> 00:09:43,283
<c.magenta>它的工作方式很简单</c>


177
00:09:43,750 --> 00:09:44,952
<c.magenta>如果设置成真</c>


178
00:09:45,419 --> 00:09:47,788
<c.magenta>视图控制器会用默认行为</c>


179
00:09:47,855 --> 00:09:49,423
<c.magenta>它会告诉焦点引擎</c>


180
00:09:49,656 --> 00:09:53,327
<c.magenta>使用引擎默认行为来恢复焦点</c>
<c.magenta>到最后一个元素</c>


181
00:09:53,393 --> 00:09:55,696
<c.magenta>在转变发生前被聚焦的</c>


182
00:09:56,496 --> 00:09:57,998
<c.magenta>如果设为假</c>


183
00:09:58,065 --> 00:10:00,234
<c.magenta>焦点引擎就会转而询问</c>


184
00:10:00,300 --> 00:10:03,070
<c.magenta>你的视图控制器的</c>
<c.magenta>preferredFocusEnvironments</c>


185
00:10:03,370 --> 00:10:08,008
<c.magenta>给你的应用一个机会来控制</c>
<c.magenta>将焦点转到屏幕的哪里</c>


186
00:10:09,443 --> 00:10:11,912
<c.magenta>这个属性默认被设置成真来维持</c>


187
00:10:12,112 --> 00:10:13,547
<c.magenta>前面的默认行为</c>


188
00:10:14,781 --> 00:10:18,118
<c.magenta>它影响视图控制器的显示</c>
<c.magenta>像我们刚才谈到的</c>


189
00:10:18,218 --> 00:10:21,989
<c.magenta>和其他普通的内置的视图控制器转化</c>


190
00:10:22,589 --> 00:10:26,527
<c.magenta>比如浏览弹出窗口和来回移动焦点</c>


191
00:10:26,593 --> 00:10:28,662
<c.magenta>在你的视图和标签页条之间</c>


192
00:10:29,897 --> 00:10:31,899
<c.magenta>我们推荐当使用这个属性时</c>


193
00:10:32,466 --> 00:10:35,035
<c.magenta>永远设置成真或假</c>


194
00:10:35,469 --> 00:10:37,471
<c.magenta>所以在你视图控制器中的焦点更新</c>


195
00:10:37,538 --> 00:10:40,607
<c.magenta>是一种统一可预测的方式</c>


196
00:10:41,775 --> 00:10:43,710
<c.magenta>我们希望这个属性能帮你解决</c>


197
00:10:43,777 --> 00:10:46,313
<c.magenta>你在应用里遇到的一些棘手的边缘情况</c>


198
00:10:49,216 --> 00:10:50,817
<c.magenta>为了向你展示怎样使用这两属性</c>


199
00:10:50,884 --> 00:10:52,152
<c.magenta>我们刚刚谈到我想要邀请</c>


200
00:10:52,219 --> 00:10:54,555
<c.magenta>我的同事Brandon</c>
<c.magenta>来做一个快速演示</c>


201
00:11:06,466 --> 00:11:07,334
<c.magenta>大家好</c>


202
00:11:07,401 --> 00:11:09,303
<c.magenta>我是Brandon</c>
<c.magenta>今天要向你们展示</c>


203
00:11:09,369 --> 00:11:13,941
<c.magenta>怎样利用一些tvOS 10中</c>
<c.magenta>新的焦点API</c>


204
00:11:15,342 --> 00:11:17,244
<c.magenta>我开发了一个简单的日历应用</c>


205
00:11:17,311 --> 00:11:19,413
<c.magenta>目前为止它进展良好</c>


206
00:11:19,913 --> 00:11:22,082
<c.magenta>你可以看到在指定星期里的事件</c>


207
00:11:22,349 --> 00:11:25,485
<c.magenta>你可以用下一个和上一个按钮</c>
<c.magenta>在星期之间切换</c>


208
00:11:26,486 --> 00:11:29,957
<c.magenta>现在当应用启动时</c>
<c.magenta>我们最开始聚焦在上一个按钮</c>


209
00:11:30,657 --> 00:11:33,160
<c.magenta>我认为这会是更好的体验</c>


210
00:11:33,227 --> 00:11:35,128
<c.magenta>如果我们聚焦在用户的下一个事件</c>


211
00:11:35,662 --> 00:11:37,297
<c.magenta>现让我们修改应用来做</c>


212
00:11:40,167 --> 00:11:41,401
<c.magenta>要定位焦点</c>


213
00:11:41,468 --> 00:11:44,638
<c.magenta>我们需要覆盖</c>
<c.magenta>preferredFocusEnvironments属性</c>


214
00:11:45,639 --> 00:11:47,708
<c.magenta>这返回一个UIFocusEnvironment</c>
<c.magenta>数组</c>


215
00:11:47,774 --> 00:11:49,643
<c.magenta>给焦点引擎来搜索</c>


216
00:11:50,077 --> 00:11:53,780
<c.magenta>我们首先添加这周将到来的事件到数组</c>


217
00:11:54,448 --> 00:11:56,116
<c.magenta>如果我们没有更多即将到来的事</c>


218
00:11:56,450 --> 00:11:58,619
<c.magenta>那么我们想要焦点默认为下一个按钮</c>


219
00:11:58,919 --> 00:12:00,954
<c.magenta>所以我们会把它也加入数组</c>


220
00:12:01,622 --> 00:12:03,790
<c.magenta>现在让我们运行它 看它是否工作</c>


221
00:12:11,431 --> 00:12:13,534
<c.magenta>好的 这次当应用启动时</c>


222
00:12:13,600 --> 00:12:16,937
<c.magenta>我们聚焦到我将要在这次会话</c>
<c.magenta>结束后举办的超级秘密派对</c>


223
00:12:17,137 --> 00:12:19,773
<c.magenta>我想知道如果我取消该派对会发生什么</c>


224
00:12:20,407 --> 00:12:21,775
<c.magenta>当一个事件取消时</c>


225
00:12:21,875 --> 00:12:24,077
<c.magenta>它变灰而且无法聚焦</c>


226
00:12:25,045 --> 00:12:27,648
<c.magenta>我想要焦点到下一个事件</c>


227
00:12:27,714 --> 00:12:29,483
<c.magenta>也就是明天早上的tvOS实验室</c>


228
00:12:30,150 --> 00:12:31,718
<c.magenta>但好的开发者总测试他们的代码</c>


229
00:12:31,785 --> 00:12:33,153
<c.magenta>所以让我们试一试</c>


230
00:12:35,189 --> 00:12:36,857
<c.magenta>我会来到我的AppDelegate</c>


231
00:12:36,924 --> 00:12:41,428
<c.magenta>取消我的不是这么秘密的派对</c>
<c.magenta>然后重新运行应用</c>


232
00:12:48,001 --> 00:12:50,871
<c.magenta>好的 像我们预料的 当应用启动后</c>


233
00:12:50,938 --> 00:12:52,306
<c.magenta>我们聚焦到tvOS实验室</c>


234
00:12:53,106 --> 00:12:56,710
<c.magenta>因为我们第一个优先焦点环境不可聚焦</c>


235
00:12:56,777 --> 00:12:59,880
<c.magenta>焦点引擎移动到下一个优先焦点系统</c>


236
00:12:59,947 --> 00:13:02,416
<c.magenta>我们不需要修改任何代码来这么做</c>


237
00:13:02,482 --> 00:13:04,418
<c.magenta>焦点引擎为我们处理这些</c>


238
00:13:05,385 --> 00:13:07,821
<c.magenta>现在如果你想要看一个事件的详情</c>


239
00:13:07,888 --> 00:13:10,057
<c.magenta>你可以选择它来显示详情页</c>


240
00:13:10,490 --> 00:13:12,192
<c.magenta>从这你可以从左向右滑动来去</c>


241
00:13:12,259 --> 00:13:13,627
<c.magenta>到下一个或上一个事件</c>


242
00:13:15,162 --> 00:13:17,331
<c.magenta>我从beta版用户那收到了错误报告</c>


243
00:13:17,431 --> 00:13:18,932
<c.magenta>当它们退出视图时</c>


244
00:13:19,333 --> 00:13:22,002
<c.magenta>焦点不在刚刚选择的事件上</c>


245
00:13:22,436 --> 00:13:24,238
<c.magenta>这种情况下我们选择了猛击</c>


246
00:13:24,605 --> 00:13:28,008
<c.magenta>如果我退出 我想要聚焦在猛击上</c>


247
00:13:29,510 --> 00:13:32,045
<c.magenta>然而我们还是聚焦在了tvOS实验室</c>


248
00:13:32,179 --> 00:13:34,815
<c.magenta>这是我们第一个可用的优先焦点环境</c>


249
00:13:35,616 --> 00:13:37,885
<c.magenta>我们要做的是更新我们的</c>
<c.magenta>preferredFocusEnvironments</c>


250
00:13:37,951 --> 00:13:39,853
<c.magenta>代码来返回我们选择的事件</c>


251
00:13:40,354 --> 00:13:41,989
<c.magenta>做为我们首选焦点环境</c>


252
00:13:43,924 --> 00:13:45,959
<c.magenta>让我们回到CalendarViewController</c>


253
00:13:46,026 --> 00:13:48,228
<c.magenta>在此有selectedEventView属性</c>


254
00:13:48,462 --> 00:13:51,865
<c.magenta>当我们在详情页是追踪所选事件</c>


255
00:13:52,766 --> 00:13:54,835
<c.magenta>如果这个属性存在 我将返回它</c>


256
00:13:54,902 --> 00:13:56,770
<c.magenta>作为我的第一个首选焦点环境</c>


257
00:13:58,539 --> 00:14:01,108
<c.magenta>好的 让我们运行它 看是否工作</c>


258
00:14:06,146 --> 00:14:08,282
<c.magenta>好的 我会选择tvOS实验室</c>


259
00:14:08,515 --> 00:14:11,385
<c.magenta>移动选择到猛击然后退出</c>


260
00:14:12,019 --> 00:14:14,087
<c.magenta>我们还是聚焦在tvOS实验室</c>


261
00:14:14,721 --> 00:14:17,891
<c.magenta>记得Matt在这会话早些时候提到过</c>


262
00:14:18,091 --> 00:14:20,360
<c.magenta>根据默认焦点引擎不询问</c>


263
00:14:20,427 --> 00:14:22,196
<c.magenta>你的preferredFocusEnvironments</c>


264
00:14:22,296 --> 00:14:24,898
<c.magenta>当从视图控制器中恢复时</c>


265
00:14:25,465 --> 00:14:26,667
<c.magenta>要改变这个行为</c>


266
00:14:27,067 --> 00:14:30,037
<c.magenta>我们需要设置</c>
<c.magenta>restoresFocusAfterTransition属性</c>


267
00:14:30,103 --> 00:14:30,938
<c.magenta>为假</c>


268
00:14:32,573 --> 00:14:34,775
<c.magenta>让我们修改我们的代码</c>


269
00:14:35,342 --> 00:14:37,778
<c.magenta>然后重新运行应用 看它这次是否工作</c>


270
00:14:44,084 --> 00:14:46,353
<c.magenta>我们会选择我们的tvOS实验室事件</c>


271
00:14:47,054 --> 00:14:49,523
<c.magenta>移动我们的选择到猛击然后退出</c>


272
00:14:49,857 --> 00:14:51,959
<c.magenta>很好 现在我们聚焦在猛击上</c>


273
00:14:52,025 --> 00:14:53,861
<c.magenta>这正是我们想要的</c>


274
00:14:54,728 --> 00:14:56,797
<c.magenta>通过使用preferredFocusEnvironments</c>


275
00:14:56,864 --> 00:14:59,166
<c.magenta>和restoresFocusAfterTransition属性</c>


276
00:14:59,266 --> 00:15:02,169
<c.magenta>我们可以向用户提供更好的体验</c>


277
00:15:02,769 --> 00:15:04,938
<c.magenta>现在我想要邀请Matt回到台上</c>


278
00:15:10,177 --> 00:15:11,078
<c.magenta>谢谢Brandon</c>


279
00:15:11,545 --> 00:15:12,846
<c.magenta>这是一个很棒的演示</c>


280
00:15:13,213 --> 00:15:14,781
<c.magenta>用这两个新属性</c>


281
00:15:14,848 --> 00:15:17,551
<c.magenta>我们希望减少你的应用代码的复杂度</c>


282
00:15:18,151 --> 00:15:20,153
<c.magenta>并提供更好的用户体验</c>


283
00:15:22,489 --> 00:15:24,057
<c.magenta>接下来</c>


284
00:15:24,825 --> 00:15:26,393
<c.magenta>我很高兴地宣布</c>


285
00:15:27,060 --> 00:15:30,964
<c.magenta>我们把焦点互动的支持</c>
<c.magenta>直接带入SpriteKit</c>


286
00:15:32,900 --> 00:15:34,601
<c.magenta>在tvOS 10之前</c>


287
00:15:34,668 --> 00:15:38,238
<c.magenta>SpriteKit开发者不得不手动</c>
<c.magenta>实现焦点互动</c>


288
00:15:38,338 --> 00:15:41,508
<c.magenta>在它们的SpriteKit游戏中</c>
<c.magenta>通过手动追踪</c>


289
00:15:41,575 --> 00:15:45,579
<c.magenta>它们自己的状态和直接处理用户事件</c>


290
00:15:47,848 --> 00:15:51,218
<c.magenta>但是现在在tvOS 10中</c>
<c.magenta>我们扩展了焦点API</c>


291
00:15:51,518 --> 00:15:53,620
<c.magenta>你在UIKit中使用相同的API</c>


292
00:15:53,987 --> 00:15:56,723
<c.magenta>来支持SpriteKit游戏</c>


293
00:15:58,759 --> 00:16:01,695
<c.magenta>但首先 这对什么有用？</c>


294
00:16:04,364 --> 00:16:08,302
<c.magenta>第一个也是最显然的焦点互动使用案例</c>


295
00:16:08,502 --> 00:16:10,938
<c.magenta>在游戏中是游戏菜单</c>


296
00:16:12,105 --> 00:16:15,209
<c.magenta>用户希望游戏中的菜单</c>


297
00:16:15,609 --> 00:16:19,413
<c.magenta>感觉和行为和其他系统应用的菜单相似</c>


298
00:16:21,281 --> 00:16:25,052
<c.magenta>焦点互动模型也对棋盘游戏有意义</c>


299
00:16:25,519 --> 00:16:28,155
<c.magenta>用户在一个二维的游戏盘上浏览</c>


300
00:16:28,589 --> 00:16:31,758
<c.magenta>在游戏盘上选择一些东西</c>
<c.magenta>可能移动它们</c>


301
00:16:31,992 --> 00:16:35,095
<c.magenta>其实焦点互动对任意种类游戏都有意义</c>


302
00:16:35,696 --> 00:16:38,799
<c.magenta>当选择是游戏的核心机制时</c>


303
00:16:39,633 --> 00:16:41,068
<c.magenta>在任意使用案例中</c>


304
00:16:41,134 --> 00:16:44,037
<c.magenta>用户也会希望浏览和选择</c>


305
00:16:44,338 --> 00:16:46,607
<c.magenta>和系统的聚焦行为感觉相似</c>


306
00:16:47,174 --> 00:16:51,144
<c.magenta>否则你的应用可能令人觉得</c>
<c.magenta>奇怪或损坏 不直观</c>


307
00:16:53,380 --> 00:16:54,915
<c.magenta>要帮助这种情况</c>


308
00:16:55,883 --> 00:16:58,252
<c.magenta>我们扩展了焦点API</c>


309
00:16:58,452 --> 00:17:02,122
<c.magenta>你在UIKit习惯了它们</c>
<c.magenta>它们现也可用在SpriteKit中</c>


310
00:17:02,389 --> 00:17:04,892
<c.magenta>这是一个共享的API</c>


311
00:17:04,958 --> 00:17:09,695
<c.magenta>这意味着SKNode现在可以聚焦</c>


312
00:17:10,631 --> 00:17:14,468
<c.magenta>并利用所有焦点引擎的内置功能</c>


313
00:17:16,036 --> 00:17:18,204
<c.magenta>UIKit和SpriteKit</c>
<c.magenta>被集成了</c>


314
00:17:18,539 --> 00:17:21,808
<c.magenta>允许焦点在你的视图和节点间自由移动</c>


315
00:17:21,875 --> 00:17:24,545
<c.magenta>你不需要自己处理使用案例</c>


316
00:17:26,547 --> 00:17:29,249
<c.magenta>这是怎么工作的？</c>


317
00:17:31,351 --> 00:17:34,688
<c.magenta>首先 让我们看看</c>
<c.magenta>焦点是怎么在UIViews上工作的</c>


318
00:17:35,322 --> 00:17:39,126
<c.magenta>在tvOS 10之前</c>
<c.magenta>UIViews是仅有的用户界面元素</c>


319
00:17:39,193 --> 00:17:40,961
<c.magenta>可以被聚焦</c>


320
00:17:41,261 --> 00:17:43,063
<c.magenta>它们定义了它们的可聚焦性</c>


321
00:17:43,130 --> 00:17:45,666
<c.magenta>通过canBecomeFocused属性</c>


322
00:17:47,734 --> 00:17:49,903
<c.magenta>UIViews还遵守</c>


323
00:17:50,838 --> 00:17:52,639
<c.magenta>UIFocusEnvironment协议</c>


324
00:17:53,473 --> 00:17:56,510
<c.magenta>这允许视图获得焦点更新通知</c>


325
00:17:56,577 --> 00:17:58,645
<c.magenta>并控制焦点的行为</c>


326
00:17:58,712 --> 00:18:00,514
<c.magenta>在它们的子视图结构中</c>


327
00:18:01,315 --> 00:18:03,550
<c.magenta>要支持SpriteKit焦点</c>


328
00:18:04,184 --> 00:18:07,788
<c.magenta>我们想把相同功能带到SKNode</c>


329
00:18:08,222 --> 00:18:10,224
<c.magenta>我们做了一些改变来支持这一点</c>


330
00:18:10,657 --> 00:18:12,559
<c.magenta>我们抽象这个相同功能</c>


331
00:18:12,626 --> 00:18:15,629
<c.magenta>到它们自己的叫做</c>
<c.magenta>UIFocusItem协议中</c>


332
00:18:17,865 --> 00:18:20,734
<c.magenta>这个协议定义canBecomeFocused属性</c>


333
00:18:21,602 --> 00:18:24,505
<c.magenta>并遵守UIFocusEnvironment协议</c>


334
00:18:26,440 --> 00:18:28,742
<c.magenta>下一个 我们重构了UIView</c>


335
00:18:29,343 --> 00:18:30,811
<c.magenta>并扩展了SKNode</c>


336
00:18:30,978 --> 00:18:32,813
<c.magenta>来遵守新的协议</c>


337
00:18:33,714 --> 00:18:35,782
<c.magenta>这允许UIView和SKNode</c>


338
00:18:35,949 --> 00:18:37,885
<c.magenta>共享这同样的API</c>


339
00:18:38,652 --> 00:18:42,489
<c.magenta>而不要求你对已有的UIKit代码</c>
<c.magenta>做任何改变</c>


340
00:18:44,591 --> 00:18:47,060
<c.magenta>我们还对焦点API的其他部分</c>
<c.magenta>做了增加</c>


341
00:18:47,127 --> 00:18:50,497
<c.magenta>利用新的UIFocusItem协议</c>


342
00:18:52,399 --> 00:18:55,102
<c.magenta>首先让我们看一看</c>
<c.magenta>UIFocusUpdateContext类</c>


343
00:18:55,335 --> 00:18:57,437
<c.magenta>它提供上下文信息</c>


344
00:18:57,504 --> 00:18:59,439
<c.magenta>在焦点更新通知中</c>


345
00:19:00,807 --> 00:19:03,477
<c.magenta>为了支持焦点更新</c>
<c.magenta>到SpriteKit节点</c>


346
00:19:03,710 --> 00:19:06,747
<c.magenta>我们引入了2个新的</c>
<c.magenta>基于UIFocusItem的属性</c>


347
00:19:07,414 --> 00:19:10,117
<c.magenta>previouslyFocusedItem</c>
<c.magenta>和nextFocusedItem</c>


348
00:19:10,817 --> 00:19:13,954
<c.magenta>这告诉你什么被包括在这次更新中</c>


349
00:19:14,955 --> 00:19:17,457
<c.magenta>我们对UIScreen进行了类似的改变</c>


350
00:19:17,824 --> 00:19:20,160
<c.magenta>引入了一个新的focusedItem属性</c>


351
00:19:20,227 --> 00:19:22,663
<c.magenta>它返回一个</c>
<c.magenta>UIFocusItem类的对象</c>


352
00:19:22,930 --> 00:19:27,434
<c.magenta>这允许你的应用在任何时候都可以</c>
<c.magenta>查询当前聚焦的元素</c>


353
00:19:29,903 --> 00:19:32,339
<c.magenta>还有一个API的改变也值得提到</c>


354
00:19:32,406 --> 00:19:34,608
<c.magenta>但这需要一点背景</c>


355
00:19:34,908 --> 00:19:37,644
<c.magenta>在tvOS 9中</c>
<c.magenta>UIFocusItem协议</c>


356
00:19:38,245 --> 00:19:40,981
<c.magenta>定义了preferredFocusView属性</c>


357
00:19:42,416 --> 00:19:46,720
<c.magenta>在tvOS 10之前</c>
<c.magenta>应用就是这么定义其焦点偏好</c>


358
00:19:46,954 --> 00:19:48,889
<c.magenta>像我们之前讨论的</c>


359
00:19:49,723 --> 00:19:51,825
<c.magenta>但是你可能看到这有一个问题</c>


360
00:19:51,892 --> 00:19:54,194
<c.magenta>那就是它返回类型是UIView</c>


361
00:19:54,661 --> 00:19:56,697
<c.magenta>如果我们要支持SpriteKit</c>


362
00:19:57,497 --> 00:20:01,034
<c.magenta>我们将在SKNode里定义焦点偏好</c>


363
00:20:01,502 --> 00:20:03,237
<c.magenta>所以这行不通</c>


364
00:20:04,671 --> 00:20:07,274
<c.magenta>幸运的是 在这个演讲的早些时候</c>


365
00:20:07,741 --> 00:20:10,244
<c.magenta>我们介绍了新的</c>
<c.magenta>preferredFocusEnvironments属性</c>


366
00:20:10,310 --> 00:20:12,145
<c.magenta>它做相同的事</c>


367
00:20:12,446 --> 00:20:15,516
<c.magenta>但因为它返回一个</c>
<c.magenta>UIFocusEnvironment数组</c>


368
00:20:15,582 --> 00:20:19,253
<c.magenta>且现在SKNode遵守</c>
<c.magenta>UIFocusEnvironment协议</c>


369
00:20:20,521 --> 00:20:22,756
<c.magenta>我们可以定义视图焦点偏好</c>


370
00:20:22,923 --> 00:20:25,826
<c.magenta>视图控制器 SKNode 任何对象</c>


371
00:20:25,926 --> 00:20:28,028
<c.magenta>只要它遵守UIFocusEnvironment</c>


372
00:20:28,395 --> 00:20:30,364
<c.magenta>这使得定义焦点偏好</c>


373
00:20:30,430 --> 00:20:32,966
<c.magenta>在你的环境中更加容易和简洁</c>


374
00:20:34,201 --> 00:20:36,103
<c.magenta>因为preferredFocusEnvironments</c>


375
00:20:36,470 --> 00:20:39,039
<c.magenta>处理所有preferredFocusView</c>
<c.magenta>处理的使用案例</c>


376
00:20:39,106 --> 00:20:42,009
<c.magenta>还提供我们说到的其他好处</c>


377
00:20:42,376 --> 00:20:45,145
<c.magenta>在tvOS 10中我们要</c>
<c.magenta>弃用preferredFocusView</c>


378
00:20:46,680 --> 00:20:49,983
<c.magenta>若你现在应用中</c>
<c.magenta>使用preferredFocusView</c>


379
00:20:50,784 --> 00:20:54,188
<c.magenta>我们建议更改成</c>
<c.magenta>preferredFocusEnvironments</c>


380
00:20:55,422 --> 00:20:56,823
<c.magenta>我们认为这很有帮助</c>


381
00:20:58,659 --> 00:21:01,261
<c.magenta>这就是SpriteKit里的</c>
<c.magenta>焦点互动支持</c>


382
00:21:02,129 --> 00:21:04,965
<c.magenta>焦点API现在支持通用的焦点元素</c>


383
00:21:05,032 --> 00:21:06,967
<c.magenta>通过用新UIFocusItem协议</c>


384
00:21:07,701 --> 00:21:10,571
<c.magenta>UIView和SKNode</c>
<c.magenta>都遵守这个协议</c>


385
00:21:11,538 --> 00:21:13,907
<c.magenta>对于SpriteKit开发者</c>


386
00:21:13,974 --> 00:21:16,109
<c.magenta>你可以开始支持焦点来利用</c>


387
00:21:16,176 --> 00:21:18,245
<c.magenta>焦点引擎的所有功能</c>


388
00:21:19,079 --> 00:21:22,316
<c.magenta>对不在他们的应用里使用</c>
<c.magenta>SpriteKit的UIKit开发者</c>


389
00:21:23,016 --> 00:21:24,418
<c.magenta>不需要任何改变</c>


390
00:21:24,484 --> 00:21:26,753
<c.magenta>基于视图的API除了</c>


391
00:21:26,820 --> 00:21:30,691
<c.magenta>preferredFocusView仍然</c>
<c.magenta>可以使用来为你提供方便</c>


392
00:21:31,525 --> 00:21:34,862
<c.magenta>但是我们鼓励你开始使用新API</c>


393
00:21:35,095 --> 00:21:37,865
<c.magenta>在你的代码中来利用</c>


394
00:21:37,965 --> 00:21:41,201
<c.magenta>更通用的和未来的功能</c>


395
00:21:44,204 --> 00:21:47,074
<c.magenta>更多细节 关于你要做什么来加入</c>


396
00:21:47,140 --> 00:21:49,176
<c.magenta>焦点支持到SpriteKit游戏中</c>


397
00:21:49,376 --> 00:21:52,579 line:1
<c.magenta>我们建议观看这周</c>
<c.magenta>关于 SpriteKit新特性介绍</c>


398
00:21:53,046 --> 00:21:56,483 line:1
<c.magenta>他们会讲更多你需要做什么的细节</c>


399
00:21:57,885 --> 00:22:01,021
<c.magenta>这就是SpriteKit焦点互动</c>
<c.magenta>支持的内容</c>


400
00:22:04,258 --> 00:22:06,894
<c.magenta>那即是我们对tvOS 10</c>
<c.magenta>新特性的概览</c>


401
00:22:06,960 --> 00:22:10,063
<c.magenta>在接下来的部分中 我们要深入地</c>


402
00:22:10,163 --> 00:22:13,867
<c.magenta>用案例分析来讲解怎么创建一个</c>
<c.magenta>完全可定制可聚焦的控制</c>


403
00:22:15,302 --> 00:22:19,039
<c.magenta>作为今天的例子</c>
<c.magenta>我们将用一个五星评级控制</c>


404
00:22:20,707 --> 00:22:23,710
<c.magenta>现在我们已经做了一些工作而且</c>
<c.magenta>我们已经完成了该控制的初稿</c>


405
00:22:23,777 --> 00:22:26,013
<c.magenta>我想要向你们展示它</c>


406
00:22:27,080 --> 00:22:31,151
<c.magenta>我们只用了普通的UIButton类</c>
<c.magenta>并显示评级</c>


407
00:22:31,485 --> 00:22:32,753
<c.magenta>作为按钮的标题</c>


408
00:22:32,819 --> 00:22:35,389
<c.magenta>如果你选择这个按钮</c>
<c.magenta>它会增加评级</c>


409
00:22:35,455 --> 00:22:39,026
<c.magenta>如果你不停地按按钮</c>
<c.magenta>它会在所有可能的评级中循环</c>


410
00:22:40,761 --> 00:22:42,296
<c.magenta>这是对的</c>


411
00:22:43,197 --> 00:22:45,299
<c.magenta>这给我们需要的功能</c>


412
00:22:45,766 --> 00:22:47,968
<c.magenta>但我们想把我们的应用带到下一个层次</c>


413
00:22:48,035 --> 00:22:51,004
<c.magenta>这个控制 它是好的但是不有趣</c>


414
00:22:51,071 --> 00:22:52,706
<c.magenta>它的互动性不好</c>


415
00:22:53,373 --> 00:22:55,409
<c.magenta>我们对此思考了很久</c>


416
00:22:55,475 --> 00:22:58,278
<c.magenta>我们想出了一个新设计</c>
<c.magenta>这是它看起来的样子</c>


417
00:23:01,181 --> 00:23:02,449
<c.magenta>它好多了</c>


418
00:23:02,516 --> 00:23:04,585
<c.magenta>不是只说一星或二星</c>


419
00:23:04,785 --> 00:23:07,754
<c.magenta>我们现在视觉上用真正的星来表示评级</c>


420
00:23:08,322 --> 00:23:10,858
<c.magenta>当你选择控制时 你进入模编辑式</c>


421
00:23:10,924 --> 00:23:12,926
<c.magenta>在这你可以用焦点系统</c>


422
00:23:13,193 --> 00:23:15,562
<c.magenta>来在星中改变我们的评级</c>


423
00:23:15,629 --> 00:23:17,698
<c.magenta>当我们完成时 只需再按一次选择</c>


424
00:23:17,998 --> 00:23:19,633
<c.magenta>然后我们退出编辑模式</c>


425
00:23:20,334 --> 00:23:22,870
<c.magenta>这是一个很好的控制被优化的例子</c>


426
00:23:22,936 --> 00:23:25,472
<c.magenta>对于焦点系统</c>
<c.magenta>而且我们会详细解释</c>


427
00:23:25,672 --> 00:23:29,109
<c.magenta>完全从头开始使用焦点API</c>
<c.magenta>创建这个控制</c>


428
00:23:29,343 --> 00:23:32,145
<c.magenta>为此 我把讲台交回给Brandon</c>


429
00:23:43,423 --> 00:23:44,958
<c.magenta>好的 谢谢 Matt</c>


430
00:23:45,592 --> 00:23:46,927
<c.magenta>我有一个项目</c>


431
00:23:47,027 --> 00:23:49,096
<c.magenta>包含我们的简单按钮控制</c>


432
00:23:49,229 --> 00:23:52,266 line:1
<c.magenta>但它看起来没Matt展示的那么好看</c>


433
00:23:52,366 --> 00:23:53,700 line:1
<c.magenta>所以让我们删掉它</c>


434
00:23:54,735 --> 00:23:56,570 line:1
<c.magenta>让我们拖入一个视图</c>


435
00:23:58,639 --> 00:24:00,140 line:1
<c.magenta>来代表我们的新控制</c>


436
00:24:01,542 --> 00:24:03,410 line:1
<c.magenta>我们会快速的对它设置一些限制</c>


437
00:24:03,477 --> 00:24:08,182 line:1
<c.magenta>从顶部100点 宽度650</c>
<c.magenta>高度150</c>


438
00:24:09,516 --> 00:24:12,052 line:1
<c.magenta>在窗口里水平居中</c>


439
00:24:13,720 --> 00:24:14,555 line:1
<c.magenta>好的</c>


440
00:24:15,055 --> 00:24:17,691 line:1
<c.magenta>现在我已经创建了一个评级控制类</c>


441
00:24:17,791 --> 00:24:19,026 line:1
<c.magenta>来代表这个控制</c>


442
00:24:19,426 --> 00:24:21,628 line:1
<c.magenta>所以让我们把它作为一个视图类</c>


443
00:24:23,263 --> 00:24:25,499 line:1
<c.magenta>让我们看看这个评级控制类</c>


444
00:24:28,135 --> 00:24:29,870
<c.magenta>从UIControl中选取一子类</c>


445
00:24:29,937 --> 00:24:32,606
<c.magenta>因为它免费提供很多功能</c>


446
00:24:32,873 --> 00:24:36,143
<c.magenta>比如它判断是否能聚焦一个控制</c>


447
00:24:36,543 --> 00:24:37,744
<c.magenta>根据它的启用状态</c>


448
00:24:38,345 --> 00:24:41,548
<c.magenta>但是它没有聚焦/失焦的外观</c>


449
00:24:41,615 --> 00:24:43,217
<c.magenta>我们需要自己提供它</c>


450
00:24:43,417 --> 00:24:44,618
<c.magenta>让我们开始做这个</c>


451
00:24:45,953 --> 00:24:48,922
<c.magenta>我们从添加圆角半径和背景色开始</c>


452
00:24:49,756 --> 00:24:53,727
<c.magenta>在语境中用协调器</c>
<c.magenta>覆盖didUpdateFocus</c>


453
00:24:53,894 --> 00:24:56,296 line:1
<c.magenta>来提供聚焦和失焦的外观</c>


454
00:24:56,797 --> 00:24:59,633
<c.magenta>如果下一个聚焦项目是我们的控制</c>


455
00:24:59,700 --> 00:25:01,602
<c.magenta>那么我们会设置聚焦的外观</c>


456
00:25:01,668 --> 00:25:04,238
<c.magenta>包括缩放视图 增加阴影</c>


457
00:25:04,605 --> 00:25:06,340
<c.magenta>和改变背景颜色</c>


458
00:25:06,773 --> 00:25:09,109
<c.magenta>如果前一个聚焦的项目是我们的控制</c>


459
00:25:09,543 --> 00:25:12,346
<c.magenta>我们会设置失焦的视图或外观</c>


460
00:25:12,412 --> 00:25:14,281
<c.magenta>会重置所有属性</c>


461
00:25:15,582 --> 00:25:18,919
<c.magenta>在我运行它之前 我还想要增加</c>
<c.magenta>motion效果到我们的控制中</c>


462
00:25:19,219 --> 00:25:22,022 line:1
<c.magenta>Motion效果使应用更有响应性</c>


463
00:25:22,322 --> 00:25:25,158 line:1
<c.magenta>并帮助用户在屏幕上找到聚焦的项目</c>


464
00:25:26,560 --> 00:25:28,695 line:1
<c.magenta>要这么做 我会创建一个</c>
<c.magenta>motionEffectGroup</c>


465
00:25:28,762 --> 00:25:30,764 line:1
<c.magenta>来增加水平和垂直motion</c>


466
00:25:30,998 --> 00:25:33,267 line:1
<c.magenta>当在触摸界面上移动我的手指时</c>


467
00:25:34,134 --> 00:25:36,770 line:1
<c.magenta>现在我往回 当我们的控制被聚焦</c>


468
00:25:37,538 --> 00:25:41,041 line:1
<c.magenta>我将增加motion效果</c>
<c.magenta>当它失焦时</c>


469
00:25:41,475 --> 00:25:43,143
<c.magenta>我将移除motion效果</c>


470
00:25:43,911 --> 00:25:47,414 line:1
<c.magenta>我在addCoordinatedAnimations</c>
<c.magenta>中进行所有的更改</c>


471
00:25:47,814 --> 00:25:51,084 line:1
<c.magenta>这样我们的属性更改会同步</c>


472
00:25:51,151 --> 00:25:52,386
<c.magenta>和我们的聚焦动画</c>


473
00:25:54,121 --> 00:25:55,589
<c.magenta>让我们看看它的外观</c>


474
00:26:04,932 --> 00:26:05,766 line:1
<c.magenta>好的</c>


475
00:26:06,500 --> 00:26:10,437 line:1
<c.magenta>我们目前为止完成了创建一个</c>
<c.magenta>很基本的控制含有聚焦</c>


476
00:26:10,504 --> 00:26:13,140 line:1
<c.magenta>和失焦外观和motion效果</c>


477
00:26:13,207 --> 00:26:15,776 line:1
<c.magenta>所以当我的手指在触摸表面上移动</c>
<c.magenta>时它也会移动</c>


478
00:26:16,910 --> 00:26:18,979 line:1
<c.magenta>但这应该是一个五星评级控制</c>


479
00:26:19,046 --> 00:26:20,614 line:1
<c.magenta>我们还没有任何星</c>


480
00:26:20,881 --> 00:26:22,216 line:1
<c.magenta>让我们添加它</c>


481
00:26:25,519 --> 00:26:27,154 line:1
<c.magenta>首先我们需要添加一些属性</c>


482
00:26:27,221 --> 00:26:28,922 line:1
<c.magenta>来储存我们的控制状态</c>


483
00:26:29,423 --> 00:26:31,391 line:1
<c.magenta>在awakeFromNib函数中</c>


484
00:26:33,260 --> 00:26:35,028
<c.magenta>我们会添加水平堆叠的视图</c>


485
00:26:35,896 --> 00:26:37,497
<c.magenta>在那加入五星</c>


486
00:26:38,332 --> 00:26:41,268
<c.magenta>我已经创建好了星类来节约时间</c>


487
00:26:41,335 --> 00:26:42,703
<c.magenta>但是如果你是跟着看的</c>


488
00:26:42,769 --> 00:26:45,072
<c.magenta>我配置了它们的聚焦外观使用相同的</c>


489
00:26:45,138 --> 00:26:46,240
<c.magenta>和刚看过一样的过程</c>


490
00:26:47,741 --> 00:26:49,510
<c.magenta>现在当用户选择控制时</c>


491
00:26:49,710 --> 00:26:51,945
<c.magenta>我希望他们可以编辑当前评级</c>


492
00:26:52,446 --> 00:26:54,481
<c.magenta>我会添加selectGestureRecognizer</c>


493
00:26:54,882 --> 00:26:55,749
<c.magenta>到我们的控制</c>


494
00:26:56,450 --> 00:26:59,086
<c.magenta>当它被触发时我们切换编辑状态</c>


495
00:26:59,152 --> 00:27:00,354
<c.magenta>并请求一个焦点更新</c>


496
00:27:01,622 --> 00:27:02,856
<c.magenta>当焦点更新发生时</c>


497
00:27:02,923 --> 00:27:04,892
<c.magenta>它询问preferredFocusEnvironments</c>


498
00:27:04,958 --> 00:27:06,426
<c.magenta>所以我们要覆盖那个属性</c>


499
00:27:06,960 --> 00:27:09,863
<c.magenta>如果我们在编辑</c>
<c.magenta>我们会返回我们的starViews</c>


500
00:27:09,930 --> 00:27:11,899
<c.magenta>做为preferredFocusEnvironments</c>


501
00:27:12,232 --> 00:27:14,868
<c.magenta>否则返回父类的实现</c>


502
00:27:16,837 --> 00:27:18,906
<c.magenta>让我们运行它 看看它看起来怎样</c>


503
00:27:23,143 --> 00:27:26,747
<c.magenta>好的 当应用启动时</c>


504
00:27:26,813 --> 00:27:29,249
<c.magenta>我们在控制里有一些星</c>


505
00:27:29,750 --> 00:27:33,620
<c.magenta>当我选择控制 聚焦移动到</c>
<c.magenta>控制里的第一颗星</c>


506
00:27:33,854 --> 00:27:35,155 line:1
<c.magenta>然而 我实际上不能</c>


507
00:27:35,222 --> 00:27:37,391 line:1
<c.magenta>把焦点移到其他星上</c>


508
00:27:38,225 --> 00:27:40,561 line:1
<c.magenta>这是因为星中间有一些空间</c>


509
00:27:40,627 --> 00:27:43,497 line:1
<c.magenta>当我们尝试把焦点向右移动</c>


510
00:27:43,564 --> 00:27:46,500 line:1
<c.magenta>其实我们聚焦到了控制上</c>
<c.magenta>而控制会将焦点导回</c>


511
00:27:46,567 --> 00:27:49,036 line:1
<c.magenta>我们的第一个星</c>
<c.magenta>用preferredFocusEnvironments</c>


512
00:27:49,570 --> 00:27:52,773 line:1
<c.magenta>要改正这个 要确保控制不是可聚焦的</c>


513
00:27:52,840 --> 00:27:54,474 line:1
<c.magenta>当我们编辑时</c>


514
00:27:56,343 --> 00:27:58,445
<c.magenta>让我们覆盖</c>
<c.magenta>canBecomeFocused</c>


515
00:27:58,912 --> 00:28:01,982
<c.magenta>我们会返回假</c>
<c.magenta>如果我们的控制正在编辑</c>


516
00:28:03,684 --> 00:28:05,886
<c.magenta>让我们运行它</c>
<c.magenta>看看是否改正了之前的问题</c>


517
00:28:11,458 --> 00:28:12,926 line:1
<c.magenta>是的 好多了</c>


518
00:28:13,260 --> 00:28:15,362 line:1
<c.magenta>我现在可以在星之间移动</c>


519
00:28:16,363 --> 00:28:19,399 line:1
<c.magenta>但是很难看出当前的评级是什么</c>


520
00:28:19,466 --> 00:28:21,735 line:1
<c.magenta>因为我们没有提供任何视觉反馈</c>


521
00:28:22,069 --> 00:28:25,105 line:1
<c.magenta>要这么做 我们需要更新当前评级</c>


522
00:28:25,172 --> 00:28:26,440 line:1
<c.magenta>当我们的焦点改变时</c>


523
00:28:27,407 --> 00:28:30,911
<c.magenta>让我们回到</c>
<c.magenta>didUpdateFocus函数</c>


524
00:28:31,645 --> 00:28:33,714
<c.magenta>在底部</c>
<c.magenta>如果我们在编辑</c>


525
00:28:34,414 --> 00:28:36,550
<c.magenta>我们会根据索引设置当前的评级</c>


526
00:28:36,617 --> 00:28:38,352
<c.magenta>当前聚焦的starView的索引</c>


527
00:28:40,220 --> 00:28:42,322
<c.magenta>让我们回到当前评级属性</c>


528
00:28:44,958 --> 00:28:46,326
<c.magenta>我们会把它直接绑定到</c>


529
00:28:46,393 --> 00:28:48,829
<c.magenta>starView的</c>
<c.magenta>isSelected属性</c>


530
00:28:49,096 --> 00:28:51,732
<c.magenta>这个属性设置星的背景颜色</c>


531
00:28:53,433 --> 00:28:55,235
<c.magenta>让我们看看它看起来是怎样的</c>


532
00:29:02,042 --> 00:29:06,947 line:1
<c.magenta>好的 现在当我选择控制 很容易看出</c>


533
00:29:07,014 --> 00:29:08,015 line:1
<c.magenta>第一个星被选择了</c>


534
00:29:08,081 --> 00:29:11,852 line:1
<c.magenta>当我移动焦点</c>
<c.magenta>被选择过的星保持被选择状态</c>


535
00:29:11,952 --> 00:29:14,221 line:1
<c.magenta>所以容易看出当前的评级是什么</c>


536
00:29:14,988 --> 00:29:17,157 line:1
<c.magenta>这很好但还不足够优秀</c>


537
00:29:18,292 --> 00:29:20,694 line:1
<c.magenta>现在我们可以把焦点移出控制</c>


538
00:29:21,528 --> 00:29:22,563 line:1
<c.magenta>我不希望能够这样做</c>


539
00:29:22,629 --> 00:29:24,665 line:1
<c.magenta>当我在编辑当前评级时</c>


540
00:29:25,365 --> 00:29:27,568 line:1
<c.magenta>而且 当我选择控制时</c>


541
00:29:27,835 --> 00:29:30,137 line:1
<c.magenta>我总是重置当前评级到一星</c>


542
00:29:30,204 --> 00:29:32,806 line:1
<c.magenta>我认为保持当前评级更好</c>


543
00:29:32,873 --> 00:29:34,975 line:1
<c.magenta>只聚焦到最后一个被选择的星</c>


544
00:29:35,742 --> 00:29:37,344 line:1
<c.magenta>让我们做这些改变</c>


545
00:29:40,380 --> 00:29:44,551
<c.magenta>始于覆盖</c>
<c.magenta>shouldUpdateFocus</c>


546
00:29:44,651 --> 00:29:46,053
<c.magenta>来限制焦点的移动</c>


547
00:29:46,553 --> 00:29:50,123
<c.magenta>如果你在编辑并且下一个聚焦项目</c>


548
00:29:50,190 --> 00:29:52,259
<c.magenta>不是星视图中的</c>
<c.magenta>我们返回假</c>


549
00:29:52,326 --> 00:29:54,761
<c.magenta>来说不 焦点不能移动</c>


550
00:29:56,330 --> 00:29:59,333
<c.magenta>而且在preferredFocusEnvironments</c>
<c.magenta>代码中</c>


551
00:29:59,399 --> 00:30:05,205
<c.magenta>我们想返回我们最后选择的星</c>
<c.magenta>如果我们在编辑</c>


552
00:30:05,272 --> 00:30:07,274
<c.magenta>而且当前评级大于0</c>


553
00:30:07,841 --> 00:30:10,577
<c.magenta>这样我们就不会每次都重置当前评级</c>


554
00:30:11,578 --> 00:30:14,214
<c.magenta>让我们再次运行看看效果</c>


555
00:30:20,654 --> 00:30:22,489 line:1
<c.magenta>好的 我不再能</c>


556
00:30:22,556 --> 00:30:24,525 line:1
<c.magenta>把焦点移出控制</c>


557
00:30:24,591 --> 00:30:28,262 line:1
<c.magenta>当我选择一个控制当前评级维持不变</c>


558
00:30:28,662 --> 00:30:30,631 line:1
<c.magenta>我们聚焦到最后被选择的星</c>


559
00:30:31,765 --> 00:30:33,634 line:1
<c.magenta>这完成了我们的定制控制</c>


560
00:30:33,934 --> 00:30:35,569 line:1
<c.magenta>通过使用焦点API</c>


561
00:30:36,003 --> 00:30:39,039 line:1
<c.magenta>我们可以创建很复杂但很有用的控制</c>


562
00:30:39,806 --> 00:30:41,775 line:1
<c.magenta>我想请Matt回到台上</c>


563
00:30:48,115 --> 00:30:49,082
<c.magenta>谢谢Brandon</c>


564
00:30:49,383 --> 00:30:51,418
<c.magenta>我给那个演示的评级是五星</c>


565
00:30:54,154 --> 00:30:58,825
<c.magenta>好的 我们选择那个演示因为</c>
<c.magenta>它是一个很好的例子</c>


566
00:30:58,892 --> 00:31:01,428
<c.magenta>使用焦点API的多种不同部分</c>


567
00:31:01,795 --> 00:31:05,065
<c.magenta>为了创建一个丰富的焦点互动体验</c>


568
00:31:06,500 --> 00:31:09,036
<c.magenta>这只是Brandon</c>
<c.magenta>向我们展示的这个实现的一部分</c>


569
00:31:09,136 --> 00:31:11,605
<c.magenta>我想要再强调一下</c>


570
00:31:11,672 --> 00:31:14,975
<c.magenta>因为它们对创建好的用户体验很重要</c>


571
00:31:16,543 --> 00:31:19,246
<c.magenta>首选我们有UIControl的子类</c>


572
00:31:19,813 --> 00:31:23,383
<c.magenta>UIControl</c>
<c.magenta>免费提供很多基本的功能</c>


573
00:31:23,717 --> 00:31:27,221
<c.magenta>比如 像Brandon说的</c>
<c.magenta>定义你的控制是否能聚焦</c>


574
00:31:27,287 --> 00:31:29,690
<c.magenta>基于它的IsEnabled属性</c>


575
00:31:31,358 --> 00:31:33,560
<c.magenta>当你创建定制控制时</c>


576
00:31:34,228 --> 00:31:36,196
<c.magenta>你也应创建UIControl的子类</c>


577
00:31:38,632 --> 00:31:41,301
<c.magenta>我们还使用焦点动画协调者</c>


578
00:31:41,368 --> 00:31:45,138
<c.magenta>定义我们的和焦点有关的带动画的改变</c>


579
00:31:45,205 --> 00:31:46,907
<c.magenta>当改变焦点状态时</c>


580
00:31:47,975 --> 00:31:49,576
<c.magenta>这也很重要</c>


581
00:31:49,643 --> 00:31:52,112
<c.magenta>来确保你的焦点动画保持同步</c>


582
00:31:52,379 --> 00:31:55,849
<c.magenta>和用户界面其他部分的其他焦点动画</c>


583
00:31:56,283 --> 00:31:58,151
<c.magenta>我们这么做来确保焦点</c>


584
00:31:58,519 --> 00:32:00,687
<c.magenta>自然地在屏幕上移动</c>


585
00:32:00,821 --> 00:32:03,290
<c.magenta>当用户在不同控制之前移动时</c>


586
00:32:03,857 --> 00:32:06,727
<c.magenta>所以当你为你的焦点外观定义动画时</c>


587
00:32:07,194 --> 00:32:09,563
<c.magenta>请使用焦点动画协调者</c>


588
00:32:11,698 --> 00:32:14,668
<c.magenta>最后一个提示是使用motion效果</c>


589
00:32:15,202 --> 00:32:17,304
<c.magenta>Brandon向我们展示了如何</c>
<c.magenta>使用motion效果</c>


590
00:32:17,437 --> 00:32:19,339
<c.magenta>来创造一点移动</c>


591
00:32:19,573 --> 00:32:21,842
<c.magenta>当拇指放上Siri Remote时</c>


592
00:32:21,909 --> 00:32:25,846
<c.magenta>做一点移动但不足以移动焦点</c>


593
00:32:27,414 --> 00:32:29,716
<c.magenta>你可以用UIMotionEffect API</c>


594
00:32:29,783 --> 00:32:32,085
<c.magenta>来很简单地实现这个行为</c>


595
00:32:33,153 --> 00:32:35,923
<c.magenta>这很重要因为它允许你的用户</c>


596
00:32:35,989 --> 00:32:38,192
<c.magenta>获得和你的应用的直接联系</c>


597
00:32:38,725 --> 00:32:40,127
<c.magenta>他们立刻得到反馈</c>


598
00:32:40,194 --> 00:32:42,496
<c.magenta>一旦开始使用Siri Remote</c>


599
00:32:43,163 --> 00:32:45,933
<c.magenta>这也帮助用户定位屏幕上的焦点</c>


600
00:32:45,999 --> 00:32:47,968
<c.magenta>这样他们可以坐在电视前</c>


601
00:32:48,335 --> 00:32:49,736
<c.magenta>到处摆动遥控器</c>


602
00:32:50,137 --> 00:32:52,606
<c.magenta>聚焦元素马上出现</c>


603
00:32:54,775 --> 00:32:57,144
<c.magenta>在我们结束前 一些关于测试的事</c>


604
00:32:59,213 --> 00:33:02,616
<c.magenta>首先需要指出不是所有输入设备</c>


605
00:33:02,683 --> 00:33:04,117
<c.magenta>都有相同的功能</c>


606
00:33:04,952 --> 00:33:08,088
<c.magenta>这在测试你的定制控制时很重要</c>


607
00:33:08,822 --> 00:33:12,059
<c.magenta>好消息是如果你用焦点API</c>


608
00:33:12,125 --> 00:33:14,995
<c.magenta>来创建你的定制控制</c>
<c.magenta>像我们在演示里做的</c>


609
00:33:15,362 --> 00:33:18,198
<c.magenta>你的控制应与任何输入设备协同运作</c>


610
00:33:18,265 --> 00:33:19,266
<c.magenta>早前说过的输入设备</c>


611
00:33:19,333 --> 00:33:24,304
<c.magenta>游戏控制器 Bluetooth键盘</c>
<c.magenta>Siri Remote和其他</c>


612
00:33:25,639 --> 00:33:28,775
<c.magenta>但不是所有这些输入设备都有相同功能</c>


613
00:33:28,976 --> 00:33:31,111
<c.magenta>如果你的定制控制依赖</c>


614
00:33:31,211 --> 00:33:35,215
<c.magenta>一些定制的事件的处理 比如手势识别</c>


615
00:33:36,717 --> 00:33:40,053
<c.magenta>假设你使用Siri Remote</c>


616
00:33:40,120 --> 00:33:42,789
<c.magenta>它从触摸表面产生触摸事件</c>


617
00:33:43,290 --> 00:33:46,393
<c.magenta>你要用那来驱动一些功能</c>


618
00:33:46,460 --> 00:33:47,961
<c.magenta>在你的定制控制中</c>


619
00:33:48,128 --> 00:33:50,264
<c.magenta>若用户在使用Bluetooth键盘</c>


620
00:33:50,364 --> 00:33:52,199
<c.magenta>他们无法产生那些触摸事件</c>


621
00:33:52,399 --> 00:33:54,868
<c.magenta>因些你需要做一些额外工作来确保</c>


622
00:33:54,935 --> 00:33:58,205
<c.magenta>你的控制的行为正确而且正常工作</c>


623
00:33:58,472 --> 00:34:00,607
<c.magenta>为所有的用户 在所有情况下</c>

