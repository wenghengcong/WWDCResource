1
00:00:20,020 --> 00:00:22,923
<c.magenta>用SiriKit扩展你的应用</c>


2
00:00:28,595 --> 00:00:29,429
<c.magenta>大家好</c>


3
00:00:29,563 --> 00:00:31,098
<c.magenta>我是Vineet Khosla</c>


4
00:00:31,198 --> 00:00:34,868
<c.magenta>今天我将与Diana Huang</c>
<c.magenta>和Scott Andrus一起</c>


5
00:00:35,402 --> 00:00:39,640
<c.magenta>向你们展示如何利用SiriKit</c>
<c.magenta>扩展你们的应用程序</c>


6
00:00:42,309 --> 00:00:43,944
<c.magenta>在简介的部分</c>


7
00:00:44,011 --> 00:00:47,414
<c.magenta>大家了解了一款支持SiriKit</c>
<c.magenta>的应用由三个核心部分组成</c>


8
00:00:48,448 --> 00:00:51,919
<c.magenta>你们有意图扩展</c>


9
00:00:52,519 --> 00:00:54,855
<c.magenta>你们有意图</c>
<c.magenta>用户界面扩展</c>


10
00:00:54,922 --> 00:00:57,057
<c.magenta>当然 还有你们的应用程序</c>


11
00:00:58,692 --> 00:01:01,862
<c.magenta>在意图扩展下</c>
<c.magenta>我们有三个主要的方法</c>


12
00:01:01,929 --> 00:01:04,665
<c.magenta>它们分别是解析和</c>
<c.magenta>确认还有处理</c>


13
00:01:05,999 --> 00:01:10,971
<c.magenta>在这个部分</c>
<c.magenta>我们将探索三个内容</c>


14
00:01:11,238 --> 00:01:15,843
<c.magenta>首先 我们会聊一下如何让</c>
<c.magenta>你们的应用适用SiriKit</c>


15
00:01:16,410 --> 00:01:21,949
<c.magenta>然后 我们会聊如何添加</c>
<c.magenta>你们的第一个意图扩展</c>


16
00:01:22,482 --> 00:01:26,386
<c.magenta>最后 我们会聊一下</c>
<c.magenta>如何将你们的应用程序</c>


17
00:01:26,453 --> 00:01:30,190
<c.magenta>UI和样式集成到</c>
<c.magenta>Siri experience</c>


18
00:01:30,490 --> 00:01:33,727
<c.magenta>通过编写I意图用户界面扩展</c>


19
00:01:35,596 --> 00:01:41,802
<c.magenta>在这个部分 我们将使用最爱的</c>
<c.magenta>聊天应用独角兽快信</c>


20
00:01:42,603 --> 00:01:44,505
<c.magenta>你们有些人一定知道这款应用</c>


21
00:01:44,605 --> 00:01:48,008
<c.magenta>它是一款人见人爱的应用</c>
<c.magenta>被Siri团队内部用来</c>


22
00:01:48,075 --> 00:01:49,843
<c.magenta>与我们的独角兽们聊天</c>


23
00:01:50,177 --> 00:01:54,615
<c.magenta>这是一款标准的消息应用</c>
<c.magenta>是可以用来收发信息</c>


24
00:01:54,681 --> 00:01:58,318
<c.magenta>但它具备一些特有的不完美之处</c>


25
00:01:58,385 --> 00:02:00,420
<c.magenta>它的特殊使得它能为我们的目的服务</c>


26
00:02:00,487 --> 00:02:03,090
<c.magenta>今天我们将会让它支持SiriKit</c>


27
00:02:06,093 --> 00:02:09,128
<c.magenta>SiriKit是构建在扩展之上的</c>


28
00:02:09,729 --> 00:02:12,766
<c.magenta>但是 在你们的应用与扩展集成之前</c>


29
00:02:12,833 --> 00:02:16,937
<c.magenta>可为其与SiriKit相适做些准备</c>


30
00:02:17,671 --> 00:02:20,507
<c.magenta>我先介绍一些涉及到的地方</c>


31
00:02:21,308 --> 00:02:26,280
<c.magenta>我们将会聊一下如何准备你们的应用</c>
<c.magenta>通过转移一些你们的代码</c>


32
00:02:26,346 --> 00:02:28,148
<c.magenta>至embedded</c>
<c.magenta>frameworks</c>


33
00:02:28,215 --> 00:02:30,951
<c.magenta>Embedded frameworks</c>
<c.magenta>是一个很好的重用代码的方式</c>


34
00:02:31,018 --> 00:02:33,420
<c.magenta>在应用与扩展之间</c>


35
00:02:34,321 --> 00:02:37,357
<c.magenta>转移一些代码至</c>
<c.magenta>embedded frameworks</c>


36
00:02:37,424 --> 00:02:42,129
<c.magenta>也将会提供给我们一个</c>
<c.magenta>很好的单元测试的机会</c>


37
00:02:42,563 --> 00:02:48,235
<c.magenta>然后 最后我们将简单介绍一下</c>
<c.magenta>什么是合理的总体结构</c>


38
00:02:48,535 --> 00:02:50,704
<c.magenta>用于构建你们的扩展</c>


39
00:02:50,771 --> 00:02:54,341
<c.magenta>基于你们的应用所关联的意图</c>


40
00:02:55,375 --> 00:02:59,446
<c.magenta>现在 让我们进一步得看一下</c>
<c.magenta>embedded frameworks</c>


41
00:03:01,548 --> 00:03:05,052
<c.magenta>你们的扩展需要</c>
<c.magenta>执行和应用一样的任务</c>


42
00:03:05,118 --> 00:03:06,820
<c.magenta>它要能操控意图</c>


43
00:03:06,887 --> 00:03:10,891
<c.magenta>还有当需要时也能渲染UI</c>


44
00:03:11,191 --> 00:03:14,661
<c.magenta>利用embedded frameworks</c>
<c.magenta>是很好的重用代码方式</c>


45
00:03:14,728 --> 00:03:17,898
<c.magenta>在应用之间 同样也在扩展之间</c>


46
00:03:17,965 --> 00:03:21,935
<c.magenta>因为你们要保证用户有一个统一的体验</c>


47
00:03:22,002 --> 00:03:24,071
<c.magenta>无论他们是从你的应用</c>


48
00:03:24,137 --> 00:03:27,975
<c.magenta>或者是通过SiriKit进入程序</c>


49
00:03:29,576 --> 00:03:32,980
<c.magenta>以独角兽快信为例</c>
<c.magenta>我们找到了一些地方</c>


50
00:03:33,046 --> 00:03:36,817
<c.magenta>应该可以被移到</c>
<c.magenta>embedded frameworks</c>


51
00:03:36,884 --> 00:03:41,355
<c.magenta>我们看了一下独角兽快信的网络层</c>


52
00:03:41,421 --> 00:03:43,757
<c.magenta>这是所有关于传送</c>


53
00:03:43,824 --> 00:03:45,993
<c.magenta>和接收信息的部分</c>


54
00:03:46,059 --> 00:03:50,397
<c.magenta>我们意识到这一部分代码</c>


55
00:03:50,464 --> 00:03:52,533
<c.magenta>很适合被全部移至</c>
<c.magenta>embedded frameworks</c>


56
00:03:52,599 --> 00:03:56,637
<c.magenta>进而 它能被我的</c>
<c.magenta>应用和扩展重复调用</c>


57
00:03:57,738 --> 00:04:00,807
<c.magenta>在完成以上的移动后</c>
<c.magenta>我们看了一下数据模型</c>


58
00:04:01,175 --> 00:04:06,513
<c.magenta>你们的应用和扩展应该使用</c>
<c.magenta>同一个数据模型</c>


59
00:04:06,580 --> 00:04:10,350
<c.magenta>在我们的聊天应用里 它是一个数据库</c>


60
00:04:10,417 --> 00:04:13,420
<c.magenta>和其读写方法</c>


61
00:04:13,487 --> 00:04:15,923
<c.magenta>它同样可以被移到一个</c>
<c.magenta>embedded framework里</c>


62
00:04:16,223 --> 00:04:19,159
<c.magenta>被应用和扩展调用</c>


63
00:04:20,527 --> 00:04:26,633
<c.magenta>在完成上述的移动后</c>
<c.magenta>我们看了一下决策逻辑</c>


64
00:04:27,267 --> 00:04:29,603
<c.magenta>这是你们应用的业务逻辑</c>


65
00:04:29,770 --> 00:04:31,438
<c.magenta>在早些时候我们已经提过</c>


66
00:04:31,505 --> 00:04:34,341
<c.magenta>我们有解析和</c>
<c.magenta>确认还有处理方法</c>


67
00:04:34,842 --> 00:04:39,546
<c.magenta>这三个方法将与你们</c>
<c.magenta>应用的实际业务逻辑一一对应</c>


68
00:04:39,613 --> 00:04:43,116
<c.magenta>你们应该确保应用</c>


69
00:04:43,517 --> 00:04:46,320
<c.magenta>和意图扩展</c>


70
00:04:46,386 --> 00:04:49,623
<c.magenta>提供给你们用户一致的体验</c>
<c.magenta>当他们尝试着去</c>


71
00:04:49,690 --> 00:04:53,660
<c.magenta>完成一个任务</c>
<c.magenta>无论他们从哪里开始</c>


72
00:04:53,727 --> 00:04:58,532
<c.magenta>所以我们也将决策逻辑移到了</c>
<c.magenta>一个embedded framework里</c>


73
00:04:59,466 --> 00:05:03,170
<c.magenta>最后若你的应用与意图关联</c>


74
00:05:03,237 --> 00:05:07,908
<c.magenta>需要让UI返回至SiriKit</c>


75
00:05:08,308 --> 00:05:11,912
<c.magenta>那部分代码也应该被移至</c>
<c.magenta>embedded framework</c>


76
00:05:11,979 --> 00:05:14,147
<c.magenta>那样 你可以重复调用代码</c>
<c.magenta>同样</c>


77
00:05:14,214 --> 00:05:18,519
<c.magenta>提供给你们用户一个一致的体验</c>


78
00:05:18,585 --> 00:05:20,521
<c.magenta>无论你们用户的入口点是</c>
<c.magenta>你们的应用</c>


79
00:05:20,587 --> 00:05:23,257
<c.magenta>或是一个意图扩展</c>


80
00:05:26,727 --> 00:05:30,330
<c.magenta>我建议大家观看一个2015年的讲座</c>


81
00:05:30,397 --> 00:05:31,965
<c.magenta>应用拓展最佳实践</c>


82
00:05:32,032 --> 00:05:34,301
<c.magenta>我看了这个讲座</c>
<c.magenta>我感到很受益</c>


83
00:05:36,537 --> 00:05:41,441
<c.magenta>在转移了大部分我们的代码至</c>
<c.magenta>embedded frameworks之后</c>


84
00:05:41,909 --> 00:05:46,280
<c.magenta>这给我们提供了一个很好的机会</c>
<c.magenta>去写一些高质量的单元测试</c>


85
00:05:46,847 --> 00:05:49,550
<c.magenta>我知道大家会觉得这是</c>
<c.magenta>一个老生常谈的问题</c>


86
00:05:49,616 --> 00:05:54,121
<c.magenta>我们在座的所有工程师</c>
<c.magenta>都十分会写单元测试</c>


87
00:05:54,188 --> 00:05:55,989
<c.magenta>我们都遵循测试驱动开发</c>


88
00:05:56,056 --> 00:05:57,824
<c.magenta>我相信每一次都是这样的</c>


89
00:05:58,425 --> 00:06:00,994
<c.magenta>但我们转移这些代码</c>


90
00:06:01,094 --> 00:06:02,863
<c.magenta>至一个embedded</c>
<c.magenta>framework将会提供给你们</c>


91
00:06:02,930 --> 00:06:05,933
<c.magenta>一个新的机会去写一些</c>
<c.magenta>高质量的单元测试</c>


92
00:06:06,500 --> 00:06:09,570
<c.magenta>特别是针对SiriKit</c>


93
00:06:09,803 --> 00:06:13,006
<c.magenta>你们可创建一些模拟的意图</c>


94
00:06:13,073 --> 00:06:16,610
<c.magenta>然后写一些测试</c>
<c.magenta>确保你们的应用</c>


95
00:06:16,677 --> 00:06:20,047
<c.magenta>和扩展有正确的响应</c>


96
00:06:20,347 --> 00:06:22,449
<c.magenta>你们无需实时的和Siri进行沟通</c>


97
00:06:22,516 --> 00:06:26,854
<c.magenta>你们可以模拟期望中从Siri那里</c>
<c.magenta>接收到的意图对象</c>


98
00:06:26,920 --> 00:06:29,756
<c.magenta>然后 你们可以写一些线下的测试</c>


99
00:06:31,692 --> 00:06:35,829
<c.magenta>最后 让我们来思考一下</c>
<c.magenta>怎样构建你们的应用</c>


100
00:06:36,029 --> 00:06:37,998
<c.magenta>使其有合理的扩展的数量</c>


101
00:06:38,932 --> 00:06:42,236
<c.magenta>一般来说 一个应用</c>
<c.magenta>会与多个意图关联</c>


102
00:06:42,302 --> 00:06:44,404
<c.magenta>因为 应用要会执行多个任务</c>


103
00:06:44,471 --> 00:06:49,610
<c.magenta>例子里独角兽快信使用</c>
<c.magenta>SendMessageIntent</c>


104
00:06:49,676 --> 00:06:52,946
<c.magenta>但让我们假想一下</c>
<c.magenta>我们想添加一个新的功能</c>


105
00:06:53,013 --> 00:06:55,349
<c.magenta>我们可以用它来进行视屏和音频通话</c>


106
00:06:55,782 --> 00:06:59,319
<c.magenta>那问题是我们如何构建我们的扩展？</c>


107
00:06:59,553 --> 00:07:03,590
<c.magenta>是否该把操控所有意图的</c>
<c.magenta>意图放在一个扩展里？</c>


108
00:07:03,824 --> 00:07:07,594
<c.magenta>但这样会使我们的代码体积变得庞大</c>
<c.magenta>进而难以管理</c>


109
00:07:08,929 --> 00:07:10,797
<c.magenta>我们可以使用另一种构建</c>


110
00:07:10,864 --> 00:07:12,299
<c.magenta>虽然不是那么的简洁</c>


111
00:07:12,366 --> 00:07:17,037
<c.magenta>把所有意图的操控分开</c>
<c.magenta>放在独立的扩展里</c>


112
00:07:17,671 --> 00:07:20,007
<c.magenta>那看起来不错 但你也许会</c>


113
00:07:20,807 --> 00:07:22,609
<c.magenta>重复写些模版式的代码</c>


114
00:07:22,676 --> 00:07:25,546
<c.magenta>也会创建一些多余的扩展</c>


115
00:07:25,612 --> 00:07:28,148
<c.magenta>导致对内存施加不必要的压力</c>


116
00:07:29,249 --> 00:07:31,385
<c.magenta>那在独角兽快信里</c>


117
00:07:31,451 --> 00:07:33,987
<c.magenta>我的宗旨是</c>


118
00:07:34,054 --> 00:07:38,659
<c.magenta>考虑如何将有关系的意图分类到一起</c>


119
00:07:39,126 --> 00:07:44,531
<c.magenta>在我们的例子里</c>
<c.magenta>我们觉得视频和音频的意图</c>


120
00:07:44,598 --> 00:07:47,568
<c.magenta>可以被自然地分类到同一个扩展里</c>


121
00:07:47,634 --> 00:07:52,439
<c.magenta>因为这样可以让我们</c>
<c.magenta>最大限度地利用代码</c>


122
00:07:53,307 --> 00:07:58,612
<c.magenta>同时 消息发送的意图</c>
<c.magenta>可以被放在一个分开独立的扩展里</c>


123
00:08:00,147 --> 00:08:03,717
<c.magenta>总而言之 没有一个一劳永逸的办法</c>


124
00:08:03,784 --> 00:08:05,552
<c.magenta>你们是最了解你们的应用的人</c>


125
00:08:05,619 --> 00:08:09,223
<c.magenta>你们知道你们的应用</c>
<c.magenta>会使用哪些意图</c>


126
00:08:09,289 --> 00:08:12,659
<c.magenta>那你们需要选择一种构件</c>
<c.magenta>它能确保</c>


127
00:08:12,726 --> 00:08:15,729
<c.magenta>你们的代码容易被管理 同时</c>


128
00:08:15,796 --> 00:08:19,466
<c.magenta>不会创建过多的扩展</c>
<c.magenta>进而 对内存施加不必要的压力</c>


129
00:08:21,568 --> 00:08:24,238
<c.magenta>经过以上的讨论之后</c>


130
00:08:24,338 --> 00:08:28,175
<c.magenta>你的应用已准备好采用SiriKit</c>


131
00:08:28,242 --> 00:08:31,445
<c.magenta>为了帮助我们写我们的第一个意图扩展</c>


132
00:08:31,512 --> 00:08:33,480
<c.magenta>我邀请Diana上台</c>


133
00:08:42,990 --> 00:08:43,857
<c.magenta>谢谢Vineet</c>


134
00:08:48,395 --> 00:08:49,463
<c.magenta>大家好</c>


135
00:08:49,530 --> 00:08:53,367
<c.magenta>我是Diana Huang</c>
<c.magenta>我想在这里和你们聊一下</c>


136
00:08:53,433 --> 00:08:57,771
<c.magenta>如何创建第一个能与Siri交流</c>
<c.magenta>的意图扩展</c>


137
00:08:57,838 --> 00:09:01,542
<c.magenta>在你们的应用已经完全</c>
<c.magenta>准备好采用SiriKit的情况下</c>


138
00:09:02,342 --> 00:09:07,915
<c.magenta>我也将会用Xcode向你们展示</c>
<c.magenta>独角兽快信的例子</c>


139
00:09:09,416 --> 00:09:15,422
<c.magenta>那让我们现在开始</c>
<c.magenta>你们需要遵循有三个步骤</c>


140
00:09:16,490 --> 00:09:20,761
<c.magenta>首先 你们要添加一个I</c>
<c.magenta>意图扩展 target到你的应用</c>


141
00:09:21,428 --> 00:09:26,433
<c.magenta>接下来 你们要设置这个扩展的</c>
<c.magenta>Info.plist</c>


142
00:09:27,334 --> 00:09:31,972
<c.magenta>最后 你们需要看一下这个扩展的</c>
<c.magenta>principal类</c>


143
00:09:33,006 --> 00:09:35,943
<c.magenta>让我们来分别看一下这三个步骤</c>


144
00:09:37,778 --> 00:09:40,214
<c.magenta>要添加一个I意图扩展 target</c>


145
00:09:40,280 --> 00:09:44,818
<c.magenta>你需要依次进入Xcode文件</c>
<c.magenta>新建Target</c>


146
00:09:45,752 --> 00:09:48,989
<c.magenta>然后从列表里选择意图扩展</c>


147
00:09:49,790 --> 00:09:52,659
<c.magenta>对于你们曾经使用过扩展的人</c>


148
00:09:52,726 --> 00:09:55,729
<c.magenta>就和创建其它的扩展</c>
<c.magenta>targets方式一样</c>


149
00:09:57,631 --> 00:10:02,002
<c.magenta>现在 让我们来看一下扩展的</c>
<c.magenta>Info.plist</c>


150
00:10:03,737 --> 00:10:06,907
<c.magenta>我们看到现有的</c>
<c.magenta>NSExtension关键值</c>


151
00:10:07,508 --> 00:10:11,078
<c.magenta>然后 在里面我们看到</c>
<c.magenta>NSExtensionAttributes</c>


152
00:10:11,912 --> 00:10:13,480
<c.magenta>在字典里面</c>


153
00:10:13,547 --> 00:10:17,184
<c.magenta>我们引进两个新的iOS X的关键值</c>


154
00:10:18,151 --> 00:10:22,189
<c.magenta>分别是IntentsSupported和</c>
<c.magenta>IntentsRestricted WhileLocked</c>


155
00:10:23,624 --> 00:10:27,794
<c.magenta>IntentsSupported</c>
<c.magenta>是一个必要的关键值</c>


156
00:10:27,861 --> 00:10:30,631
<c.magenta>为描述你们的扩展的具体功能</c>


157
00:10:31,231 --> 00:10:35,202
<c.magenta>换句话说 你们需要将一组</c>
<c.magenta>意图类的名字添加到</c>


158
00:10:35,269 --> 00:10:40,607
<c.magenta>在IntentsSupported</c>
<c.magenta>下的一个数组进而才能被扩展支持</c>


159
00:10:42,309 --> 00:10:46,213
<c.magenta>IntentsRestricted WhileLocked</c>
<c.magenta>是一个可选的关键值</c>


160
00:10:46,280 --> 00:10:48,582
<c.magenta>为描述锁屏状态的行为</c>


161
00:10:50,250 --> 00:10:54,855
<c.magenta>在默认的情况下</c>
<c.magenta>Siri限制了一些特定的域</c>


162
00:10:54,922 --> 00:10:57,724
<c.magenta>为在锁屏状态下不被随意调用</c>


163
00:10:58,258 --> 00:11:02,396
<c.magenta>例子有 付款域或图片搜索域</c>


164
00:11:03,330 --> 00:11:07,568
<c.magenta>但如果你们的应用有比Siri</c>
<c.magenta>更高的安全要求</c>


165
00:11:07,634 --> 00:11:11,905
<c.magenta>那你们可以把想限制的意图类</c>
<c.magenta>加入到一个数组</c>


166
00:11:11,972 --> 00:11:14,174
<c.magenta>在IntentsRestricted</c>
<c.magenta>WhileLocked之下</c>


167
00:11:15,042 --> 00:11:17,945
<c.magenta>这样就可以指示Siri</c>
<c.magenta>请提示用户</c>


168
00:11:18,011 --> 00:11:22,916
<c.magenta>先解除锁屏</c>
<c.magenta>再调用你们的扩展来操控意图</c>


169
00:11:25,152 --> 00:11:28,989
<c.magenta>现在我们扩展的Info.plist</c>
<c.magenta>也已经被设置好了</c>


170
00:11:30,224 --> 00:11:32,559
<c.magenta>接着让我们看看principal类</c>


171
00:11:33,760 --> 00:11:36,930
<c.magenta>意图扩展的principal类</c>


172
00:11:36,997 --> 00:11:40,300
<c.magenta>必须是INExtension的子类</c>


173
00:11:41,034 --> 00:11:45,439
<c.magenta>这样符合INIntentHandlerProviding协议</c>


174
00:11:46,440 --> 00:11:50,444
<c.magenta>这个协议只有一个叫</c>
<c.magenta>handlerForintent的方法</c>


175
00:11:52,346 --> 00:11:55,215
<c.magenta>这个方法的名字</c>
<c.magenta>清楚地解释了它的用途</c>


176
00:11:55,749 --> 00:12:00,053
<c.magenta>你们有一个意图对象</c>
<c.magenta>你们需要返回一个Handler对象</c>


177
00:12:00,821 --> 00:12:04,558
<c.magenta>请注意返回的Handler对象</c>
<c.magenta>必须符合</c>


178
00:12:04,625 --> 00:12:06,994
<c.magenta>具体的意图操控协议</c>


179
00:12:08,462 --> 00:12:12,966
<c.magenta>以独角兽快信为例</c>
<c.magenta>我们想支持INSendMessageIntent</c>


180
00:12:13,934 --> 00:12:18,505
<c.magenta>那当任何时候我们传递一个</c>
<c.magenta>INSendMessageIntent的实例</c>


181
00:12:18,939 --> 00:12:24,178
<c.magenta>我们将返回一个符合</c>
<c.magenta>INSendMessageIntent操控协议的handler</c>


182
00:12:26,180 --> 00:12:29,016
<c.magenta>现在我们已经讨论过了所有的三个步骤</c>


183
00:12:29,383 --> 00:12:33,187
<c.magenta>接下来让我们根据以上的步骤</c>
<c.magenta>将独角兽快信在Xcode里打开</c>


184
00:12:35,556 --> 00:12:40,093
<c.magenta>这里有我们已经在Xcode里</c>
<c.magenta>打开了的独角兽快信项目</c>


185
00:12:40,694 --> 00:12:45,199
<c.magenta>时间关系 我已创建好了意图扩展</c>


186
00:12:45,799 --> 00:12:48,202
<c.magenta>让我们直接来看一下第二步</c>


187
00:12:48,402 --> 00:12:51,104
<c.magenta>设置Info.plist</c>


188
00:12:53,440 --> 00:12:57,911
<c.magenta>首先 让我们将它放大些</c>
<c.magenta>那样可以看得更清楚</c>


189
00:13:02,082 --> 00:13:02,916
<c.magenta>好的</c>


190
00:13:02,983 --> 00:13:05,786
<c.magenta>在这里我们看见</c>
<c.magenta>NSExtension字典</c>


191
00:13:06,820 --> 00:13:11,859
<c.magenta>如果我们将它展开 你会看到</c>
<c.magenta>NSExtensionAttributes字典</c>


192
00:13:12,726 --> 00:13:15,662
<c.magenta>如果我们进一步地展开这个字典</c>


193
00:13:15,729 --> 00:13:18,265
<c.magenta>你会看见那两个</c>
<c.magenta>我们之前介绍的新关键值</c>


194
00:13:19,099 --> 00:13:22,970
<c.magenta>IntentsSupported和</c>
<c.magenta>IntentsRestricted WhileLocked</c>


195
00:13:24,505 --> 00:13:28,041
<c.magenta>首先 为了支持</c>
<c.magenta>INSentMessageIntent</c>


196
00:13:28,442 --> 00:13:31,912
<c.magenta>在IntentSupported</c>
<c.magenta>数组下添加一个项目</c>


197
00:13:32,913 --> 00:13:35,148
<c.magenta>我们加入意图类的名字</c>


198
00:13:35,415 --> 00:13:38,118
<c.magenta>INSendMessageIntent</c>


199
00:13:39,887 --> 00:13:42,956
<c.magenta>然后 让我们看一下锁屏状态的行为</c>


200
00:13:44,024 --> 00:13:49,263
<c.magenta>因为独角兽快信</c>
<c.magenta>是一款聊天应用</c>


201
00:13:49,329 --> 00:13:52,132
<c.magenta>被用于独角兽之间的私密交流</c>


202
00:13:52,199 --> 00:13:54,635
<c.magenta>独角兽们很注重隐私</c>


203
00:13:54,701 --> 00:13:56,570
<c.magenta>所以 我们决定将它锁定</c>


204
00:13:56,637 --> 00:13:59,640
<c.magenta>用户需要先将设备解锁</c>


205
00:13:59,706 --> 00:14:03,110
<c.magenta>才能通过Siri发送</c>
<c.magenta>独角兽快信消息</c>


206
00:14:04,311 --> 00:14:11,151
<c.magenta>为达到效果 我们将在IntentRestricted</c>
<c.magenta>WhileLocked的数组下添加一个项目</c>


207
00:14:11,752 --> 00:14:14,755
<c.magenta>同样的 添加意图类的名字</c>


208
00:14:15,289 --> 00:14:16,890
<c.magenta>INSendMessageIntent</c>


209
00:14:18,325 --> 00:14:21,828
<c.magenta>这样我们就完成了对扩展的</c>
<c.magenta>Info.plist的设置</c>


210
00:14:23,630 --> 00:14:29,903
<c.magenta>在第三个步骤里我们看看</c>
<c.magenta>扩展的principal类</c>


211
00:14:31,338 --> 00:14:33,707
<c.magenta>当你们创建意图扩展 target时</c>


212
00:14:33,974 --> 00:14:37,010
<c.magenta>一个principal类</c>
<c.magenta>会被自动地创建</c>


213
00:14:37,444 --> 00:14:42,449
<c.magenta>我重命名了我的principal类</c>
<c.magenta>为UCIntentHandler</c>


214
00:14:42,716 --> 00:14:45,385
<c.magenta>它是INExtension一个子类</c>


215
00:14:47,421 --> 00:14:50,290
<c.magenta>这里我们还有意图方法</c>
<c.magenta>的handler</c>


216
00:14:51,859 --> 00:14:55,662
<c.magenta>你可以看到默认的实现返回self</c>


217
00:14:56,296 --> 00:15:00,934
<c.magenta>它返回一个principal类</c>
<c.magenta>本身的实例</c>


218
00:15:02,202 --> 00:15:04,738
<c.magenta>但为了让我们的代码更清晰</c>


219
00:15:05,205 --> 00:15:07,074
<c.magenta>更容易被扩张</c>


220
00:15:07,140 --> 00:15:11,879
<c.magenta>如果我们想将来让这个扩展支持</c>
<c.magenta>更多的意图</c>


221
00:15:12,312 --> 00:15:16,316
<c.magenta>那我们要创建一个独立的</c>
<c.magenta>intent handler类</c>


222
00:15:17,651 --> 00:15:19,219
<c.magenta>我们现在就建立这个类</c>


223
00:15:20,821 --> 00:15:22,356
<c.magenta>通过创建一个新的文件</c>


224
00:15:24,758 --> 00:15:27,794
<c.magenta>取名为UCSentMessage</c>
<c.magenta>IntentHandler</c>


225
00:15:30,564 --> 00:15:35,569
<c.magenta>我们也将导入一些框架</c>
<c.magenta>然后加入一些类别的声明</c>


226
00:15:37,571 --> 00:15:40,440
<c.magenta>这里我们导入意图框架</c>


227
00:15:40,908 --> 00:15:43,343
<c.magenta>它包含许多SiriKit API</c>


228
00:15:45,345 --> 00:15:48,081
<c.magenta>我们也将UnicornCore</c>
<c.magenta>框架导入</c>


229
00:15:48,515 --> 00:15:51,185
<c.magenta>那是我们创建的embedded</c>
<c.magenta>framework</c>


230
00:15:51,251 --> 00:15:56,089
<c.magenta>通过在应用与扩展之间分享代码</c>


231
00:15:57,658 --> 00:16:01,395
<c.magenta>这就是我们的</c>
<c.magenta>UCSentMessage IntentHandler类</c>


232
00:16:01,461 --> 00:16:05,065
<c.magenta>它符合</c>
<c.magenta>INSentMessage IntentHandling协议</c>


233
00:16:06,433 --> 00:16:09,269
<c.magenta>好的</c>
<c.magenta>现在然我们回到principal类</c>


234
00:16:09,636 --> 00:16:11,839
<c.magenta>取代这里现有的实现</c>


235
00:16:12,706 --> 00:16:18,912
<c.magenta>让它为传递进来的意图返回一个</c>
<c.magenta>UCSentMessageIntentHandler的实例</c>


236
00:16:18,979 --> 00:16:21,882
<c.magenta>类型仅限为</c>
<c.magenta>INSentMessageIntent</c>


237
00:16:22,916 --> 00:16:26,119
<c.magenta>至于其它的意图</c>
<c.magenta>我们将返回nil</c>


238
00:16:28,455 --> 00:16:29,356
<c.magenta>大功告成</c>


239
00:16:29,423 --> 00:16:31,325
<c.magenta>我们的三个步骤</c>


240
00:16:31,391 --> 00:16:34,761
<c.magenta>用来添加和设置你们的第一个意图扩展</c>


241
00:16:35,662 --> 00:16:37,831
<c.magenta>现在让我们来看一下应用逻辑</c>


242
00:16:41,335 --> 00:16:45,472
<c.magenta>希望从SiriKit的简介部分</c>


243
00:16:45,539 --> 00:16:47,741
<c.magenta>和Vineet的重述</c>


244
00:16:48,141 --> 00:16:53,480
<c.magenta>意图扩展和Siri的互动</c>
<c.magenta>会被分成三个阶段</c>


245
00:16:53,847 --> 00:16:56,984
<c.magenta>解析和确认</c>
<c.magenta>还有处理</c>


246
00:16:58,318 --> 00:17:00,454
<c.magenta>让我们先来聊一下解析</c>


247
00:17:02,122 --> 00:17:06,292
<c.magenta>在解析阶段你要确认</c>


248
00:17:06,359 --> 00:17:11,265
<c.magenta>和理清每一个意图参数值</c>


249
00:17:12,532 --> 00:17:16,435
<c.magenta>所以 我们给每一个</c>
<c.magenta>意图的参数提供了</c>


250
00:17:16,603 --> 00:17:20,540
<c.magenta>解析方法在意图操控协议里</c>


251
00:17:21,742 --> 00:17:25,012
<c.magenta>那你们或许会问我们应该</c>
<c.magenta>实现它们之间的哪一个？</c>


252
00:17:25,846 --> 00:17:27,414
<c.magenta>试想</c>


253
00:17:27,981 --> 00:17:32,019
<c.magenta>你是否需要在Siri的帮助下获取</c>


254
00:17:32,186 --> 00:17:34,855
<c.magenta>意图参数值的最终值？</c>


255
00:17:36,023 --> 00:17:37,591
<c.magenta>如果回答是</c>


256
00:17:37,658 --> 00:17:42,496
<c.magenta>那你或许应该要实现</c>
<c.magenta>这个参数的解析方法</c>


257
00:17:44,231 --> 00:17:48,101
<c.magenta>让我们来看一下</c>
<c.magenta>独角兽快信的例子</c>


258
00:17:49,803 --> 00:17:53,373
<c.magenta>发送消息时 我们需要收件人</c>


259
00:17:54,341 --> 00:17:58,045
<c.magenta>为了决定最终收件人的值</c>


260
00:17:58,111 --> 00:18:04,551
<c.magenta>我们需要在独角兽快信</c>
<c.magenta>地址簿里查询联系人</c>


261
00:18:05,819 --> 00:18:09,022
<c.magenta>查询结果可能是多样的</c>


262
00:18:10,257 --> 00:18:12,426
<c.magenta>在最简单的情况下</c>


263
00:18:12,492 --> 00:18:14,962
<c.magenta>我们只找到一个联系人</c>


264
00:18:16,463 --> 00:18:17,598
<c.magenta>任务完成</c>


265
00:18:18,565 --> 00:18:23,370
<c.magenta>然而 也有可能我们找到</c>
<c.magenta>两个或多个联系人</c>


266
00:18:24,171 --> 00:18:26,340
<c.magenta>在这样的情况下 将会很便捷</c>


267
00:18:26,406 --> 00:18:31,712
<c.magenta>如果Siri能帮助询问用户</c>
<c.magenta>从候选名单里挑出联系人</c>


268
00:18:33,046 --> 00:18:36,817
<c.magenta>同样也有可能我们没有找到任何联系人</c>


269
00:18:37,784 --> 00:18:42,189
<c.magenta>在这个情况下</c>
<c.magenta>我们也想让Siri告知用户</c>


270
00:18:42,356 --> 00:18:45,392
<c.magenta>那样用户或许会选一个其它的收件人</c>


271
00:18:48,061 --> 00:18:53,033
<c.magenta>在选好了一个收件人之后</c>
<c.magenta>我们还需要关联的信息</c>


272
00:18:53,867 --> 00:18:58,272
<c.magenta>在这个情况下</c>
<c.magenta>我们只需要获取一个值来继续</c>


273
00:18:59,473 --> 00:19:02,609
<c.magenta>如果用户没能提供关联的信息</c>


274
00:19:02,676 --> 00:19:07,548
<c.magenta>那我们希望Siri能帮助</c>
<c.magenta>询问关联的信息</c>


275
00:19:09,183 --> 00:19:11,285
<c.magenta>考虑到以上所有情况</c>


276
00:19:11,351 --> 00:19:16,523
<c.magenta>听起来好像 我们应该要为</c>
<c.magenta>收件人和信息实现解析方法</c>


277
00:19:16,623 --> 00:19:20,861
<c.magenta>我们的确需要通过Siri的帮助</c>
<c.magenta>从用户那取得进一步的输入</c>


278
00:19:20,928 --> 00:19:25,599
<c.magenta>才能最终决定</c>
<c.magenta>这些参数的最后的值</c>


279
00:19:27,835 --> 00:19:30,771
<c.magenta>现在参数已经成功地决定了</c>


280
00:19:31,805 --> 00:19:33,774
<c.magenta>我们到了确认阶段</c>


281
00:19:34,842 --> 00:19:37,878
<c.magenta>在这个阶段你们有必要做一下情景模拟</c>


282
00:19:38,846 --> 00:19:42,749
<c.magenta>试想若你们正在操控这个意图</c>


283
00:19:43,050 --> 00:19:44,685
<c.magenta>你们是否有了所有需要的信息？</c>


284
00:19:45,252 --> 00:19:48,355
<c.magenta>或者 你们是否能够成功地操控它？</c>


285
00:19:48,989 --> 00:19:52,459
<c.magenta>你们要得到问题的答案外加</c>
<c.magenta>一些额外的信息</c>


286
00:19:52,526 --> 00:19:56,129
<c.magenta>你们可收集这些信息在为</c>
<c.magenta>Siri的意图做准备同时</c>


287
00:19:56,763 --> 00:19:58,832
<c.magenta>那样Siri才会适时地</c>


288
00:19:58,999 --> 00:20:01,735
<c.magenta>传达这些信息给用户</c>


289
00:20:02,469 --> 00:20:04,938
<c.magenta>最终用户才能做出相应的决定</c>


290
00:20:05,005 --> 00:20:09,142
<c.magenta>关于是否想继续他们的活动</c>


291
00:20:10,310 --> 00:20:11,845
<c.magenta>在独角兽快信里</c>


292
00:20:11,912 --> 00:20:14,948
<c.magenta>由于我们的安全要求</c>


293
00:20:15,015 --> 00:20:19,019
<c.magenta>我们需要用户时不时地</c>
<c.magenta>重新验证身份</c>


294
00:20:19,853 --> 00:20:22,122
<c.magenta>所以确认是最合适的阶段</c>


295
00:20:22,189 --> 00:20:25,659
<c.magenta>让我们检验用户的身份状态</c>


296
00:20:26,693 --> 00:20:31,665
<c.magenta>不管如何 我们都想告诉Siri</c>
<c.magenta>状态检验的结果</c>


297
00:20:31,732 --> 00:20:36,203
<c.magenta>这样Siri就可以</c>
<c.magenta>让用户在Siri内部继续</c>


298
00:20:36,270 --> 00:20:41,642
<c.magenta>或许调出应用结束本次Siri操作</c>


299
00:20:43,510 --> 00:20:46,413
<c.magenta>好的</c>
<c.magenta>现在意图也已经被确认</c>


300
00:20:47,014 --> 00:20:50,651
<c.magenta>我们来到了最后阶段</c>
<c.magenta>操控它</c>


301
00:20:51,018 --> 00:20:54,688
<c.magenta>但愿这是简单直接的 对你们来说</c>
<c.magenta>最好理解的阶段</c>


302
00:20:55,289 --> 00:20:59,193
<c.magenta>你只需执行行动</c>
<c.magenta>然后告诉Siri结果</c>


303
00:21:00,827 --> 00:21:02,796
<c.magenta>在独角兽快信里</c>


304
00:21:02,863 --> 00:21:05,232
<c.magenta>我们就只要发送消息</c>


305
00:21:05,299 --> 00:21:09,636
<c.magenta>然后 报告消息是否被成功发送</c>


306
00:21:11,071 --> 00:21:17,711
<c.magenta>讲了解析和确认</c>
<c.magenta>还有处理方法与有关的概念</c>


307
00:21:18,045 --> 00:21:20,614
<c.magenta>让我们用Xcode实现它们</c>


308
00:21:31,959 --> 00:21:36,363
<c.magenta>这次我们将直接从</c>
<c.magenta>IntentHandler类开始</c>


309
00:21:37,731 --> 00:21:40,767
<c.magenta>在开始之前 一个提醒</c>


310
00:21:40,834 --> 00:21:44,338
<c.magenta>所有这些简单的代码都会上传</c>


311
00:21:44,404 --> 00:21:47,841
<c.magenta>如果我跳过一些细节</c>
<c.magenta>那或许意味着</c>


312
00:21:47,908 --> 00:21:50,143
<c.magenta>对于你们 那部分代码</c>
<c.magenta>相对来说没那么重要</c>


313
00:21:50,210 --> 00:21:52,412
<c.magenta>目前 无需看懂那部分的每行代码</c>


314
00:21:52,746 --> 00:21:55,616
<c.magenta>但如果你们感兴趣</c>
<c.magenta>你们一直都可以回到网上</c>


315
00:21:55,782 --> 00:21:58,652
<c.magenta>然后自己查阅这简单的项目</c>


316
00:21:59,486 --> 00:22:00,320
<c.magenta>好的</c>


317
00:22:00,687 --> 00:22:02,523
<c.magenta>像之前所提及的</c>


318
00:22:02,589 --> 00:22:06,727
<c.magenta>我们将实现解析和</c>
<c.magenta>确认和处理方法</c>


319
00:22:07,528 --> 00:22:13,200
<c.magenta>我们将为收件人和</c>
<c.magenta>信息实现解析方法</c>


320
00:22:14,434 --> 00:22:17,004
<c.magenta>让我们从resolveRecipients入手</c>


321
00:22:19,840 --> 00:22:24,378
<c.magenta>在这个方法里我们要注意</c>
<c.magenta>recipients这个参数</c>


322
00:22:24,678 --> 00:22:28,015
<c.magenta>它由一个INPerson的数组代表</c>


323
00:22:29,149 --> 00:22:31,885
<c.magenta>你们也可以从这个方法的签名看出</c>


324
00:22:31,952 --> 00:22:37,724
<c.magenta>你们需要使用这一个数组的</c>
<c.magenta>解决结果进行回调</c>


325
00:22:38,992 --> 00:22:41,929
<c.magenta>所以 有一个一一对应的映射关系</c>


326
00:22:42,296 --> 00:22:46,567
<c.magenta>在recipients数组与</c>
<c.magenta>解决结果数组之间</c>


327
00:22:47,201 --> 00:22:52,673
<c.magenta>这意味着为每一个收件人 你们要创建一个</c>
<c.magenta>PersonResolutionResult</c>


328
00:22:53,473 --> 00:22:54,942
<c.magenta>这里唯一的特例是</c>


329
00:22:55,008 --> 00:22:58,779
<c.magenta>当你想创建</c>
<c.magenta>ResolutionResultNeedsValue</c>


330
00:22:58,846 --> 00:23:00,747
<c.magenta>或ResolutionResultNotRequired的时候</c>


331
00:23:01,315 --> 00:23:05,118
<c.magenta>这两类型的</c>
<c.magenta>resolutionResults</c>


332
00:23:05,185 --> 00:23:11,692
<c.magenta>是在参数层面的解析 而其他的</c>
<c.magenta>resolutionResults</c>


333
00:23:11,758 --> 00:23:16,396
<c.magenta>是更多的注重于个别参数值</c>


334
00:23:17,998 --> 00:23:21,068
<c.magenta>那在这个方法里</c>
<c.magenta>首先我们要</c>


335
00:23:22,569 --> 00:23:25,672
<c.magenta>试着打开Recipients对象</c>


336
00:23:26,740 --> 00:23:30,310
<c.magenta>然后我们将循环依次获取</c>
<c.magenta>每一个收件人</c>


337
00:23:30,811 --> 00:23:34,348
<c.magenta>然后调出在UnicornCore</c>
<c.magenta>框架里的 API</c>


338
00:23:34,615 --> 00:23:37,451
<c.magenta>根据名字寻找相应的联系人</c>


339
00:23:39,686 --> 00:23:44,691
<c.magenta>接下来我们将用一个switch语句</c>
<c.magenta>在核对查找联系人的数量上</c>


340
00:23:45,926 --> 00:23:50,998
<c.magenta>如之前所提到的</c>
<c.magenta>我们将考虑不同的查找情况</c>


341
00:23:51,899 --> 00:23:54,635
<c.magenta>两个或多个相符的联系人</c>


342
00:23:54,701 --> 00:23:57,471
<c.magenta>只有一个相符的联系人</c>


343
00:23:57,638 --> 00:24:00,307
<c.magenta>没有相符的联系人</c>


344
00:24:02,676 --> 00:24:06,547
<c.magenta>如果我们找到了两个或更多的联系人</c>


345
00:24:07,014 --> 00:24:11,919
<c.magenta>我们将创建一个PersonResolution</c>
<c.magenta>Result.disambiguation</c>


346
00:24:11,985 --> 00:24:13,954
<c.magenta>用我们所找到的结果</c>


347
00:24:16,190 --> 00:24:19,593
<c.magenta>如果我们只找到了一个联系人</c>


348
00:24:19,993 --> 00:24:21,028
<c.magenta>我们就可以继续</c>


349
00:24:21,094 --> 00:24:26,233
<c.magenta>我们可以告诉Siri通过创建一个</c>
<c.magenta>PersonResolutionResult.success</c>


350
00:24:26,533 --> 00:24:28,735
<c.magenta>用那一个我们找到的人</c>


351
00:24:31,071 --> 00:24:34,374
<c.magenta>如果我们没有找到联系人</c>


352
00:24:35,042 --> 00:24:38,278
<c.magenta>我们将创建一个PersonResolution</c>
<c.magenta>Result.unsupported</c>


353
00:24:41,248 --> 00:24:43,884
<c.magenta>我们switch语句在此结束</c>


354
00:24:46,153 --> 00:24:49,656
<c.magenta>你们或许感觉到</c>
<c.magenta>我讲解这些代码的速度很快</c>


355
00:24:49,723 --> 00:24:53,093
<c.magenta>以至于你没有机会读每一行代码</c>


356
00:24:53,360 --> 00:24:55,062
<c.magenta>那没有什么问题</c>


357
00:24:55,128 --> 00:24:57,931
<c.magenta>因为只要你能明白</c>


358
00:24:57,998 --> 00:25:01,568
<c.magenta>我们有不同的</c>
<c.magenta>resolutionResults</c>


359
00:25:01,635 --> 00:25:04,738
<c.magenta>它们适用于不同的情况</c>


360
00:25:05,239 --> 00:25:10,577
<c.magenta>当你们自己为结果方法实现</c>
<c.magenta>你们的代码逻辑</c>


361
00:25:10,644 --> 00:25:13,447
<c.magenta>你们可以上网查阅关于</c>
<c.magenta>resolutionResults的资料</c>


362
00:25:13,514 --> 00:25:16,383
<c.magenta>完整的关于</c>
<c.magenta>resolutionResults的列表</c>


363
00:25:16,817 --> 00:25:19,152
<c.magenta>然后还有它们的用途</c>


364
00:25:20,521 --> 00:25:21,421
<c.magenta>好的</c>


365
00:25:21,855 --> 00:25:25,359
<c.magenta>现在我们有了所有的</c>
<c.magenta>resolutionResults</c>


366
00:25:25,425 --> 00:25:28,428
<c.magenta>那些我们为</c>
<c.magenta>recipients所创建的</c>


367
00:25:29,263 --> 00:25:33,834
<c.magenta>至此 我们完成了对</c>
<c.magenta>resolutionResults数组的构建</c>


368
00:25:35,702 --> 00:25:39,806
<c.magenta>这样我们也就完成了最后一行代码</c>
<c.magenta>给在我们能</c>


369
00:25:39,873 --> 00:25:42,276
<c.magenta>从意图获取一些收件人的情况</c>


370
00:25:43,377 --> 00:25:48,215
<c.magenta>但在如果用户根本没有收件人</c>


371
00:25:49,349 --> 00:25:53,587
<c.magenta>那我们将创建一个</c>
<c.magenta>PersonResolution Result.needsValue</c>


372
00:25:53,820 --> 00:25:59,726
<c.magenta>然后结束流程 告诉Siri</c>
<c.magenta>请提示用户输入收件人</c>


373
00:26:02,029 --> 00:26:05,299
<c.magenta>以上就是我们result recipients的方法</c>


374
00:26:06,700 --> 00:26:10,137
<c.magenta>接下来 我们来实现</c>
<c.magenta>resolveContent方法</c>


375
00:26:10,204 --> 00:26:14,107
<c.magenta>我将检查值是否存在</c>


376
00:26:14,174 --> 00:26:15,442
<c.magenta>如果不存在</c>


377
00:26:15,509 --> 00:26:19,947
<c.magenta>我们指示Siri</c>
<c.magenta>请帮助我们提示用户</c>


378
00:26:25,519 --> 00:26:28,088
<c.magenta>我们在resolveContent</c>
<c.magenta>里首先做的</c>


379
00:26:28,155 --> 00:26:32,025
<c.magenta>还是试着拆包</c>
<c.magenta>这个content属性</c>


380
00:26:32,893 --> 00:26:35,529
<c.magenta>然后查看它</c>
<c.magenta>是否真的不为空</c>


381
00:26:36,463 --> 00:26:39,066
<c.magenta>如果content确实已经给定</c>


382
00:26:39,533 --> 00:26:42,102
<c.magenta>建立ResolutionResult.success</c>


383
00:26:42,503 --> 00:26:43,971
<c.magenta>通过已有的content</c>


384
00:26:45,672 --> 00:26:50,310
<c.magenta>否则 我们就创建</c>
<c.magenta>ResolutionResult.needsValue</c>


385
00:26:50,377 --> 00:26:52,980
<c.magenta>就像我们在之前那个</c>
<c.magenta>解析方法里做的一样</c>


386
00:26:54,414 --> 00:26:56,550
<c.magenta>并以它为参数</c>
<c.magenta>调用completion函数</c>


387
00:26:59,286 --> 00:27:02,389
<c.magenta>现在我们两个解析方法</c>
<c.magenta>都已经领略了</c>


388
00:27:03,023 --> 00:27:05,726
<c.magenta>下面我们来看确认方法</c>


389
00:27:05,792 --> 00:27:09,730
<c.magenta>我们用它来查看</c>
<c.magenta>用户的认证状态</c>


390
00:27:17,237 --> 00:27:18,739
<c.magenta>在确认方法里</c>


391
00:27:19,139 --> 00:27:24,511
<c.magenta>我们就调用Unicorn Core framework</c>
<c.magenta>里的shared API来查看</c>


392
00:27:24,578 --> 00:27:27,981
<c.magenta>用户是否还有</c>
<c.magenta>有效的认证状态</c>


393
00:27:29,082 --> 00:27:30,551
<c.magenta>如果他/她有的话</c>


394
00:27:30,617 --> 00:27:34,621
<c.magenta>那我们就创建一个</c>
<c.magenta>INSentMessageIntentResponse</c>


395
00:27:35,022 --> 00:27:38,759
<c.magenta>其code参数为success</c>
<c.magenta>而userActivity参数是nil</c>


396
00:27:39,860 --> 00:27:43,363
<c.magenta>我一会儿会讲解</c>
<c.magenta>怎么用这个userActivity</c>


397
00:27:45,332 --> 00:27:47,034
<c.magenta>不过我们先来看这个情况</c>


398
00:27:47,100 --> 00:27:49,536
<c.magenta>用户不再是已认证的状态</c>


399
00:27:50,437 --> 00:27:54,408
<c.magenta>在这种情况下 我们就创建一个</c>
<c.magenta>IntentResponse</c>


400
00:27:54,474 --> 00:27:57,678
<c.magenta>code是</c>
<c.magenta>.failureRequiringAppLaunch</c>


401
00:27:58,612 --> 00:28:02,850
<c.magenta>所以这就是要告诉Siri</c>
<c.magenta>Siri应该提供一个选项</c>


402
00:28:03,050 --> 00:28:06,720
<c.magenta>让用户可以进入到</c>
<c.magenta>我们的主应用</c>


403
00:28:06,787 --> 00:28:10,591
<c.magenta>来登录并完成</c>
<c.magenta>这个发送操作</c>


404
00:28:15,963 --> 00:28:19,132
<c.magenta>好的 以上这些就是</c>
<c.magenta>我们的确认方法</c>


405
00:28:19,900 --> 00:28:23,837
<c.magenta>最后 我们一起来实现处理方法</c>


406
00:28:29,676 --> 00:28:32,713
<c.magenta>在处理里</c>
<c.magenta>我们就调用</c>


407
00:28:32,779 --> 00:28:36,650
<c.magenta>UnicornCore框架里的</c>
<c.magenta>shared API</c>


408
00:28:37,017 --> 00:28:41,421
<c.magenta>来用给定的content和</c>
<c.magenta>recipients发送信息</c>


409
00:28:42,556 --> 00:28:45,993
<c.magenta>我们还要获取</c>
<c.magenta>发送操作的状态</c>


410
00:28:47,561 --> 00:28:50,230
<c.magenta>如果信息成功发送</c>


411
00:28:50,531 --> 00:28:54,801
<c.magenta>创建一IntentResponse</c>
<c.magenta>并以success作为code参数</c>


412
00:28:55,536 --> 00:28:59,673
<c.magenta>否则就以failure作为code</c>
<c.magenta>参数来创建response对象</c>


413
00:29:00,407 --> 00:29:03,911
<c.magenta>调用completion并</c>
<c.magenta>赋给它IntentResponse</c>


414
00:29:06,647 --> 00:29:12,152
<c.magenta>至此 我们一起讨论了解析</c>
<c.magenta>确认和处理方法</c>


415
00:29:13,453 --> 00:29:18,158
<c.magenta>现在我履行之前的承诺</c>
<c.magenta>来讲解NSUserActivity</c>


416
00:29:18,225 --> 00:29:21,762
<c.magenta>那些IntentResponse</c>
<c.magenta>的初始化方法会用到它</c>


417
00:29:24,565 --> 00:29:26,967
<c.magenta>我们暂时先抛开</c>
<c.magenta>Xcode</c>


418
00:29:36,944 --> 00:29:38,979
<c.magenta>说到NSUserActivity</c>


419
00:29:40,247 --> 00:29:42,583
<c.magenta>在SiriKit的背景下</c>


420
00:29:42,649 --> 00:29:47,688
<c.magenta>NSUserActivity被用来</c>
<c.magenta>帮你的应用恢复状态</c>


421
00:29:47,855 --> 00:29:51,558
<c.magenta>用于它被Siri或者用户</c>
<c.magenta>启用的时候</c>


422
00:29:52,860 --> 00:29:57,064
<c.magenta>默认情况下 Siri会给你创建</c>
<c.magenta>一个NSUserActivity</c>


423
00:29:57,431 --> 00:30:02,402
<c.magenta>这是在你决定把nil赋给</c>
<c.magenta>IntentResponse的初始化方法时的情况</c>


424
00:30:04,137 --> 00:30:09,009
<c.magenta>并且 Siri在创建它时会以</c>
<c.magenta>ActivityType作为intent的类名</c>


425
00:30:10,277 --> 00:30:13,280
<c.magenta>你还可以选择用</c>
<c.magenta>你自己的UserActivity</c>


426
00:30:13,580 --> 00:30:15,849
<c.magenta>比如你想要加入一些自定义数据</c>


427
00:30:17,518 --> 00:30:22,523
<c.magenta>但不论如何 Siri都会将</c>
<c.magenta>INInteraction属性设定</c>


428
00:30:22,589 --> 00:30:24,725
<c.magenta>在NSUserActivity</c>
<c.magenta>对象上</c>


429
00:30:25,259 --> 00:30:28,228
<c.magenta>这个属性是在iOS X里新引进的</c>


430
00:30:29,463 --> 00:30:35,402
<c.magenta>而且这个对象有意图</c>
<c.magenta>IntentResponse</c>


431
00:30:35,469 --> 00:30:37,871
<c.magenta>还有意图处理的状态</c>


432
00:30:38,372 --> 00:30:42,109
<c.magenta>Scott一会儿会更详细讲这个对象</c>


433
00:30:43,377 --> 00:30:49,283
<c.magenta>现在我们再来看看NSUserActivity</c>
<c.magenta>在我们程序里的用法</c>


434
00:30:50,751 --> 00:30:53,120
<c.magenta>如果你比较细心地看了这段程序的话</c>


435
00:30:53,587 --> 00:30:56,990
<c.magenta>你可能会发现在确认</c>
<c.magenta>和处理方法里</c>


436
00:30:57,057 --> 00:30:58,959
<c.magenta>我们一直把nil</c>


437
00:30:59,426 --> 00:31:04,031
<c.magenta>作为userActivity参数赋给我们的</c>
<c.magenta>IntentResponse初始化方法</c>


438
00:31:04,398 --> 00:31:05,933
<c.magenta>这样做完全没问题</c>


439
00:31:06,233 --> 00:31:09,970
<c.magenta>这是在假设我们的主应用会处理</c>
<c.magenta>UserActivity的情况下</c>


440
00:31:10,070 --> 00:31:15,342
<c.magenta>就是Siri用INInteraction对象</c>
<c.magenta>帮我们创建的UserActivity</c>


441
00:31:16,944 --> 00:31:19,680
<c.magenta>不过在一些情况下 比较有用的做法是</c>


442
00:31:19,780 --> 00:31:25,519
<c.magenta>给我们的应用加入</c>
<c.magenta>一些扩展过程中的自定义字符串</c>


443
00:31:26,520 --> 00:31:28,055
<c.magenta>比如说</c>


444
00:31:29,823 --> 00:31:31,358
<c.magenta>在确认方法里</c>


445
00:31:31,592 --> 00:31:36,597
<c.magenta>当我们发现用户不再是</c>
<c.magenta>已登录或已认证的状态时</c>


446
00:31:37,397 --> 00:31:41,935
<c.magenta>我们便需要将一些显示错误的</c>
<c.magenta>字符串加入到我们的主应用里</c>


447
00:31:42,236 --> 00:31:45,572
<c.magenta>具体做法是我们创建自己的</c>
<c.magenta>userActivity</c>


448
00:31:46,907 --> 00:31:49,343
<c.magenta>并在.userInfo字典里设定</c>


449
00:31:50,577 --> 00:31:54,982
<c.magenta>我们想要给我们主应用</c>
<c.magenta>加入的显示错误的自定义字符串</c>


450
00:31:55,716 --> 00:31:59,052
<c.magenta>然后我们把nil删掉 取而代之的是</c>
<c.magenta>userActivity</c>


451
00:31:59,152 --> 00:32:00,554
<c.magenta>就是我们刚创建的那个</c>


452
00:32:02,656 --> 00:32:03,857
<c.magenta>好的 很好</c>


453
00:32:03,924 --> 00:32:07,961
<c.magenta>所以现在我的</c>
<c.magenta>独角兽快信主应用有了</c>


454
00:32:08,028 --> 00:32:13,433
<c.magenta>这些显示错误的自定义字符串</c>
<c.magenta>并且会提示用户登录</c>


455
00:32:13,500 --> 00:32:18,305
<c.magenta>这是在用户或者Siri此时</c>
<c.magenta>要启动应用的情况下</c>


456
00:32:19,706 --> 00:32:22,910
<c.magenta>现在我们完成了</c>
<c.magenta>意图扩展的所有编程</c>


457
00:32:23,343 --> 00:32:25,779
<c.magenta>我们来看看它真正在设备上</c>
<c.magenta>运行的效果</c>


458
00:32:28,849 --> 00:32:32,419
<c.magenta>用独角兽快信给Scott发一条短信</c>


459
00:32:32,486 --> 00:32:35,155
<c.magenta>说</c>
<c.magenta>你准备好你的演示了吗</c>


460
00:32:41,428 --> 00:32:42,296
<c.magenta>没错</c>


461
00:32:48,468 --> 00:32:49,436
<c.magenta>好的</c>
<c.magenta>谢谢</c>


462
00:32:49,636 --> 00:32:51,205
<c.magenta>是的 这个非常振奋人心</c>


463
00:32:51,271 --> 00:32:55,342
<c.magenta>我们刚用Siri发送了第一条</c>
<c.magenta>独角兽快信信息</c>


464
00:32:55,442 --> 00:32:56,944
<c.magenta>这绝对是棒棒哒</c>


465
00:33:00,280 --> 00:33:01,114
<c.magenta>谢谢</c>


466
00:33:05,319 --> 00:33:08,622
<c.magenta>不过 在独角兽快信的主应用里</c>


467
00:33:08,822 --> 00:33:11,391
<c.magenta>当我给我的独角兽小伙伴们</c>
<c.magenta>发短信时</c>


468
00:33:11,458 --> 00:33:14,695
<c.magenta>我会经常用</c>
<c.magenta>他们的独角兽昵称</c>


469
00:33:15,295 --> 00:33:17,397
<c.magenta>所以我实际上想跟Siri说</c>


470
00:33:17,464 --> 00:33:21,134
<c.magenta>给Sparkle Sparkly</c>
<c.magenta>发一条短信说你准备好演讲了吗</c>


471
00:33:21,702 --> 00:33:24,972
<c.magenta>显然Sparkle Sparkly</c>
<c.magenta>是Scott的独角兽昵称</c>


472
00:33:25,939 --> 00:33:29,776
<c.magenta>要实现这个功能</c>
<c.magenta>我们就要进入我们下一个话题</c>


473
00:33:29,910 --> 00:33:32,212
<c.magenta>就是用户特定词汇</c>


474
00:33:34,481 --> 00:33:35,315
<c.magenta>是的</c>


475
00:33:35,382 --> 00:33:36,884
<c.magenta>用户特定词汇</c>


476
00:33:38,252 --> 00:33:39,086
<c.magenta>那么</c>


477
00:33:39,720 --> 00:33:45,726
<c.magenta>这是一些自定义单词或短语</c>
<c.magenta>它们对于你的应用独一无二</c>


478
00:33:45,792 --> 00:33:48,295
<c.magenta>并且因人而异</c>


479
00:33:49,129 --> 00:33:50,931
<c.magenta>在我刚给的例子中</c>


480
00:33:50,998 --> 00:33:54,001
<c.magenta>Sparkle Sparkly</c>
<c.magenta>以及其他独角兽昵称</c>


481
00:33:54,067 --> 00:33:57,337
<c.magenta>在这儿都可以作为</c>
<c.magenta>用户特定词汇</c>


482
00:33:58,872 --> 00:34:03,410
<c.magenta>而要让Siri</c>
<c.magenta>理解用户</c>


483
00:34:03,477 --> 00:34:06,346
<c.magenta>所说的</c>
<c.magenta>这些自定义词汇</c>


484
00:34:06,413 --> 00:34:08,215
<c.magenta>你需要把它们提供给Siri</c>


485
00:34:08,982 --> 00:34:15,255
<c.magenta>你要从你的主应用调用</c>
<c.magenta>INVocabulary API</c>


486
00:34:15,856 --> 00:34:17,123
<c.magenta>我重复一遍</c>


487
00:34:17,190 --> 00:34:20,127
<c.magenta>你要调用</c>
<c.magenta>INVocabulary API</c>


488
00:34:20,194 --> 00:34:23,397
<c.magenta>从你的主应用里调用</c>
<c.magenta>而不是从你的扩展里调用</c>


489
00:34:25,299 --> 00:34:29,036
<c.magenta>好我们来看看我们在独角兽快信</c>
<c.magenta>怎么做到的</c>


490
00:34:31,338 --> 00:34:35,141
<c.magenta>在独角兽快信里我们有</c>
<c.magenta>UCAddressBookManager</c>


491
00:34:35,609 --> 00:34:38,545
<c.magenta>它管理独角兽快信</c>
<c.magenta>自己的联系记录</c>


492
00:34:39,413 --> 00:34:41,215
<c.magenta>而我们创建了这个方法</c>


493
00:34:41,748 --> 00:34:45,351
<c.magenta>来更新Siri</c>
<c.magenta>让Siri知道独角兽昵称</c>


494
00:34:45,985 --> 00:34:50,757
<c.magenta>而一旦哪个联系记录被添加 删除</c>
<c.magenta>或更新时 这个方法就会被调用</c>


495
00:34:52,125 --> 00:34:54,594
<c.magenta>在这个方法里我们</c>
<c.magenta>首先想做的是</c>


496
00:34:54,728 --> 00:34:58,131
<c.magenta>获得一个排好序的</c>
<c.magenta>独角兽昵称列表</c>


497
00:34:59,032 --> 00:35:02,970
<c.magenta>并且 我们把更重要的独角兽昵称</c>
<c.magenta>列在前面</c>


498
00:35:03,570 --> 00:35:07,207
<c.magenta>把相对不重要的</c>
<c.magenta>放在列表后面</c>


499
00:35:08,275 --> 00:35:12,212
<c.magenta>像这样优先处理 我们就能帮Siri</c>


500
00:35:12,279 --> 00:35:17,017
<c.magenta>更好地对独角兽昵称进行</c>
<c.magenta>优先学习和配对处理</c>


501
00:35:18,519 --> 00:35:21,855
<c.magenta>在整理好</c>
<c.magenta>这个独角兽昵称的有序列表后</c>


502
00:35:22,122 --> 00:35:26,760
<c.magenta>我们调用INVocabulary</c>
<c.magenta>API来把它们提供给Siri</c>


503
00:35:27,761 --> 00:35:31,765
<c.magenta>我们还要给它提供</c>
<c.magenta>这些字符串的词汇类别</c>


504
00:35:31,965 --> 00:35:35,969
<c.magenta>在这个例子里独角兽昵称的类别是</c>
<c.magenta>Type.contentName</c>


505
00:35:38,071 --> 00:35:42,376
<c.magenta>关于这段程序 我想最后提一点</c>
<c.magenta>让你们注意</c>


506
00:35:43,277 --> 00:35:48,015
<c.magenta>就是我们要将所有这些操作</c>
<c.magenta>分派到不同的任务队列里</c>


507
00:35:49,283 --> 00:35:54,555
<c.magenta>这是因为</c>
<c.magenta>像获取你整个联系列表这样的操作</c>


508
00:35:54,621 --> 00:35:58,926
<c.magenta>会特别昂贵</c>
<c.magenta>而你不想因为这个来阻碍你的主线程</c>


509
00:35:59,793 --> 00:36:03,096
<c.magenta>所以请务必用GCD</c>


510
00:36:03,397 --> 00:36:08,368
<c.magenta>分派这些昂贵的操作</c>
<c.magenta>到不同的任务队列</c>


511
00:36:09,269 --> 00:36:10,204
<c.magenta>好的</c>


512
00:36:10,270 --> 00:36:15,342
<c.magenta>现在 在我们采用了</c>
<c.magenta>用户特定词汇API后</c>


513
00:36:15,409 --> 00:36:19,379
<c.magenta>我可以发信息给</c>
<c.magenta>Sparkle Sparkly和Celestra</c>


514
00:36:19,446 --> 00:36:22,683
<c.magenta>还有Buttercup</c>
<c.magenta>以及我所有的独角兽小伙伴们</c>


515
00:36:22,749 --> 00:36:24,785
<c.magenta>这绝对是棒棒哒</c>


516
00:36:27,788 --> 00:36:31,525
<c.magenta>现在我又有另外一个功能请求</c>


517
00:36:32,226 --> 00:36:34,862
<c.magenta>在独角兽快信里</c>


518
00:36:34,928 --> 00:36:37,698
<c.magenta>这个应用的画风</c>


519
00:36:37,764 --> 00:36:42,803
<c.magenta>实际上比你在Siri这儿看到的</c>
<c.magenta>还要五彩斑斓 像彩虹一样</c>


520
00:36:43,971 --> 00:36:47,274
<c.magenta>那么 我能让我在Siri里的</c>
<c.magenta>独角兽快信体验</c>


521
00:36:47,341 --> 00:36:52,613
<c.magenta>和在独角兽快信</c>
<c.magenta>主应用里的一样色彩缤纷吗</c>


522
00:36:53,347 --> 00:36:56,984
<c.magenta>关于这个话题 我现在邀请我的队友</c>


523
00:36:57,050 --> 00:37:00,521
<c.magenta>Scott也就是Sparkle Sparkly上台</c>


524
00:37:03,390 --> 00:37:04,424
<c.magenta>下午好</c>


525
00:37:04,625 --> 00:37:07,528
<c.magenta>我是Scott Andrus</c>
<c.magenta>SiriKit的工程师</c>


526
00:37:08,662 --> 00:37:10,998
<c.magenta>现在我们来讲讲</c>
<c.magenta>如何让这个过程</c>


527
00:37:11,064 --> 00:37:13,233
<c.magenta>感觉更像是跟独角兽快信互动</c>


528
00:37:14,101 --> 00:37:18,172
<c.magenta>要做到这一点我们要用SiriKit</c>
<c.magenta>来建立一个用户界面扩展</c>


529
00:37:19,239 --> 00:37:23,110
<c.magenta>在iOS X里 我们引进了</c>
<c.magenta>意图用户界面扩展点</c>


530
00:37:23,644 --> 00:37:26,246
<c.magenta>它能让你创建</c>
<c.magenta>很赞的用户界面扩展</c>


531
00:37:26,313 --> 00:37:30,117
<c.magenta>来在Siri体验里</c>
<c.magenta>提供自定义的用户界面</c>


532
00:37:30,817 --> 00:37:32,252
<c.magenta>那么 让我们开始吧</c>


533
00:37:33,353 --> 00:37:35,122
<c.magenta>你可能想这么做的原因是</c>


534
00:37:35,622 --> 00:37:39,760
<c.magenta>用户界面扩展能增加你的应用</c>
<c.magenta>对用户的影响</c>


535
00:37:40,627 --> 00:37:42,963
<c.magenta>通过引入一个用户界面扩展</c>


536
00:37:43,564 --> 00:37:46,967
<c.magenta>你可以在Siri体验的基础上</c>
<c.magenta>展示你的视图</c>


537
00:37:47,301 --> 00:37:50,103
<c.magenta>然后 你可以融入自定义的体验</c>


538
00:37:50,170 --> 00:37:54,174
<c.magenta>这些体验相对Siri通常显示而言</c>
<c.magenta>对你的应用更为独特</c>


539
00:37:55,375 --> 00:37:58,345
<c.magenta>这会给开发你的应用</c>
<c.magenta>带来很多很好的机会</c>


540
00:37:58,679 --> 00:38:02,149
<c.magenta>这些机会具有独特性</c>
<c.magenta>能让你的应用脱颖而出</c>


541
00:38:03,951 --> 00:38:06,687
<c.magenta>你还可以提供用户定制</c>


542
00:38:06,920 --> 00:38:10,224
<c.magenta>让你可以跟用户一对一互动</c>


543
00:38:11,959 --> 00:38:15,495
<c.magenta>最后 你可以显示</c>
<c.magenta>Siri不会显示的信息</c>


544
00:38:15,996 --> 00:38:18,232
<c.magenta>这是你的工具库里很好的帮手</c>


545
00:38:20,701 --> 00:38:22,102
<c.magenta>还有 它长这个样儿</c>


546
00:38:24,338 --> 00:38:29,109
<c.magenta>那么首先 你要做的就是</c>
<c.magenta>添加一个意图用户界面扩展</c>


547
00:38:30,143 --> 00:38:31,912
<c.magenta>把它加到你的项目里</c>


548
00:38:34,448 --> 00:38:36,617
<c.magenta>并把它嵌入你应用的包裹里</c>


549
00:38:38,952 --> 00:38:42,089
<c.magenta>你便会看到Xcode给你</c>
<c.magenta>生成的Info.plist文件</c>


550
00:38:43,090 --> 00:38:46,560
<c.magenta>在里面 你需要找到新的</c>
<c.magenta>IntentsSupported关键词</c>


551
00:38:46,727 --> 00:38:49,696
<c.magenta>和你在意图扩展看到的类似</c>


552
00:38:50,264 --> 00:38:52,466
<c.magenta>在里面 你要设置一个意图</c>


553
00:38:52,533 --> 00:38:56,370
<c.magenta>用它来在Siri体验中</c>
<c.magenta>展示自定义的用户界面</c>


554
00:38:59,806 --> 00:39:03,477
<c.magenta>用户界面扩展在SiriKit中的</c>
<c.magenta>结构其实很简单</c>


555
00:39:04,945 --> 00:39:08,015
<c.magenta>SiriKit针对你的用户界面扩展</c>


556
00:39:08,081 --> 00:39:10,450
<c.magenta>用互动配置</c>


557
00:39:10,517 --> 00:39:13,987
<c.magenta>这个SiriKit 用户界面扩展里</c>
<c.magenta>很关键的方法</c>


558
00:39:15,322 --> 00:39:17,291
<c.magenta>你的用户界面扩展有一个主要类</c>


559
00:39:17,824 --> 00:39:22,663
<c.magenta>它是UIViewController</c>
<c.magenta>遵循INUIHostedViewControlling协议</c>


560
00:39:24,264 --> 00:39:26,900
<c.magenta>它会将一个</c>
<c.magenta>INInteraction对象</c>


561
00:39:27,234 --> 00:39:29,870
<c.magenta>在配置这一步赋给</c>
<c.magenta>你的用户界面扩展</c>


562
00:39:32,139 --> 00:39:33,607
<c.magenta>现正如Diana提到的那样</c>


563
00:39:34,408 --> 00:39:37,211
<c.magenta>INInteraction类</c>
<c.magenta>定义一个对象</c>


564
00:39:37,411 --> 00:39:39,746
<c.magenta>它涵盖三个重要的属性</c>


565
00:39:40,347 --> 00:39:43,617
<c.magenta>第一个是意图对象</c>
<c.magenta>它要经过确认</c>


566
00:39:43,684 --> 00:39:46,053
<c.magenta>或者被你的意图扩展处理</c>


567
00:39:47,154 --> 00:39:47,988
<c.magenta>第二个属性就是</c>


568
00:39:48,055 --> 00:39:52,759
<c.magenta>Intent response对象</c>
<c.magenta>你的意图扩展把它传给Siri 通过</c>


569
00:39:52,826 --> 00:39:55,596
<c.magenta>确认和处理的</c>
<c.magenta>completion</c>


570
00:39:56,663 --> 00:40:00,067
<c.magenta>最后一个属性是意图处理状态</c>
<c.magenta>一个enum值</c>


571
00:40:00,400 --> 00:40:02,469
<c.magenta>它描述互动的状态</c>


572
00:40:02,569 --> 00:40:04,538
<c.magenta>是你的应用和Siri间的互动</c>


573
00:40:05,772 --> 00:40:08,375
<c.magenta>这些实现起来</c>
<c.magenta>都是非常有用的属性</c>


574
00:40:08,742 --> 00:40:11,578
<c.magenta>对你给Siri制作用户界面很有帮助</c>


575
00:40:15,148 --> 00:40:20,487
<c.magenta>你的视图控制器是操纵用户界面扩展的</c>
<c.magenta>途径 它作为一个主要类</c>


576
00:40:20,554 --> 00:40:22,789
<c.magenta>你要用到它来创建你的用户界面</c>
<c.magenta>它作为</c>


577
00:40:24,191 --> 00:40:26,126
<c.magenta>UIViewController子类</c>


578
00:40:26,527 --> 00:40:30,564
<c.magenta>你就可以用你可能习惯用的</c>
<c.magenta>所有UIKit的强大功能</c>


579
00:40:30,631 --> 00:40:34,067
<c.magenta>就像创建Cocoa Touch</c>
<c.magenta>应用的用户界面一样</c>


580
00:40:36,036 --> 00:40:38,038
<c.magenta>接着 用“互动”</c>
<c.magenta>对象给它配置</c>


581
00:40:38,105 --> 00:40:40,607
<c.magenta>对象由Siri经“互动配置”传给你</c>


582
00:40:42,876 --> 00:40:43,944
<c.magenta>此外 还有别的一些参数</c>


583
00:40:44,011 --> 00:40:46,346
<c.magenta>在这个方法里可能值得你注意</c>


584
00:40:46,413 --> 00:40:49,650
<c.magenta>其中一个是</c>
<c.magenta>providedViewContext参数</c>


585
00:40:50,584 --> 00:40:54,321
<c.magenta>而在iOS X里 这是一个enum值</c>
<c.magenta>它在两个可能值中取其一</c>


586
00:40:55,022 --> 00:40:57,558
<c.magenta>Siri snippet或</c>
<c.magenta>maps card</c>


587
00:40:58,559 --> 00:41:01,094
<c.magenta>所以你可以给你的界面</c>
<c.magenta>进行不同的配置</c>


588
00:41:01,161 --> 00:41:03,830
<c.magenta>针对这些模态视图跟用户间</c>
<c.magenta>不同的互动方式</c>


589
00:41:04,531 --> 00:41:08,001
<c.magenta>而且如果你要做一个订车扩展</c>
<c.magenta>这个会对你很有帮助</c>


590
00:41:10,571 --> 00:41:11,505
<c.magenta>最后</c>


591
00:41:11,905 --> 00:41:14,908
<c.magenta>你会有一个completion</c>
<c.magenta>你调用它来让Siri知道</c>


592
00:41:14,975 --> 00:41:18,212
<c.magenta>你已经完成对用户界面的配置</c>


593
00:41:18,278 --> 00:41:20,280
<c.magenta>你要返回一个</c>
<c.magenta>desiredSize</c>


594
00:41:20,647 --> 00:41:23,517
<c.magenta>告诉Siri怎样在Siri</c>
<c.magenta>snippet调节视图的大小</c>


595
00:41:24,952 --> 00:41:26,820
<c.magenta>我想我们已经知道</c>
<c.magenta>所有要知道的东西</c>


596
00:41:27,354 --> 00:41:31,692
<c.magenta>示范如何给独角兽快信建立</c>
<c.magenta>一个SiriKit 用户界面扩展</c>


597
00:41:32,893 --> 00:41:33,727
<c.magenta>好</c>


598
00:41:34,161 --> 00:41:38,031
<c.magenta>我们回到Diana给我们铺垫的</c>
<c.magenta>这个很棒的项目</c>


599
00:41:38,098 --> 00:41:42,536
<c.magenta>项目用到了我们的Siri扩展</c>
<c.magenta>它让我们能将应用嵌入Siri体验中</c>


600
00:41:43,070 --> 00:41:45,873
<c.magenta>我们在意图用户界面扩展上</c>
<c.magenta>更进一步</c>


601
00:41:46,740 --> 00:41:49,643
<c.magenta>当Diana创建她的</c>
<c.magenta>Siri扩展对象时</c>


602
00:41:49,977 --> 00:41:53,580
<c.magenta>我们可以配套创建一个</c>
<c.magenta>意图用户界面扩展对象</c>


603
00:41:54,181 --> 00:41:56,183
<c.magenta>Xcode建了个分组</c>
<c.magenta>专门在左边这儿的</c>


604
00:41:56,250 --> 00:41:58,752
<c.magenta>项目导航器建给Siri</c>
<c.magenta>用户界面扩展</c>


605
00:41:59,853 --> 00:42:00,921
<c.magenta>我们打开它</c>


606
00:42:01,321 --> 00:42:05,025
<c.magenta>可看到一些很赞的文件让我们</c>
<c.magenta>能开始编意图用户界面扩展</c>


607
00:42:06,326 --> 00:42:08,328
<c.magenta>首先是</c>
<c.magenta>IntentViewController类</c>


608
00:42:08,562 --> 00:42:10,697
<c.magenta>它是我们扩展的主要类</c>


609
00:42:12,032 --> 00:42:13,967
<c.magenta>还有给这个类的storyboard</c>


610
00:42:14,968 --> 00:42:17,571
<c.magenta>以及Info.plist</c>
<c.magenta>我们先来研究这个</c>


611
00:42:17,804 --> 00:42:20,140
<c.magenta>用它来设定我们支持的意图</c>


612
00:42:22,643 --> 00:42:23,810
<c.magenta>在这里面</c>


613
00:42:25,145 --> 00:42:28,749
<c.magenta>NSExtension字典里有个</c>
<c.magenta>IntentsSupported列表</c>


614
00:42:30,217 --> 00:42:32,152
<c.magenta>我直接在这儿加一个条目</c>


615
00:42:32,653 --> 00:42:35,455
<c.magenta>现在 关于意图用户界面扩餐</c>
<c.magenta>我们想做的</c>


616
00:42:35,789 --> 00:42:39,560
<c.magenta>是在Siri显示结果时</c>
<c.magenta>给用户展示一个用户界面</c>


617
00:42:40,160 --> 00:42:42,563
<c.magenta>用来给其他独角兽发信息</c>


618
00:42:43,397 --> 00:42:44,398
<c.magenta>而当显示这个界面时</c>


619
00:42:44,464 --> 00:42:46,834
<c.magenta>我们希望它是</c>
<c.magenta>一个聊天记录界面</c>


620
00:42:47,234 --> 00:42:51,071
<c.magenta>希望它能彰显我们应用的</c>
<c.magenta>“独角兽性质”</c>


621
00:42:52,940 --> 00:42:59,379
<c.magenta>所以在这里面 我要给</c>
<c.magenta>INSendMessageIntent添加支持</c>


622
00:42:59,847 --> 00:43:02,583
<c.magenta>声明我们要</c>
<c.magenta>展示一个用户界面</c>


623
00:43:02,749 --> 00:43:05,052
<c.magenta>在Siri给我们的应用</c>
<c.magenta>处理意图时显示</c>


624
00:43:06,787 --> 00:43:08,589
<c.magenta>好 编好Info.plist后</c>


625
00:43:08,655 --> 00:43:10,991
<c.magenta>我们来实现</c>
<c.magenta>IntentViewController</c>


626
00:43:12,693 --> 00:43:13,861
<c.magenta>我缩小页面回来</c>


627
00:43:14,461 --> 00:43:16,430
<c.magenta>这儿有我们的IntentViewController类</c>


628
00:43:17,231 --> 00:43:20,200
<c.magenta>注意到这是一个</c>
<c.magenta>UIViewController的子类</c>


629
00:43:20,267 --> 00:43:23,170
<c.magenta>遵循INUIHostedViewControlling协议</c>


630
00:43:23,704 --> 00:43:26,507
<c.magenta>既然遵循协议</c>
<c.magenta>就要相应地对它进行配置</c>


631
00:43:26,573 --> 00:43:29,443
<c.magenta>要用“互动”</c>
<c.magenta>这儿程序把它作为模块提供给我</c>


632
00:43:31,011 --> 00:43:32,813
<c.magenta>现在我首先要做的</c>


633
00:43:33,180 --> 00:43:38,252
<c.magenta>是把UnicornCore框架</c>
<c.magenta>作为模块导入我的Swift文件</c>


634
00:43:39,086 --> 00:43:41,021
<c.magenta>值得重申的是</c>
<c.magenta>这个UnicornCore框架</c>


635
00:43:41,154 --> 00:43:43,624
<c.magenta>是我们给我们应用</c>
<c.magenta>实现的框架</c>


636
00:43:43,690 --> 00:43:47,327
<c.magenta>所有独角兽应用都用到它</c>
<c.magenta>如Unicorn Pay或Unicorn Rides</c>


637
00:43:47,394 --> 00:43:52,766
<c.magenta>这是给我们的应用和扩展</c>
<c.magenta>共享程序的很好的方法</c>


638
00:43:53,133 --> 00:43:57,171
<c.magenta>我们在Diana的演示中已经</c>
<c.magenta>很好地用了它来共享</c>


639
00:43:57,237 --> 00:44:00,741
<c.magenta>扩展中解析 确认</c>
<c.magenta>和处理的业务逻辑</c>


640
00:44:01,208 --> 00:44:03,644
<c.magenta>现在我们想用它来共享用户界面</c>


641
00:44:03,744 --> 00:44:05,879
<c.magenta>针对我们的用户界面扩展和应用</c>


642
00:44:06,013 --> 00:44:08,348
<c.magenta>以此达到我们会有熟悉感觉的效果</c>


643
00:44:08,415 --> 00:44:11,318
<c.magenta>不论我们在哪儿发送</c>
<c.magenta>独角兽快信信息</c>


644
00:44:16,256 --> 00:44:19,059
<c.magenta>我们来开始实现“互动配置”方法</c>


645
00:44:21,495 --> 00:44:22,930
<c.magenta>在这里面</c>


646
00:44:22,996 --> 00:44:25,065
<c.magenta>我直接设置一个size变量</c>


647
00:44:25,132 --> 00:44:28,202
<c.magenta>一旦我完成配置后</c>
<c.magenta>就把它返回给Siri</c>


648
00:44:30,037 --> 00:44:33,207
<c.magenta>现在我要查看</c>
<c.magenta>interaction.representsSendMessageIntent是否为真</c>


649
00:44:33,941 --> 00:44:36,877 line:1
<c.magenta>这儿的用法很方便</c>
<c.magenta>因为我已把它实现为类扩展</c>


650
00:44:36,944 --> 00:44:39,880 line:1
<c.magenta>以UnicornCore framework里的</c>
<c.magenta>INinteraction为基础</c>


651
00:44:44,117 --> 00:44:46,486 line:1
<c.magenta>然后 我建一个</c>
<c.magenta>chatViewController实例</c>


652
00:44:46,854 --> 00:44:50,157
<c.magenta>我们用它来代表</c>
<c.magenta>一个信息发送界面</c>


653
00:44:50,224 --> 00:44:51,825
<c.magenta>我们两个独角兽快信</c>
<c.magenta>应用都用上</c>


654
00:44:51,892 --> 00:44:54,328
<c.magenta>而且我们也要在我们的</c>
<c.magenta>用户界面扩展这儿使用</c>


655
00:44:57,631 --> 00:44:59,132 line:1
<c.magenta>我们来配置chatViewController</c>


656
00:44:59,199 --> 00:45:01,835 line:1
<c.magenta>用“配置”的</c>
<c.magenta>messageContent</c>


657
00:45:01,902 --> 00:45:05,038 line:1
<c.magenta>我还是用类扩展从“互动”中获取它</c>


658
00:45:08,008 --> 00:45:10,511 line:1
<c.magenta>建一个UCContact模型对象</c>


659
00:45:10,844 --> 00:45:13,046 line:1
<c.magenta>它基于“互动”的属性</c>


660
00:45:13,347 --> 00:45:16,283 line:1
<c.magenta>接着 我把模型对象</c>
<c.magenta>赋给chatViewController</c>


661
00:45:16,350 --> 00:45:18,519 line:1
<c.magenta>来显示信息的收件人</c>


662
00:45:21,588 --> 00:45:23,056 line:1
<c.magenta>最后 我用switch语句</c>


663
00:45:23,123 --> 00:45:25,225 line:1
<c.magenta>判断“互动”的</c>
<c.magenta>intentHandlingStatus</c>


664
00:45:25,626 --> 00:45:28,595
<c.magenta>我们可以以此对我们的</c>
<c.magenta>用户界面进行不同的配置</c>


665
00:45:28,662 --> 00:45:30,864
<c.magenta>以信息是否已经</c>
<c.magenta>发送出去作为基础</c>


666
00:45:31,398 --> 00:45:34,935
<c.magenta>比如在这个例子中</c>
<c.magenta>如果信息未发送</c>


667
00:45:35,002 --> 00:45:39,473 line:1
<c.magenta>即intentHandlingStatus</c>
<c.magenta>是unspecified inProgress或ready</c>


668
00:45:39,973 --> 00:45:43,277 line:1
<c.magenta>就把chatViewController的</c>
<c.magenta>isSent设为假</c>


669
00:45:43,710 --> 00:45:47,681 line:1
<c.magenta>这说明我应该设定一个草稿式界面</c>
<c.magenta>显示给用户</c>


670
00:45:48,515 --> 00:45:51,218 line:1
<c.magenta>否则 如果发送已经完成</c>
<c.magenta>我可以将isSent</c>


671
00:45:51,285 --> 00:45:53,020 line:1
<c.magenta>在chatViewController里设为真</c>


672
00:45:53,320 --> 00:45:56,390 line:1
<c.magenta>表明我已经发了信息</c>
<c.magenta>而且要让用户也知道</c>


673
00:46:00,093 --> 00:46:02,963 line:1
<c.magenta>最后我就呈现chatViewController</c>
<c.magenta>它是一个子控制器</c>


674
00:46:03,030 --> 00:46:05,199 line:1
<c.magenta>其母控制器是这个</c>
<c.magenta>IntentViewController主要类</c>


675
00:46:05,499 --> 00:46:06,800 line:1
<c.magenta>这是一个很有用的方法</c>


676
00:46:07,100 --> 00:46:09,102 line:1
<c.magenta>来实现不同的视图控制器</c>


677
00:46:09,169 --> 00:46:11,672 line:1
<c.magenta>针对我用户界面扩展里的</c>
<c.magenta>不同意图</c>


678
00:46:14,341 --> 00:46:15,175 line:1
<c.magenta>最后</c>


679
00:46:15,442 --> 00:46:19,947 line:1
<c.magenta>我可以用iOS X里用户界面扩展的</c>
<c.magenta>NSExtensionContext</c>


680
00:46:20,981 --> 00:46:22,249
<c.magenta>来得到一个最大的大小</c>


681
00:46:22,316 --> 00:46:25,853
<c.magenta>然后我默认地把它用在</c>
<c.magenta>我的独角兽快信里</c>


682
00:46:28,288 --> 00:46:30,624 line:1
<c.magenta>如因某些原因</c>
<c.magenta>得不到extensionContext</c>


683
00:46:30,858 --> 00:46:33,994 line:1
<c.magenta>我就用chatViewController的</c>
<c.magenta>desiredSize</c>


684
00:46:34,061 --> 00:46:34,995 line:1
<c.magenta>它对我来说够好了</c>


685
00:46:38,866 --> 00:46:40,200
<c.magenta>这是比较乐观的一种情形</c>


686
00:46:40,467 --> 00:46:43,337
<c.magenta>假如什么出了错</c>
<c.magenta>给我们意想不到的“互动”</c>


687
00:46:44,104 --> 00:46:45,772
<c.magenta>我们可以设大小为0</c>


688
00:46:45,839 --> 00:46:50,110
<c.magenta>让Siri不要在Siri snippet里</c>
<c.magenta>画我们用户界面扩展的视图</c>


689
00:46:52,479 --> 00:46:53,313 line:1
<c.magenta>好</c>


690
00:46:53,714 --> 00:46:55,048 line:1
<c.magenta>我最后要做的</c>


691
00:46:55,115 --> 00:46:58,752 line:1
<c.magenta>是告诉Siri我已经完成实现</c>


692
00:46:58,819 --> 00:47:00,821 line:1
<c.magenta>和配置我的用户界面</c>


693
00:47:01,188 --> 00:47:03,690 line:1
<c.magenta>这样它就会在Siri</c>
<c.magenta>snippet里给我们展示</c>


694
00:47:05,859 --> 00:47:06,693
<c.magenta>好</c>


695
00:47:06,760 --> 00:47:09,229
<c.magenta>我有这段程序的一个版本</c>
<c.magenta>在我的设备上运行</c>


696
00:47:09,596 --> 00:47:10,998
<c.magenta>我们现在来看看它是怎么样的</c>


697
00:47:16,737 --> 00:47:18,939
<c.magenta>你可以看到</c>
<c.magenta>我有独角兽快信应用</c>


698
00:47:19,673 --> 00:47:21,375
<c.magenta>我准备发信息给Diana</c>


699
00:47:23,744 --> 00:47:27,347
<c.magenta>用独角兽快信</c>
<c.magenta>发信息给Diana说</c>


700
00:47:27,414 --> 00:47:29,116
<c.magenta>“你的演示很棒！”</c>


701
00:47:40,794 --> 00:47:43,363
<c.magenta>于是我们这儿有一个很棒的</c>
<c.magenta>自定义用户界面</c>


702
00:47:43,764 --> 00:47:46,166
<c.magenta>但你还会注意到有些东西不太对</c>


703
00:47:46,567 --> 00:47:48,135
<c.magenta>我们现在来看看是怎么回事</c>


704
00:47:56,710 --> 00:47:58,478
<c.magenta>我们刚给你们展示了</c>


705
00:47:58,545 --> 00:48:00,981
<c.magenta>如何用SiriKit构建</c>
<c.magenta>你的用户界面扩展</c>


706
00:48:01,548 --> 00:48:02,716
<c.magenta>这非常好</c>


707
00:48:03,984 --> 00:48:04,952
<c.magenta>但你会意识到</c>


708
00:48:05,018 --> 00:48:06,887
<c.magenta>有些东西还是有点不妥</c>


709
00:48:06,954 --> 00:48:09,890
<c.magenta>特别是我们在Siri展示给</c>
<c.magenta>用户的用户界面</c>


710
00:48:10,624 --> 00:48:14,027
<c.magenta>于是我们弄了一个复制版聊天记录界面</c>


711
00:48:14,094 --> 00:48:15,896
<c.magenta>在Siri snippet里展示</c>


712
00:48:16,830 --> 00:48:21,802
<c.magenta>默认地 Siri对不同</c>
<c.magenta>意图都显示用户界面</c>


713
00:48:21,869 --> 00:48:23,704
<c.magenta>如SentMessageIntent</c>


714
00:48:23,770 --> 00:48:26,707
<c.magenta>刚用它在独角兽快信</c>
<c.magenta>给Diana发了信息</c>


715
00:48:27,941 --> 00:48:31,345
<c.magenta>同理 对于我们</c>
<c.magenta>的独角兽快信用户 我们想做的</c>


716
00:48:31,411 --> 00:48:33,914
<c.magenta>是真正展示我们的</c>
<c.magenta>自定义用户界面</c>


717
00:48:33,981 --> 00:48:37,417
<c.magenta>让用户们对“独角兽性质”</c>
<c.magenta>比较好的感觉</c>


718
00:48:37,518 --> 00:48:39,820
<c.magenta>就在他们用独角兽快信</c>
<c.magenta>发信息时</c>


719
00:48:41,555 --> 00:48:44,725
<c.magenta>我们在iOS X可以做到这一点</c>
<c.magenta>用一个可选的新协议</c>


720
00:48:45,592 --> 00:48:50,197
<c.magenta>通过实现</c>
<c.magenta>INUIHostedViewSiriProviding协议</c>


721
00:48:50,664 --> 00:48:51,965
<c.magenta>你可以让Siri知道</c>


722
00:48:52,232 --> 00:48:54,835
<c.magenta>你在把信息还是地图画在</c>


723
00:48:55,068 --> 00:48:56,637
<c.magenta>你的用户界面扩展视图</c>


724
00:48:57,137 --> 00:48:59,506
<c.magenta>所以你可以选择显示</c>


725
00:48:59,573 --> 00:49:03,377
<c.magenta>不同的特定内容</c>
<c.magenta>到你的用户界面上</c>


726
00:49:03,844 --> 00:49:06,680
<c.magenta>并代替Siri操控</c>
<c.magenta>这个界面</c>


727
00:49:07,514 --> 00:49:08,916
<c.magenta>最后 当你这么做了</c>


728
00:49:09,483 --> 00:49:11,552
<c.magenta>Siri便会调节你视图的内容</c>


729
00:49:12,019 --> 00:49:15,722
<c.magenta>所以你要确认画出来的</c>
<c.magenta>这些属性准确</c>


730
00:49:16,123 --> 00:49:17,324
<c.magenta>代表了用户意愿</c>


731
00:49:20,127 --> 00:49:21,428
<c.magenta>我们来看IntentViewController</c>


732
00:49:21,495 --> 00:49:23,897
<c.magenta>我们刚在我们的用户界面扩展里用了它</c>


733
00:49:24,932 --> 00:49:26,133
<c.magenta>你可以在这儿看到</c>


734
00:49:26,200 --> 00:49:30,904
<c.magenta>如果我们实现</c>
<c.magenta>INUIHostedViewSiriProviding协议</c>


735
00:49:31,638 --> 00:49:35,642
<c.magenta>我们就可以实现displaysMessage</c>
<c.magenta>属性并返回真值</c>


736
00:49:35,876 --> 00:49:40,380
<c.magenta>告诉Siri我们正在</c>
<c.magenta>独角兽快信显示信息内容</c>


737
00:49:43,784 --> 00:49:48,455
<c.magenta>而这就是实现你自己的用户界面</c>
<c.magenta>所需要的一切</c>


738
00:49:48,522 --> 00:49:49,356
<c.magenta>在Siri里面</c>


739
00:49:50,624 --> 00:49:53,327
<c.magenta>我们来看看这个在</c>
<c.magenta>设备上运行的效果</c>


740
00:49:53,560 --> 00:49:56,964
<c.magenta>我设备上有这个应用的一个</c>
<c.magenta>一模一样的版本</c>


741
00:49:59,266 --> 00:50:00,567
<c.magenta>我们回到我的设备上</c>


742
00:50:01,535 --> 00:50:03,270
<c.magenta>我们来发另一条信息给Diana</c>


743
00:50:05,739 --> 00:50:09,376
<c.magenta>用独角兽快信</c>
<c.magenta>发信息给Diana说</c>


744
00:50:09,877 --> 00:50:13,547
<c.magenta>“用独角兽的蹄子</c>
<c.magenta>很难打演示的代码”</c>


745
00:50:19,520 --> 00:50:22,189 line:1
<c.magenta>现在我们看到跟我们预期</c>
<c.magenta>一模一样的界面</c>


746
00:50:22,356 --> 00:50:23,957 line:1
<c.magenta>也跟我们想展示给用户的一样</c>


747
00:50:34,535 --> 00:50:38,405
<c.magenta>我们的界面不会被</c>
<c.magenta>Siri默认显示的界面所阻碍</c>


748
00:50:38,772 --> 00:50:42,276
<c.magenta>这给我们一个很好的窗口</c>
<c.magenta>来展示一个自定义的用户界面</c>


749
00:50:42,342 --> 00:50:46,480
<c.magenta>来真正反映我们应用的</c>
<c.magenta>“独角兽性质”的画风</c>


750
00:50:49,950 --> 00:50:51,685
<c.magenta>现在 我最后分享一些点子</c>


751
00:50:51,852 --> 00:50:54,421
<c.magenta>在我们今天离开之前</c>
<c.magenta>再谈谈用户界面扩展</c>


752
00:50:55,856 --> 00:50:57,758
<c.magenta>我想首先留给你们的</c>


753
00:50:58,158 --> 00:51:01,962
<c.magenta>是你对待用户界面扩展时</c>
<c.magenta>应注意考虑存储量</c>


754
00:51:02,963 --> 00:51:05,332
<c.magenta>因为扩展是默认为暂时性的</c>


755
00:51:05,399 --> 00:51:08,135
<c.magenta>仅仅在很短时间内展示给用户</c>


756
00:51:08,535 --> 00:51:11,004
<c.magenta>所以系统有一个强制的</c>
<c.magenta>比较低的存储量限制</c>


757
00:51:11,071 --> 00:51:13,774
<c.magenta>比你在你一般的应用里</c>
<c.magenta>可能习惯的存储量还要低</c>


758
00:51:14,341 --> 00:51:19,479
<c.magenta>所以像MKMapView这样的视图</c>
<c.magenta>用起来特别耗存储量</c>


759
00:51:19,780 --> 00:51:23,050
<c.magenta>在建立你的用户界面扩展时</c>
<c.magenta>你们要谨慎地使用这些视图</c>


760
00:51:25,953 --> 00:51:29,623
<c.magenta>正如我们所看到的</c>
<c.magenta>我们可以获得最小和最大的视图大小</c>


761
00:51:29,923 --> 00:51:33,026
<c.magenta>在用户界面扩展里通过</c>
<c.magenta>NSExtensionContext获得</c>


762
00:51:33,660 --> 00:51:37,231
<c.magenta>这会对你特别有用</c>
<c.magenta>特别是当你设计你的应用</c>


763
00:51:37,297 --> 00:51:41,134
<c.magenta>而你的用户界面扩展要在很多</c>
<c.magenta>不同大小的配置下显示的时候</c>


764
00:51:41,768 --> 00:51:45,472
<c.magenta>但你返回给Siri的</c>
<c.magenta>desiredSize正是你想要的</c>


765
00:51:45,539 --> 00:51:46,607
<c.magenta>你想要的大小</c>


766
00:51:47,241 --> 00:51:49,943
<c.magenta>所以 如果你要用不同的布局</c>


767
00:51:50,410 --> 00:51:52,513
<c.magenta>你要确保你的程序有很强的适应性</c>


768
00:51:52,579 --> 00:51:54,748
<c.magenta>无论如何它的外观都不错</c>
<c.magenta>不管大小是最小</c>


769
00:51:54,882 --> 00:51:57,951
<c.magenta>还是最大</c>
<c.magenta>不管Siri怎么画它</c>


770
00:52:02,022 --> 00:52:04,625
<c.magenta>总之 我们看到了几个关键点</c>


771
00:52:04,725 --> 00:52:08,161
<c.magenta>关于延伸我们的应用</c>
<c.magenta>来适应SiriKit</c>


772
00:52:09,062 --> 00:52:12,366
<c.magenta>而首先要做的就是</c>
<c.magenta>妥当地准备好你的应用</c>


773
00:52:12,900 --> 00:52:15,936
<c.magenta>通过很好地利用共享的程序</c>


774
00:52:16,003 --> 00:52:20,374
<c.magenta>比如嵌入框架</c>
<c.magenta>还有实现单元测试</c>


775
00:52:20,674 --> 00:52:24,611
<c.magenta>来正确地测试 Siri可能</c>
<c.magenta>传给我们的不同的意图</c>


776
00:52:25,746 --> 00:52:29,283
<c.magenta>并且规划好我们的应用</c>
<c.magenta>来使用合适数量的扩展</c>


777
00:52:31,685 --> 00:52:34,154
<c.magenta>我们解决了添加</c>
<c.magenta>第一个意图扩展的问题</c>


778
00:52:34,688 --> 00:52:38,358
<c.magenta>并实现了解析</c>
<c.magenta>确认和处理的业务逻辑</c>


779
00:52:38,892 --> 00:52:41,328
<c.magenta>它让我们的应用跟Siri</c>
<c.magenta>实现很好的对接</c>


780
00:52:44,164 --> 00:52:47,334
<c.magenta>最后 我们展示了如何</c>
<c.magenta>在Siri里提供一个用户界面</c>


781
00:52:47,701 --> 00:52:52,706
<c.magenta>来将我们应用自定义的独特体验</c>
<c.magenta>融入到Siri体验之中</c>


782
00:52:55,776 --> 00:52:57,377
<c.magenta>我们这个展示会的样本代码</c>


783
00:52:57,444 --> 00:53:00,480
<c.magenta>以及关于SiriKit的幻灯片和</c>
<c.magenta>一些很棒的参考文档</c>


784
00:53:00,848 --> 00:53:02,349
<c.magenta>都会公布在我们的网站上</c>


785
00:53:04,518 --> 00:53:06,553
<c.magenta>而且我们昨天也有一个很棒的会</c>


786
00:53:06,887 --> 00:53:08,589
<c.magenta>叫“SiriKit入门”</c>


787
00:53:08,722 --> 00:53:12,693
<c.magenta>我们谈了我们对SiriKit的期望</c>
<c.magenta>以及如何将它融入iOS</c>


788
00:53:14,194 --> 00:53:16,864
<c.magenta>我们也有关于应用扩展最佳实践的</c>
<c.magenta>一个很棒的会</c>


789
00:53:16,964 --> 00:53:20,400
<c.magenta>是WWDC 2015里的会</c>
<c.magenta>我强烈推荐你们去看</c>


790
00:53:20,467 --> 00:53:22,603
<c.magenta>特别是如果你想实现</c>
<c.magenta>SiriKit扩展</c>


791
00:53:23,237 --> 00:53:26,640
<c.magenta>我希望你会觉得实现你的</c>
<c.magenta>SiriKit扩展</c>


792
00:53:26,707 --> 00:53:30,844
<c.magenta>及你的应用能像我们实现</c>
<c.magenta>独角兽快信一样简单有趣</c>


793
00:53:31,245 --> 00:53:32,112
<c.magenta>谢谢</c>

