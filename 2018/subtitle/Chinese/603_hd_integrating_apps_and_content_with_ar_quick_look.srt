1
00:00:07,016 --> 00:00:15,500
[ 音乐 ]


2
00:00:22,516 --> 00:00:26,666
[ 掌声 ]


3
00:00:27,166 --> 00:00:29,076
>> 大家下午好


4
00:00:29,076 --> 00:00:30,656
欢迎来到 将 App 和内容集成于


5
00:00:30,656 --> 00:00:32,016
AR Quick Look


6
00:00:32,415 --> 00:00:34,176
我是 David Lui 


7
00:00:34,176 --> 00:00:35,926
我很高兴能为你讲述 AR Quick Look


8
00:00:36,556 --> 00:00:37,936
正如你们都在昨天 Keynote 看到的那样


9
00:00:37,936 --> 00:00:39,976
我们为 iOS 带来了新的


10
00:00:39,976 --> 00:00:41,726
在 AR 空间中


11
00:00:41,726 --> 00:00:45,606
预览 3D 模型的能力


12
00:00:45,606 --> 00:00:47,436
AR 正在成为


13
00:00:47,436 --> 00:00:48,886
把虚拟对象展现在现实世界的工具


14
00:00:48,886 --> 00:00:51,096
例如 你为客厅


15
00:00:51,096 --> 00:00:52,376
挑选的新沙发


16
00:00:52,776 --> 00:00:54,386
和那个你在读的


17
00:00:54,426 --> 00:00:57,016
书中可爱的动画角色


18
00:00:57,016 --> 00:00:58,546
AR Quick Look 被设计用于


19
00:00:58,546 --> 00:01:01,676
帮助操作系统的任何含有 AR 的


20
00:01:01,676 --> 00:01:03,836
App 来以更简单的方式


21
00:01:03,836 --> 00:01:06,266
应用 AR 预览


22
00:01:06,266 --> 00:01:07,986
以提供一致的观看体验


23
00:01:08,786 --> 00:01:11,426
所以 在本次会议中 我们将更加


24
00:01:11,426 --> 00:01:13,176
深入地了解 AR Quick Look


25
00:01:13,176 --> 00:01:15,516
如何设计你的 App


26
00:01:15,516 --> 00:01:17,286
和网页 以更好地利用


27
00:01:17,486 --> 00:01:19,526
AR Quick Look 并为其


28
00:01:19,526 --> 00:01:22,686
定制内容


29
00:01:22,936 --> 00:01:23,706
让我们开始吧


30
00:01:25,586 --> 00:01:26,566
现在让我们来看看 AR Quick Look


31
00:01:26,566 --> 00:01:28,366
快速浏览是如何与“文件” App 配合的


32
00:01:28,926 --> 00:01:30,326
我们先预览这个 3D 银水瓶模型


33
00:01:30,326 --> 00:01:32,376
并将其嵌入 AR 环境


34
00:01:33,226 --> 00:01:35,046
我们找到桌子 然后把


35
00:01:35,046 --> 00:01:36,296
水瓶放在表面上


36
00:01:37,146 --> 00:01:38,256
你可以看到水壶被呈现为


37
00:01:38,256 --> 00:01:40,146
1 比 1 的比例 我们由此能


38
00:01:40,146 --> 00:01:42,726
更好的了解它与环境的搭配情况


39
00:01:43,466 --> 00:01:45,166
在我的桌子上 我有一个 Apple


40
00:01:45,166 --> 00:01:47,126
马克杯 一些便利贴和一个


41
00:01:47,126 --> 00:01:49,246
电水壶 在与这些物品放在一起时


42
00:01:49,246 --> 00:01:50,526
它看起来是如此真实


43
00:01:51,376 --> 00:01:52,916
真正令人惊奇的是


44
00:01:52,916 --> 00:01:54,106
你可以看到五颜六色的


45
00:01:54,106 --> 00:01:56,016
便利贴把颜色反射在


46
00:01:56,016 --> 00:01:58,306
瓶身上 产生了


47
00:01:58,306 --> 00:01:59,876
它实际上是


48
00:01:59,876 --> 00:02:00,316
真的在那里的错觉


49
00:02:01,506 --> 00:02:04,016
所以 将虚拟水瓶渲染进现实世界


50
00:02:04,046 --> 00:02:04,866
就是这么神奇


51
00:02:07,426 --> 00:02:08,696
为了让我可爱的水瓶进入现实世界


52
00:02:08,696 --> 00:02:11,086
我们可以利用 AR Quick Look


53
00:02:11,426 --> 00:02:14,296
一种在 AR 中预览 3D 内容的方式


54
00:02:14,296 --> 00:02:16,856
AR Quick Look 内置并


55
00:02:16,956 --> 00:02:19,316
深入集成到操作系统中


56
00:02:19,316 --> 00:02:20,766
来允许使用任何 App 和网页


57
00:02:20,766 --> 00:02:22,346
进行预览


58
00:02:23,986 --> 00:02:25,756
这些深度整合来自于


59
00:02:25,756 --> 00:02:27,456
我们对 Quick Look 技术的使用


60
00:02:27,456 --> 00:02:29,396
并拓展其可用性


61
00:02:29,396 --> 00:02:32,906
来提升系统层面的 AR 体验


62
00:02:34,136 --> 00:02:36,086
Quick Look 的 AR 部分提供于


63
00:02:36,086 --> 00:02:40,716
运行 iOS 12 并兼容 ARKit 的设备上


64
00:02:40,716 --> 00:02:42,776
在非兼容设备上


65
00:02:42,846 --> 00:02:43,606
只提供 object mode


66
00:02:44,716 --> 00:02:46,436
你会看到这个新的 AR 文件图标


67
00:02:46,696 --> 00:02:48,786
存在于整个操作系统来表示


68
00:02:49,076 --> 00:02:50,846
新的 3D 文件格式 usdz


69
00:02:50,846 --> 00:02:53,416
下面我们来介绍 Quick Look


70
00:02:53,786 --> 00:02:56,166
与查看器中的 3D 内容


71
00:02:56,166 --> 00:02:57,366
并查看它在


72
00:02:57,366 --> 00:02:57,586
你的世界中的样子


73
00:02:58,446 --> 00:02:59,926
现在 让我们点击图标来


74
00:02:59,976 --> 00:03:01,986
启动 AR Quick Look


75
00:03:01,986 --> 00:03:03,426
AR Quick Look 能够处理


76
00:03:03,426 --> 00:03:05,276
AR 体验的搭建


77
00:03:05,276 --> 00:03:07,666
例如平面检测 对象放置


78
00:03:08,486 --> 00:03:10,326
手势操纵和


79
00:03:10,326 --> 00:03:11,776
创建接触阴影


80
00:03:12,456 --> 00:03:14,126
但这些仅仅只是


81
00:03:14,126 --> 00:03:15,926
所有查看器功能的一部分


82
00:03:15,926 --> 00:03:17,326
除此之外还能渲染 3D 模型


83
00:03:17,326 --> 00:03:19,766
并提供身临其境的感受


84
00:03:21,356 --> 00:03:23,396
如果你的


85
00:03:23,396 --> 00:03:25,286
目标是预览 3D 对象


86
00:03:25,726 --> 00:03:26,746
并将其嵌入现实世界 请使用 AR Quick Look


87
00:03:27,526 --> 00:03:28,696
通过采用我们的新系统查看器


88
00:03:28,696 --> 00:03:30,846
你有一个一致的 3D


89
00:03:30,846 --> 00:03:32,476
内容预览体验


90
00:03:32,896 --> 00:03:35,003
你不需要创建你自己的查看器


91
00:03:35,156 --> 00:03:36,776
采用和将查看器


92
00:03:36,776 --> 00:03:38,196
植入于网站和 App


93
00:03:38,196 --> 00:03:39,676
真的很容易


94
00:03:39,676 --> 00:03:40,986
它可以像嵌入一个 usdz 文件一样简单


95
00:03:41,056 --> 00:03:43,236
前提是你的 App


96
00:03:43,316 --> 00:03:44,916
已经支持并使用 Quick Look


97
00:03:46,546 --> 00:03:48,996
就像你从上一张幻灯片看到的那样


98
00:03:48,996 --> 00:03:50,586
AR Quick Look 为你做了所有繁琐的工作


99
00:03:50,826 --> 00:03:52,576
来提供和创建一个


100
00:03:52,626 --> 00:03:53,906
很棒的 AR 体验


101
00:03:54,656 --> 00:03:56,196
通过只提供 3D 内容


102
00:03:56,196 --> 00:03:58,826
来获得惊人的 AR 体验


103
00:03:58,856 --> 00:04:00,326
是如此神奇


104
00:04:00,476 --> 00:04:02,036
并且我们把这变得非常简单


105
00:04:02,036 --> 00:04:02,966
你不需要处理


106
00:04:02,966 --> 00:04:04,486
任何 AR 的具体参数


107
00:04:06,226 --> 00:04:07,386
现在让我们通过一个 web 演示


108
00:04:07,386 --> 00:04:08,826
来看看 AR Quick Look 的实际演示


109
00:04:11,516 --> 00:04:16,196
[ 掌声 ]


110
00:04:16,696 --> 00:04:18,206
在这里 我准备好了这些文件


111
00:04:18,206 --> 00:04:20,606
我有一个 3D 对象的目录


112
00:04:21,236 --> 00:04:22,656
你会注意到


113
00:04:22,816 --> 00:04:24,286
这些在右上角


114
00:04:24,286 --> 00:04:26,146
有 AR 徽章戳的


115
00:04:26,146 --> 00:04:27,366
丰富和美丽的缩略图


116
00:04:27,366 --> 00:04:28,156
是告诉你


117
00:04:28,156 --> 00:04:29,666
他们包含 AR 体验


118
00:04:30,356 --> 00:04:31,806
这里 我有很多很棒的模型


119
00:04:31,806 --> 00:04:33,356
可供选择 但我个人


120
00:04:33,356 --> 00:04:34,926
最喜欢的是这个


121
00:04:34,926 --> 00:04:37,036
右上角的紫色土豚


122
00:04:37,956 --> 00:04:39,576
Radar 是我们的 bug 跟踪软件


123
00:04:39,576 --> 00:04:41,366
并且 如果你不知道的话


124
00:04:41,716 --> 00:04:43,556
紫色的土豚是我们的吉祥物


125
00:04:44,326 --> 00:04:45,976
我会继续使用 Quick Look 来把


126
00:04:46,116 --> 00:04:47,496
紫色的土豚放入查看器


127
00:04:47,496 --> 00:04:50,816
我们可以看到她在


128
00:04:50,896 --> 00:04:52,886
我们的工作室环境下


129
00:04:52,886 --> 00:04:54,006
我们称之为 object mode


130
00:04:55,326 --> 00:04:56,426
你可以四处移动


131
00:04:56,426 --> 00:04:59,176
并从各种各样的角度观察模型


132
00:04:59,766 --> 00:05:01,316
我们通过捏来调节对象大小


133
00:05:01,616 --> 00:05:03,266
使其看起来更大


134
00:05:03,266 --> 00:05:04,746
并且可以看到这个


135
00:05:04,746 --> 00:05:05,626
模型中的细节


136
00:05:06,486 --> 00:05:08,506
你可以看到有


137
00:05:08,506 --> 00:05:10,196
动画加入进这个模型


138
00:05:10,756 --> 00:05:12,186
并且 AR Quick Look 支持


139
00:05:12,186 --> 00:05:14,036
转换动画和骨骼动画


140
00:05:14,036 --> 00:05:15,706
所以紫色土豚


141
00:05:15,706 --> 00:05:17,476
栩栩如生


142
00:05:17,476 --> 00:05:18,536
并且动画饱含个性


143
00:05:20,116 --> 00:05:21,596
就像一张照片


144
00:05:21,596 --> 00:05:22,846
你可以双击模型来


145
00:05:22,846 --> 00:05:24,576
重置位置和大小


146
00:05:25,246 --> 00:05:27,346
但真正有趣的是


147
00:05:27,346 --> 00:05:29,056
把我的紫色土豚


148
00:05:29,056 --> 00:05:30,246
嵌入现实世界


149
00:05:30,526 --> 00:05:34,656
我可以通过点击 AR 选项卡


150
00:05:34,656 --> 00:05:36,936
然后紫色的土豚就进入了现实世界


151
00:05:37,846 --> 00:05:40,366
我们能够将模型


152
00:05:40,366 --> 00:05:42,836
如此迅速地嵌入现实世界


153
00:05:43,076 --> 00:05:44,066
因为我们在 AR Quick Look


154
00:05:44,066 --> 00:05:45,966
启动的同时就开启了 AR 会话


155
00:05:46,106 --> 00:05:47,726
并且我们聚集了


156
00:05:47,726 --> 00:05:48,846
所有的环境特征点


157
00:05:48,846 --> 00:05:50,386
并将对象


158
00:05:50,386 --> 00:05:51,736
迅速嵌入现实世界


159
00:05:53,086 --> 00:05:55,116
在这里 你可以注意到


160
00:05:55,116 --> 00:05:56,676
控件是隐藏的


161
00:05:56,676 --> 00:05:58,066
以提供完全身临其境的体验


162
00:05:58,066 --> 00:05:59,376
就像状态栏


163
00:05:59,696 --> 00:06:01,226
屏幕控制和


164
00:06:01,716 --> 00:06:03,326
iPhone X 的 home 指示器


165
00:06:04,746 --> 00:06:06,526
你可以继续旋转


166
00:06:06,526 --> 00:06:08,246
对象使用标准的


167
00:06:08,246 --> 00:06:09,516
iOS 旋转手势


168
00:06:09,906 --> 00:06:11,396
你可以用你的双指捏


169
00:06:11,396 --> 00:06:13,406
来缩小对象


170
00:06:13,406 --> 00:06:14,516
或者如果你想把它变得更可爱一点的话


171
00:06:14,516 --> 00:06:15,346
你也可以把它放大一点


172
00:06:16,156 --> 00:06:17,246
你可以看到


173
00:06:17,246 --> 00:06:18,976
动画那里的紫色


174
00:06:18,976 --> 00:06:23,076
是 Aardvark 正在试图把我所有的虫子们啜起来


175
00:06:23,306 --> 00:06:24,156
我可以继续


176
00:06:24,156 --> 00:06:25,356
双击来把大小重置至


177
00:06:25,356 --> 00:06:27,776
到 100％ 你还可以


178
00:06:27,776 --> 00:06:30,256
通过点击并拖动模型来


179
00:06:30,256 --> 00:06:31,576
把它平移到


180
00:06:31,576 --> 00:06:32,636
桌子上的另一个地方


181
00:06:34,216 --> 00:06:35,786
或者你可以点击它


182
00:06:35,786 --> 00:06:37,616
并把设备四处移动


183
00:06:37,616 --> 00:06:39,966
这是真正的无缝互动


184
00:06:41,006 --> 00:06:42,446
当然 因为这是一个 AR 体验


185
00:06:42,446 --> 00:06:43,646
我们鼓励用户


186
00:06:43,646 --> 00:06:47,536
四处走动来


187
00:06:47,536 --> 00:06:49,946
参与并沉浸在动画中


188
00:06:49,946 --> 00:06:51,706
来观察模型是怎样


189
00:06:51,706 --> 00:06:52,686
被嵌入到现实世界中的


190
00:06:55,836 --> 00:06:57,476
此外 我们也提供了


191
00:06:57,476 --> 00:06:58,346
接触阴影


192
00:06:58,656 --> 00:06:59,846
你会注意到


193
00:07:00,056 --> 00:07:03,176
在边缘的部分的阴影在提示


194
00:07:03,176 --> 00:07:04,696
紫色土豚被放置在现实中


195
00:07:04,696 --> 00:07:06,096
那张桌子的表面


196
00:07:07,006 --> 00:07:08,406
此外 我们将渲染的


197
00:07:08,406 --> 00:07:10,096
光照信息与 ARKit 获取的


198
00:07:10,096 --> 00:07:12,206
环境颜色密度和色温相匹配


199
00:07:12,206 --> 00:07:15,946
以使得土豚看起来如此真实


200
00:07:17,676 --> 00:07:19,886
这是非常惊人的效果


201
00:07:19,886 --> 00:07:21,226
我想记住这一刻


202
00:07:21,476 --> 00:07:22,366
所以 我单击屏幕


203
00:07:22,366 --> 00:07:23,646
来显示控件


204
00:07:23,736 --> 00:07:25,976
我要拍一张快照来记录这一刻


205
00:07:28,206 --> 00:07:30,796
在这里 我要标记这一刻


206
00:07:35,216 --> 00:07:37,036
这真的很棒 


207
00:07:37,036 --> 00:07:38,616
我可以把这保存 以供以后浏览


208
00:07:42,796 --> 00:07:45,046
但是 在设计 AR Quick Look 时


209
00:07:45,046 --> 00:07:46,476
我们想让 AR 对


210
00:07:46,476 --> 00:07:48,506
每个人都是无障碍的


211
00:07:48,506 --> 00:07:49,596
真的是每一个人


212
00:07:50,066 --> 00:07:51,396
无障碍功能是我们的


213
00:07:51,396 --> 00:07:53,536
核心之一 所以我们把 AR Quick Look


214
00:07:53,536 --> 00:07:55,166
和旁白以及 switch control


215
00:07:55,166 --> 00:07:55,646
结合到了一起


216
00:07:56,126 --> 00:07:56,816
让我们来看看


217
00:07:56,816 --> 00:07:57,826
旁白的工作流程


218
00:07:58,606 --> 00:07:59,406
我会用三次单击 home 键


219
00:07:59,406 --> 00:08:00,676
激活旁白


220
00:08:02,256 --> 00:08:03,596
>> 旁白启动


221
00:08:03,596 --> 00:08:05,156
文件 关闭


222
00:08:05,326 --> 00:08:06,006
按钮 横向


223
00:08:06,006 --> 00:08:07,936
>> 我导航到 AR 标签页


224
00:08:08,196 --> 00:08:11,696
>> home 键向右侧 AR 按钮


225
00:08:13,076 --> 00:08:14,276
选择 AR


226
00:08:14,516 --> 00:08:17,586
土豚 Radar 现在被放置在现实世界中


227
00:08:18,626 --> 00:08:19,756
>> 现在 在我的土豚 Radar


228
00:08:19,756 --> 00:08:21,466
不在屏幕中的时候


229
00:08:21,466 --> 00:08:24,066
你能够获得声音反馈 这真的很酷


230
00:08:25,516 --> 00:08:27,406
>> 土豚 Radar 现在不在屏幕中


231
00:08:27,766 --> 00:08:29,126
>> 以及当它回到屏幕中的时候


232
00:08:29,466 --> 00:08:31,376
>> 土豚 Radar 现在在屏幕中


233
00:08:32,015 --> 00:08:33,216
>> 这真的很棒


234
00:08:33,216 --> 00:08:35,076
我们鼓励


235
00:08:35,466 --> 00:08:38,106
开发人员和用户


236
00:08:38,106 --> 00:08:40,826
在为你的 App 和网站中


237
00:08:40,826 --> 00:08:42,696
植入 AR Quick Look 时


238
00:08:42,696 --> 00:08:44,275
考虑一下其中的


239
00:08:44,376 --> 00:08:44,566
完整无障碍访问工作流


240
00:08:47,356 --> 00:08:49,356
[ 掌声 ]


241
00:08:49,696 --> 00:08:51,196
所以 我刚刚向你展示了 AR Quick Look


242
00:08:51,196 --> 00:08:53,286
集成到“文件” App 中


243
00:08:53,836 --> 00:08:55,876
但这只是 6 个嵌入并集成


244
00:08:55,946 --> 00:08:58,326
查看器的 App 集中的一个


245
00:08:59,066 --> 00:09:02,806
其他分别是 邮件 消息


246
00:09:03,576 --> 00:09:06,796
笔记 新闻和 Safari 浏览器


247
00:09:07,846 --> 00:09:09,496
有一个好消息


248
00:09:09,496 --> 00:09:11,066
既然 AR Quick Look 已经植入了


249
00:09:11,066 --> 00:09:13,056
Safari 浏览器 开发者们可以把它


250
00:09:13,406 --> 00:09:15,536
植入进自己的网站


251
00:09:15,536 --> 00:09:16,856
利用我们的 notational markuo


252
00:09:16,856 --> 00:09:18,106
稍后我们会对其进行详细讨论


253
00:09:19,076 --> 00:09:20,916
最后 你可以采用一个查看器


254
00:09:21,196 --> 00:09:22,876
进入你的 iOS App


255
00:09:22,876 --> 00:09:24,156
提供更身临其境的感受


256
00:09:24,156 --> 00:09:25,066
来享受 AR


257
00:09:27,656 --> 00:09:29,646
所在这些 App 中间


258
00:09:29,746 --> 00:09:31,436
共享同一个 3D 模型


259
00:09:31,436 --> 00:09:32,846
需要这些模型被打包进


260
00:09:32,846 --> 00:09:34,146
一个单一的可供分享的文件


261
00:09:34,696 --> 00:09:36,306
AR Quick Look 支持 usdz


262
00:09:36,306 --> 00:09:39,006
来实现这一功能 这是一个新的


263
00:09:39,006 --> 00:09:40,536
文件格式 被用于


264
00:09:40,536 --> 00:09:42,196
便利地部署 3D 模型


265
00:09:42,956 --> 00:09:45,046
usdz 把所有这些模型


266
00:09:45,446 --> 00:09:47,156
和纹理整合到一个文件中


267
00:09:47,386 --> 00:09:49,076
以有效传递 3D


268
00:09:49,076 --> 00:09:50,926
内容并规避


269
00:09:50,926 --> 00:09:52,226
参考文件的使用


270
00:09:53,076 --> 00:09:54,326
它基于 Pixar 的


271
00:09:54,766 --> 00:09:56,856
开源的通用场景


272
00:09:56,856 --> 00:09:59,666
描述格式 或简称 USD


273
00:10:00,956 --> 00:10:03,576
usdz 被 iOS macOS


274
00:10:03,576 --> 00:10:06,206
SceneKit 和 Model I/O 所支持


275
00:10:06,206 --> 00:10:10,316
稍后 我们将向你展示如何


276
00:10:10,316 --> 00:10:12,726
使用新的 usdz 转换器


277
00:10:12,926 --> 00:10:15,016
将 3D 模型转换为 usdz 格式


278
00:10:15,016 --> 00:10:16,916
这个工具会作为 Xcode 10


279
00:10:16,916 --> 00:10:17,006
的一部分发布


280
00:10:19,186 --> 00:10:20,616
现在你对 AR Quick Look


281
00:10:20,616 --> 00:10:22,056
有了更多的了解 让我们来谈谈如何


282
00:10:22,056 --> 00:10:23,506
整合查看器本身


283
00:10:25,006 --> 00:10:26,206
你可以将 AR Quick Look


284
00:10:26,496 --> 00:10:27,786
整合在两种不同的媒介中


285
00:10:28,086 --> 00:10:29,776
第一种 是在 App 中


286
00:10:30,506 --> 00:10:31,716
包含很多图片和文字的 App


287
00:10:31,716 --> 00:10:33,726
可以利用集成的


288
00:10:33,726 --> 00:10:35,476
AR Quick Look


289
00:10:35,476 --> 00:10:36,926
提供更好的显示效果


290
00:10:36,926 --> 00:10:37,756
和身临其境的体验


291
00:10:38,316 --> 00:10:39,896
在这里 我们正在使用 Quick Look 的


292
00:10:39,896 --> 00:10:41,516
API 协助这一整合


293
00:10:41,516 --> 00:10:43,416
预览 usdz 文件


294
00:10:43,466 --> 00:10:45,366
并将其加载到查看器中


295
00:10:46,346 --> 00:10:48,546
其次 是在 Safari 浏览器的网站中


296
00:10:49,376 --> 00:10:51,106
集成 AR Quick Look


297
00:10:51,106 --> 00:10:52,946
在新闻文章和在线商店的


298
00:10:52,946 --> 00:10:54,506
产品页面能够显著


299
00:10:54,506 --> 00:10:55,626
协助信息表达


300
00:10:55,626 --> 00:10:57,496
和购物体验


301
00:10:57,496 --> 00:10:58,836
这种新方法


302
00:10:58,836 --> 00:11:00,576
能够更好地进行内容可视化


303
00:11:00,576 --> 00:11:01,876
并帮助你更好的理解


304
00:11:01,876 --> 00:11:03,366
你实际看到的内容


305
00:11:03,366 --> 00:11:06,046
我们将会编写一个 HTML 例子 来展示


306
00:11:06,476 --> 00:11:07,986
在网页上预览 AR 内容


307
00:11:09,526 --> 00:11:11,856
让我们先从 App 开始


308
00:11:11,856 --> 00:11:14,036
并了解 Quick Look API 是怎样被用来


309
00:11:14,036 --> 00:11:14,906
提供 AR 体验的


310
00:11:16,416 --> 00:11:17,126
所以 如果你还没有


311
00:11:17,126 --> 00:11:19,456
熟悉起来 让我快速解释一下 Quick Look


312
00:11:20,216 --> 00:11:21,266
Quick Look 提供了


313
00:11:21,266 --> 00:11:22,836
文件预览的功能


314
00:11:22,936 --> 00:11:26,206
例如 Keynote 讲演文档 PDF 图像和


315
00:11:26,206 --> 00:11:27,706
现在的 3D 模型文件 如 usdz


316
00:11:28,896 --> 00:11:30,376
Quick Look 本身就是一个 iOS


317
00:11:30,376 --> 00:11:31,786
框架 不仅提供


318
00:11:31,786 --> 00:11:33,756
预览文件的支持


319
00:11:33,956 --> 00:11:35,126
也提供了


320
00:11:35,176 --> 00:11:37,066
为自定义文件类型


321
00:11:37,066 --> 00:11:38,846
创建和提供自定义预览的能力


322
00:11:39,826 --> 00:11:40,906
它配备了一切预览文档


323
00:11:40,906 --> 00:11:42,206
所需的东西


324
00:11:42,886 --> 00:11:44,456
你可以控制 Quick Look 转换


325
00:11:44,916 --> 00:11:46,376
和不同的放映模式


326
00:11:46,376 --> 00:11:50,026
例如嵌入式内联 或引入


327
00:11:50,026 --> 00:11:51,786
一个 push navigation flow 和


328
00:11:51,786 --> 00:11:53,016
标准模型展示


329
00:11:54,286 --> 00:11:55,226
真正令人惊奇的是


330
00:11:55,226 --> 00:11:56,856
安全方面的问题已经被妥善处理


331
00:11:57,276 --> 00:11:58,606
usdz 文件的内容


332
00:11:58,706 --> 00:12:01,156
被安全地读取


333
00:12:01,156 --> 00:12:02,746
来提供预览


334
00:12:02,956 --> 00:12:04,566
现在 有一个专门的收尾介绍


335
00:12:04,566 --> 00:12:06,696
是关于 Quick Look 和


336
00:12:06,696 --> 00:12:08,006
预览所有文件类型的


337
00:12:08,006 --> 00:12:10,056
包括新的 usdz 文件类型


338
00:12:10,056 --> 00:12:10,983
我鼓励你去参与了解


339
00:12:13,346 --> 00:12:15,426
所以 让我们快速看一下


340
00:12:15,426 --> 00:12:16,716
预览的工作流程


341
00:12:16,956 --> 00:12:18,596
左边是 App 的 ViewController


342
00:12:19,136 --> 00:12:20,816
它有一个各种 3D 模型


343
00:12:20,816 --> 00:12:22,076
形成的缩略图网格


344
00:12:22,486 --> 00:12:23,376
当有人点击其中一个缩略图时


345
00:12:23,376 --> 00:12:25,726
我想展示该缩略图对应的模型展示


346
00:12:25,726 --> 00:12:26,886
一个 Quick Look 的预览


347
00:12:27,596 --> 00:12:29,246
我想要做的第一件事是


348
00:12:29,246 --> 00:12:31,126
创建一个 QLPreviewController


349
00:12:31,596 --> 00:12:32,826
我有实例


350
00:12:32,826 --> 00:12:34,096
我有 ViewController 来允许你


351
00:12:34,096 --> 00:12:35,046
预览文档


352
00:12:35,806 --> 00:12:37,876
我将 dataSource 和 delegate


353
00:12:38,126 --> 00:12:38,706
设置为自己 (self)


354
00:12:38,916 --> 00:12:40,586
所以它可以问我关于的


355
00:12:40,586 --> 00:12:41,476
什么应该被预览的问题


356
00:12:42,496 --> 00:12:43,876
有了这个配置 我提出了


357
00:12:43,876 --> 00:12:45,256
QLPreviewController


358
00:12:46,086 --> 00:12:47,836
现在 它不会立即出现


359
00:12:47,836 --> 00:12:50,636
然而 它首先问我一些问题


360
00:12:51,336 --> 00:12:53,186
它首先询问多少个


361
00:12:53,186 --> 00:12:55,826
物体需要被预览


362
00:12:55,826 --> 00:12:58,096
对于 usdz 文件 答案是一个


363
00:12:59,386 --> 00:13:01,746
现在 它要求我为第一个要预览的项目


364
00:13:01,746 --> 00:13:03,376
提供一个 URL


365
00:13:04,066 --> 00:13:05,846
我用我的模型 App 包中


366
00:13:06,316 --> 00:13:08,316
对应那个被点击模型的


367
00:13:08,316 --> 00:13:10,046
文件 URL 回应


368
00:13:10,106 --> 00:13:12,056
最后 它询问我


369
00:13:12,056 --> 00:13:13,856
在展示预览时的


370
00:13:13,856 --> 00:13:15,356
过渡动画时


371
00:13:15,356 --> 00:13:16,296
选择什么样的视图作为源视图


372
00:13:16,856 --> 00:13:18,666
在这里 我想要一个


373
00:13:18,666 --> 00:13:20,276
从点击时视图到


374
00:13:20,356 --> 00:13:21,576
最后展示视图


375
00:13:21,576 --> 00:13:22,376
的无缝衔接的动画


376
00:13:22,776 --> 00:13:24,306
所以 我返回 View＃3


377
00:13:25,536 --> 00:13:27,366
有了所有的配置


378
00:13:27,366 --> 00:13:28,606
我们准备展示我们的预览控制器 


379
00:13:28,606 --> 00:13:30,496
所以它会


380
00:13:30,496 --> 00:13:31,776
在被点击时


381
00:13:31,816 --> 00:13:32,486
相应的动画被放大


382
00:13:32,486 --> 00:13:35,856
这就是它在代码中的样子


383
00:13:36,626 --> 00:13:38,026
为了预览和呈现文档


384
00:13:38,166 --> 00:13:39,466
我们需要


385
00:13:39,466 --> 00:13:40,506
实例化一个


386
00:13:40,506 --> 00:13:41,466
QLPreviewController


387
00:13:42,016 --> 00:13:43,216
它是 Quick Look 框架的一部分


388
00:13:43,506 --> 00:13:45,756
它有一个 dataSource 和一个


389
00:13:45,756 --> 00:13:47,686
delegate 我将对他们进行深入讲解


390
00:13:48,366 --> 00:13:50,016
然后我们再从形态上呈现


391
00:13:50,046 --> 00:13:51,276
previewController


392
00:13:52,326 --> 00:13:53,086
很简单 对吗


393
00:13:53,826 --> 00:13:54,976
让我们来看看


394
00:13:54,976 --> 00:13:56,476
dataSource 的协议


395
00:13:58,336 --> 00:14:00,026
正如我刚才提到的 我们需要


396
00:14:00,026 --> 00:14:03,606
遵守 QLPreviewControllerDataSource 协议


397
00:14:04,076 --> 00:14:06,136
这个协议有两个必需的函数


398
00:14:06,136 --> 00:14:07,976
一个提供数据


399
00:14:08,126 --> 00:14:09,406
到 Quick Look 预览控制器


400
00:14:10,206 --> 00:14:11,896
第一个是


401
00:14:11,896 --> 00:14:13,296
控制器中的被预览的项目数量


402
00:14:13,936 --> 00:14:16,116
在这里 预览控制器中


403
00:14:16,116 --> 00:14:18,046
被预览的项目数量被返回


404
00:14:18,876 --> 00:14:20,406
对于 AR Quick Look


405
00:14:20,406 --> 00:14:21,966
在一个专门的会话中


406
00:14:21,966 --> 00:14:23,706
只允许允许预览单个项目


407
00:14:24,006 --> 00:14:25,446
所以我们返回了一个项目


408
00:14:26,526 --> 00:14:27,696
我们的第二个函数


409
00:14:27,696 --> 00:14:28,906
要实现的是


410
00:14:29,186 --> 00:14:30,196
PreviewController


411
00:14:30,596 --> 00:14:32,306
previewItemAtindex


412
00:14:32,886 --> 00:14:34,396
在这里 那一个


413
00:14:34,436 --> 00:14:36,376
被要求预览的对象被返回了


414
00:14:37,136 --> 00:14:38,486
这是一个 3D 对象所对应的


415
00:14:38,486 --> 00:14:40,176
磁盘的位置的 URL


416
00:14:41,576 --> 00:14:43,686
这应该看起来对


417
00:14:43,686 --> 00:14:45,646
你们中的很多人很熟悉


418
00:14:45,646 --> 00:14:46,716
这是因为我们正在使用一个


419
00:14:46,716 --> 00:14:48,276
和 UIKit 中非常相似的 datasouce


420
00:14:48,276 --> 00:14:52,766
和 delicate pattern 例如表视图


421
00:14:52,946 --> 00:14:54,166
现在让我们来谈谈


422
00:14:54,166 --> 00:14:55,506
delegate 的协议


423
00:14:55,506 --> 00:14:57,486
呈现预览有好几种不同的方式


424
00:14:57,486 --> 00:15:00,356
和 delicate pattern 全屏呈现


425
00:15:01,306 --> 00:15:02,506
为了有一个一致的


426
00:15:02,506 --> 00:15:04,166
AR Quick Look 体验


427
00:15:04,166 --> 00:15:05,316
我建议你配置你的


428
00:15:05,316 --> 00:15:06,336
Quick Look PreviewController 的外观


429
00:15:06,336 --> 00:15:08,426
来具有相同的变焦


430
00:15:08,426 --> 00:15:09,346
过渡动画


431
00:15:09,846 --> 00:15:11,576
当文件准备好时


432
00:15:11,576 --> 00:15:12,646
你可以看到这个漂亮的过渡动画


433
00:15:12,646 --> 00:15:16,096
从缩略图视图开始


434
00:15:16,206 --> 00:15:17,986
又因为结束而退回到原视图


435
00:15:19,806 --> 00:15:21,616
在代码中 最简单和


436
00:15:21,616 --> 00:15:22,796
最受推荐的方式来


437
00:15:22,796 --> 00:15:24,196
实现这一效果是使用


438
00:15:24,636 --> 00:15:26,276
PreviewController controller


439
00:15:26,506 --> 00:15:28,546
transitionViewfor item


440
00:15:28,546 --> 00:15:29,476
返回一个 UIView


441
00:15:30,376 --> 00:15:31,986
Quick Look 可以完成所有


442
00:15:31,986 --> 00:15:33,926
繁琐的工作并且利用


443
00:15:33,926 --> 00:15:35,466
UIView 来推断


444
00:15:35,466 --> 00:15:38,276
动画起始和退出时结束的


445
00:15:38,276 --> 00:15:41,276
矩形框架


446
00:15:42,216 --> 00:15:44,206
如果可能的话 我建议给


447
00:15:44,436 --> 00:15:46,126
UIView 一个正方形框架


448
00:15:46,126 --> 00:15:48,926
以拥有最佳的无缝过渡


449
00:15:49,866 --> 00:15:51,746
AR Quick Look 很好地处理了


450
00:15:51,746 --> 00:15:53,506
从预览到退出


451
00:15:53,506 --> 00:15:54,606
从当前视图


452
00:15:54,606 --> 00:15:56,696
到全屏视图的切换


453
00:15:57,086 --> 00:15:58,356
创造出一种


454
00:15:58,356 --> 00:16:00,166
模型神奇地出现的效果


455
00:16:01,186 --> 00:16:02,486
为了实现更好的总体效果


456
00:16:02,486 --> 00:16:05,086
我推荐使用一个


457
00:16:05,086 --> 00:16:07,726
用户界面按钮作为视图和


458
00:16:07,726 --> 00:16:09,206
将缩略图设置为


459
00:16:09,256 --> 00:16:10,086
按钮的图像


460
00:16:10,856 --> 00:16:12,176
这样每当视图被点击


461
00:16:12,176 --> 00:16:13,926
并且按钮被高亮时


462
00:16:14,006 --> 00:16:14,966
你可以获得视觉反馈


463
00:16:15,026 --> 00:16:16,806
这是非常重要的


464
00:16:16,806 --> 00:16:18,516
这样用户就会知道


465
00:16:18,516 --> 00:16:20,326
有些活动将会发生


466
00:16:23,126 --> 00:16:24,376
这就是如何整合 AR


467
00:16:24,376 --> 00:16:26,426
Quick Look 进你的 iOS App


468
00:16:27,086 --> 00:16:28,296
过去从未有像现在这样


469
00:16:28,296 --> 00:16:29,386
简单的方式来将


470
00:16:29,386 --> 00:16:34,086
AR 预览带入你的 App


471
00:16:34,606 --> 00:16:35,506
现在 让我们来谈谈


472
00:16:35,500 --> 00:16:37,296
将 AR 内容整合进网页


473
00:16:38,076 --> 00:16:40,016
我们真的想要让 AR 内容


474
00:16:40,016 --> 00:16:41,356
能够被在线访问


475
00:16:42,556 --> 00:16:45,056
所以 从 iOS 12 开始 Safari 浏览器


476
00:16:45,056 --> 00:16:46,246
内置了对


477
00:16:46,346 --> 00:16:48,976
在 AR 中预览 usdz 文件的支持


478
00:16:49,886 --> 00:16:51,586
通过在网站上托管你的


479
00:16:51,586 --> 00:16:52,726
usdz 文件 你可以


480
00:16:52,726 --> 00:16:55,056
提供 3D 对象的预览


481
00:16:55,636 --> 00:16:56,936
所以 你不仅可以阅读该对象


482
00:16:56,936 --> 00:16:58,366
通过图片看


483
00:16:58,366 --> 00:16:59,556
你现在还可以


484
00:16:59,556 --> 00:17:01,936
体验模型在真实世界中的样子


485
00:17:02,936 --> 00:17:04,896
在这里 我有一个


486
00:17:04,896 --> 00:17:06,056
我的网上花园商店的现代版本


487
00:17:06,056 --> 00:17:08,006
包含各种待出售的


488
00:17:08,006 --> 00:17:09,296
园艺工具的缩略图


489
00:17:10,626 --> 00:17:11,965
为了更好地将 AR 整合


490
00:17:11,965 --> 00:17:13,836
进我的网页内容 我会用新的


491
00:17:13,836 --> 00:17:15,146
HTML markup


492
00:17:15,146 --> 00:17:15,826
我将很快展示给你们看


493
00:17:16,576 --> 00:17:17,756
这会启发并允许


494
00:17:17,756 --> 00:17:19,036
客户在购买之前


495
00:17:19,086 --> 00:17:20,715
浏览我的


496
00:17:20,715 --> 00:17:21,616
园艺商品


497
00:17:23,165 --> 00:17:24,576
所以 遵循这个标记


498
00:17:24,576 --> 00:17:26,046
你会拿到我之前提到的徽章


499
00:17:26,046 --> 00:17:27,646
就像在图像右上角


500
00:17:27,646 --> 00:17:28,606
渲染的那样


501
00:17:28,946 --> 00:17:30,706
它会起到提示作用


502
00:17:30,786 --> 00:17:32,076
表示系统查看器可用


503
00:17:32,076 --> 00:17:33,506
这样你就可以在 AR 中


504
00:17:33,506 --> 00:17:35,246
预览我的喷壶


505
00:17:35,996 --> 00:17:39,036
所以 你可以提供你自己的


506
00:17:39,076 --> 00:17:40,636
与该 3D 物体相关的


507
00:17:40,636 --> 00:17:41,996
封面艺术图 这可以是


508
00:17:42,086 --> 00:17:43,996
肖像摄影 或者一个好看的英雄人物形象


509
00:17:43,996 --> 00:17:45,176
就像我为我的可爱的喷壶


510
00:17:45,176 --> 00:17:45,926
所选择的一样


511
00:17:46,956 --> 00:17:48,626
有了这个工作流程 我们支持


512
00:17:48,626 --> 00:17:53,066
拖放操作 当然 也少不了


513
00:17:53,556 --> 00:17:55,446
长按类型的 Safari 浏览器操作


514
00:17:55,446 --> 00:17:57,356
例如添加到阅读列表


515
00:17:57,896 --> 00:17:58,886
或复制和共享


516
00:18:02,196 --> 00:18:03,946
最重要的是你得到了一个


517
00:18:03,946 --> 00:18:05,766
更直接的和优化过的


518
00:18:05,766 --> 00:18:07,626
工作流程来使用 AR Quick Look


519
00:18:08,226 --> 00:18:09,276
所以 你并没有进入任何链接


520
00:18:09,276 --> 00:18:11,246
而且你没有更新你的网络 URL


521
00:18:11,246 --> 00:18:13,286
就获得了响应


522
00:18:16,556 --> 00:18:19,256
HTML 标记非常简单明了


523
00:18:19,256 --> 00:18:19,736
以上就是它的全部内容


524
00:18:20,766 --> 00:18:22,076
所以 通过添加这个属性


525
00:18:22,076 --> 00:18:23,956
这会把你的网页变成


526
00:18:24,126 --> 00:18:25,266
一个 AR 体验


527
00:18:25,856 --> 00:18:27,406
这个要求是一个


528
00:18:27,526 --> 00:18:29,756
包含 rel = ar 的元素 这告诉


529
00:18:29,756 --> 00:18:31,706
WebKit 这是 AR 内容


530
00:18:32,796 --> 00:18:34,646
然后你提供链接指向


531
00:18:34,646 --> 00:18:36,496
usdz 文件的位置


532
00:18:38,296 --> 00:18:40,376
最后 我们有一个


533
00:18:40,666 --> 00:18:42,636
图像元素


534
00:18:42,636 --> 00:18:43,936
这是我之前提到的


535
00:18:43,936 --> 00:18:45,576
封面创作品


536
00:18:45,576 --> 00:18:48,206
作为你的 3D 对象提供缩略图


537
00:18:49,676 --> 00:18:50,766
徽章将出现在你的


538
00:18:50,766 --> 00:18:52,606
缩略图图像上


539
00:18:52,826 --> 00:18:54,046
使你能够预览并


540
00:18:54,046 --> 00:18:55,496
将对象显示在 AR 中


541
00:18:56,146 --> 00:18:59,026
这也可以用


542
00:18:59,026 --> 00:18:59,696
图片元素来完成


543
00:19:00,566 --> 00:19:01,886
类似于图像元素


544
00:19:02,036 --> 00:19:03,446
这里的规则是单一的


545
00:19:03,446 --> 00:19:06,386
图片子对象具备一个 rel = ar 的标签


546
00:19:07,216 --> 00:19:09,476
图片可以拥有一切


547
00:19:09,476 --> 00:19:10,676
它需要的子对象 


548
00:19:10,676 --> 00:19:12,916
从非常简单


549
00:19:12,916 --> 00:19:14,326
到复杂的方法


550
00:19:14,326 --> 00:19:15,626
来选择子对象源图像


551
00:19:15,626 --> 00:19:17,496
以用于渲染


552
00:19:18,516 --> 00:19:20,756
根据设备大小和其他平台逻辑


553
00:19:23,246 --> 00:19:25,516
usdz 内容必须提供


554
00:19:25,516 --> 00:19:27,386
正确的媒体类型


555
00:19:27,386 --> 00:19:28,896
以确保 MIME 类型是


556
00:19:28,896 --> 00:19:30,136
已经为这些文件设置好了


557
00:19:30,856 --> 00:19:32,366
正式的类型注册


558
00:19:32,366 --> 00:19:33,536
正在进行中


559
00:19:33,796 --> 00:19:35,376
在此期间


560
00:19:35,416 --> 00:19:36,986
如果你使用的是 Apache


561
00:19:37,066 --> 00:19:40,096
WebKit 会影响这两种媒体类型


562
00:19:42,736 --> 00:19:44,386
这就是如何整合 AR Quick Look


563
00:19:44,876 --> 00:19:46,276
目标是真正容易地做到


564
00:19:46,276 --> 00:19:48,356
把 AR 放在任何地方


565
00:19:48,356 --> 00:19:50,546
不仅仅是 Safari 浏览器中的网站


566
00:19:50,546 --> 00:19:52,026
也在 iOS 的 App 中


567
00:19:52,796 --> 00:19:54,006
现在 你可能会想知道


568
00:19:54,496 --> 00:19:56,676
我在哪里可以获得 usdz 内容


569
00:19:57,406 --> 00:19:58,606
我会邀请我的同事 Dave


570
00:19:58,606 --> 00:19:59,576
来谈论更多关于如何


571
00:19:59,576 --> 00:20:01,336
为 AR Quick Look 创建内容


572
00:20:02,516 --> 00:20:07,066
[ 掌声 ]


573
00:20:07,566 --> 00:20:08,106
>> 谢谢 David


574
00:20:08,646 --> 00:20:10,356
那么 让我们


575
00:20:10,356 --> 00:20:11,726
看看我们想用


576
00:20:11,726 --> 00:20:13,246
我们的 3D 模型来实现什么


577
00:20:14,066 --> 00:20:15,866
在这里 我已经加载了一个茶壶模型进


578
00:20:15,976 --> 00:20:17,506
AR Quick Look


579
00:20:17,506 --> 00:20:19,256
看 我们可以看到它


580
00:20:19,256 --> 00:20:20,976
完美地被放置在在地上 就像


581
00:20:20,976 --> 00:20:21,966
它的影子所展示的那样


582
00:20:22,736 --> 00:20:24,166
它绕着它的自然中枢点


583
00:20:24,166 --> 00:20:25,356
也就是壶底的中点 旋转


584
00:20:25,356 --> 00:20:27,536
如果我把它放入


585
00:20:27,536 --> 00:20:29,466
现实世界


586
00:20:29,566 --> 00:20:30,786
它就像真的一样


587
00:20:30,786 --> 00:20:31,416
被放置在我面前


588
00:20:31,756 --> 00:20:33,456
我们甚至看到了环境


589
00:20:33,456 --> 00:20:35,076
被反射在了光滑金属把手上


590
00:20:35,666 --> 00:20:37,786
那么 我们如何在我们的


591
00:20:37,786 --> 00:20:39,166
3D 模型上 实现这一效果


592
00:20:40,426 --> 00:20:41,606
当我们在创建我们的模型时


593
00:20:41,606 --> 00:20:43,326
有六个方面需要注意


594
00:20:43,326 --> 00:20:44,576
稍后的会议中


595
00:20:44,576 --> 00:20:45,826
我们会看到


596
00:20:45,826 --> 00:20:46,616
每一个方面的细节部分


597
00:20:47,726 --> 00:20:48,566
我们需要设置模型的位姿


598
00:20:48,646 --> 00:20:51,766
我们需要设置它的实际物理大小


599
00:20:51,766 --> 00:20:53,196
来与 AR 环境相符


600
00:20:53,196 --> 00:20:55,316
我们需要创建


601
00:20:55,316 --> 00:20:56,806
模型所需的动画


602
00:20:57,646 --> 00:21:00,126
添加它的接触阴影


603
00:21:00,126 --> 00:21:02,096
修改它的外观


604
00:21:02,096 --> 00:21:03,256
然后添加任何


605
00:21:03,256 --> 00:21:03,706
所需的透明度


606
00:21:04,226 --> 00:21:05,676
一旦这六个方面完成了


607
00:21:06,226 --> 00:21:07,666
我们可以优化并导出我们的


608
00:21:07,666 --> 00:21:10,126
模型以供 AR Quick Look 使用


609
00:21:11,036 --> 00:21:12,836
我们将从位姿开始


610
00:21:12,956 --> 00:21:14,236
在 3D 软件中


611
00:21:14,236 --> 00:21:15,936
有三个方面需要注意


612
00:21:16,176 --> 00:21:17,076
来使得我们的模型


613
00:21:17,076 --> 00:21:17,846
正确地出现在现实世界中


614
00:21:19,226 --> 00:21:20,536
首先 对象应该


615
00:21:20,536 --> 00:21:21,916
面向相机


616
00:21:22,146 --> 00:21:23,046
朝向 z 轴的正方向


617
00:21:24,276 --> 00:21:25,986
其次 对象的底部


618
00:21:25,986 --> 00:21:27,406
应该被放置在底平面上


619
00:21:27,666 --> 00:21:29,096
也就是 y = 0 的平面


620
00:21:30,356 --> 00:21:31,566
最后 我们应该把它的


621
00:21:31,566 --> 00:21:33,576
自然枢轴点放置在原点


622
00:21:34,746 --> 00:21:36,216
接下来 让我们以一个模型为例


623
00:21:36,216 --> 00:21:36,896
看看这三条的实际效果


624
00:21:37,436 --> 00:21:39,326
在这里 我在我的 3D 建模软件中


625
00:21:39,936 --> 00:21:41,426
我的原点在中心


626
00:21:42,266 --> 00:21:43,876
我有 x 轴的正方向指向一边


627
00:21:43,876 --> 00:21:46,186
y 轴正方向指向上方


628
00:21:46,186 --> 00:21:48,216
z 轴正方向


629
00:21:48,296 --> 00:21:51,166
朝向相机


630
00:21:51,166 --> 00:21:52,706
现在 如果我导入一个模型


631
00:21:52,706 --> 00:21:54,186
如果我导入我的茶壶时


632
00:21:54,186 --> 00:21:55,936
没有进行设置 我们可以立即


633
00:21:55,936 --> 00:21:56,936
看到这里有一个问题


634
00:21:57,276 --> 00:21:59,326
模型在底平面以下


635
00:22:00,496 --> 00:22:01,676
如果我们从侧面看它


636
00:22:01,816 --> 00:22:02,936
我们可以看到这个模型已经


637
00:22:02,936 --> 00:22:04,236
被围绕原点创建


638
00:22:05,156 --> 00:22:06,746
所以 让我们把它向上平移


639
00:22:06,746 --> 00:22:08,346
把他的底面放置在底平面


640
00:22:08,346 --> 00:22:09,366
也就是 y = 0 的平面


641
00:22:09,666 --> 00:22:10,906
现在 它已准备好被


642
00:22:10,906 --> 00:22:11,956
放置在真实世界的底平面了


643
00:22:13,956 --> 00:22:15,046
然而 如果我们从前面看它


644
00:22:15,046 --> 00:22:16,686
还是可以有一些


645
00:22:16,686 --> 00:22:18,426
美学上的改进


646
00:22:18,696 --> 00:22:20,056
这种看起来挺像一个


647
00:22:20,056 --> 00:22:21,866
茶壶的 但是我们可以改进使它


648
00:22:21,866 --> 00:22:22,376
更像一个茶壶


649
00:22:23,576 --> 00:22:24,766
当我们想到一个茶壶时


650
00:22:24,766 --> 00:22:26,586
壶嘴应该在茶壶的侧面


651
00:22:28,086 --> 00:22:28,886
所以巧妙地放置你的对象


652
00:22:28,886 --> 00:22:30,126
来使得它更容易被辨认


653
00:22:30,156 --> 00:22:32,026
类似于你要把


654
00:22:32,026 --> 00:22:33,366
它放在架子上


655
00:22:33,366 --> 00:22:34,786
或放在一个展示柜上时


656
00:22:34,786 --> 00:22:35,556
该如何放置


657
00:22:36,786 --> 00:22:39,196
如果还不是很确定


658
00:22:39,356 --> 00:22:40,606
请找一位小朋友帮你画出来


659
00:22:41,286 --> 00:22:42,416
很大概率上


660
00:22:42,416 --> 00:22:43,496
他们选择的样子


661
00:22:43,496 --> 00:22:43,766
就是你应该使用的


662
00:22:44,326 --> 00:22:47,106
现在 这个位姿选择真的很重要


663
00:22:47,616 --> 00:22:49,156
它不仅仅是会被人们


664
00:22:49,156 --> 00:22:50,836
在 Quick Look 中


665
00:22:50,836 --> 00:22:52,756
加载后最先看到的


666
00:22:52,756 --> 00:22:53,876
也会被用来


667
00:22:53,876 --> 00:22:55,506
创建缩略图


668
00:22:55,506 --> 00:22:57,056
并且当缩略图被用在


669
00:22:57,056 --> 00:22:58,266
文件或消息 App 中时


670
00:22:58,266 --> 00:22:58,816
这二者会完全一致


671
00:22:59,056 --> 00:22:59,976
所以 我们可以无缝实现


672
00:22:59,976 --> 00:23:01,206
两者之间的过渡


673
00:23:01,886 --> 00:23:03,786
所以 选择一个好的位姿配置是非常重要


674
00:23:04,196 --> 00:23:07,076
我们将回到我们的 3D


675
00:23:07,076 --> 00:23:09,316
软件并旋转我们的模型


676
00:23:09,316 --> 00:23:10,346
来使得壶嘴在侧面


677
00:23:11,596 --> 00:23:13,386
作为最后的检查


678
00:23:13,386 --> 00:23:15,446
让我们自上而下


679
00:23:15,446 --> 00:23:16,826
查看并确保茶壶


680
00:23:16,826 --> 00:23:18,496
以原点为中心


681
00:23:18,676 --> 00:23:19,796
它会按照设想


682
00:23:19,796 --> 00:23:22,636
绕着这个点旋转


683
00:23:22,866 --> 00:23:24,276
我们想要设置模型的


684
00:23:24,276 --> 00:23:25,996
第二个方面


685
00:23:25,996 --> 00:23:26,456
是它的物理尺寸


686
00:23:27,306 --> 00:23:28,916
在这里 我有一个留声机


687
00:23:28,916 --> 00:23:30,706
大小在这里很重要


688
00:23:31,256 --> 00:23:32,406
这台唱机是专门设计用来


689
00:23:32,406 --> 00:23:34,086
播放 12 英寸的唱片


690
00:23:34,086 --> 00:23:35,106
我们要确认它


691
00:23:35,106 --> 00:23:35,786
在现实世界中的大小是正确的


692
00:23:36,236 --> 00:23:38,976
如果我输出这个模型


693
00:23:38,976 --> 00:23:40,766
在 AR Quick Look 的 object mode 中载入


694
00:23:40,766 --> 00:23:42,496
看 这看起来很棒 因为我们


695
00:23:42,496 --> 00:23:43,756
始终把模型缩放到


696
00:23:43,756 --> 00:23:44,146
合适的比例


697
00:23:44,906 --> 00:23:46,126
但如果我把它放入真实世界中


698
00:23:46,606 --> 00:23:47,576
我们可以看到有一个问题


699
00:23:47,706 --> 00:23:49,496
当我把它放在一个 12 英寸的唱片旁边时


700
00:23:50,006 --> 00:23:50,806
它太小了


701
00:23:51,486 --> 00:23:52,786
现在 它只能用来播放


702
00:23:52,786 --> 00:23:54,836
6 英寸的唱片 然而并没有这种唱片


703
00:23:56,446 --> 00:23:58,226
所以 让我们回到我的 3D 软件


704
00:23:58,226 --> 00:24:00,306
并创建一个基准


705
00:24:00,406 --> 00:24:01,566
一个 12 英寸的圆柱体


706
00:24:02,326 --> 00:24:04,016
现在 我知道这是准确的


707
00:24:04,016 --> 00:24:05,636
12 英寸直径


708
00:24:05,636 --> 00:24:07,506
因为我知道这个项目的单位设置


709
00:24:08,866 --> 00:24:09,896
我可以使用这个基准


710
00:24:09,896 --> 00:24:11,916
圆柱体来调整我的转盘


711
00:24:12,386 --> 00:24:13,676
并确保该转盘


712
00:24:13,676 --> 00:24:15,196
是正确的大小


713
00:24:15,196 --> 00:24:16,806
来播放 12 英寸的唱片


714
00:24:17,376 --> 00:24:19,316
完成后 如果我再次导出


715
00:24:19,316 --> 00:24:21,156
我的模型 它看起来完全和


716
00:24:21,156 --> 00:24:22,646
object mode 中的相同


717
00:24:22,646 --> 00:24:23,646
因为它仍然被缩放到合适的比例


718
00:24:23,736 --> 00:24:25,236
但是当我把它放如现实世界中


719
00:24:25,236 --> 00:24:27,136
我们可以看到


720
00:24:27,136 --> 00:24:29,146
相比于 12 英寸的唱片 它的大小是正确的


721
00:24:29,596 --> 00:24:30,776
我们可以想象真的


722
00:24:30,776 --> 00:24:31,976
把唱片放进去播放


723
00:24:34,346 --> 00:24:37,206
现在 并不是所有的对象都有


724
00:24:37,206 --> 00:24:38,206
现实大小


725
00:24:39,026 --> 00:24:40,506
这个小家伙是 Chatterbox


726
00:24:40,666 --> 00:24:42,026
而它并不存在于


727
00:24:42,026 --> 00:24:42,296
真实世界


728
00:24:42,746 --> 00:24:44,196
它只存在于我们的想象中


729
00:24:45,066 --> 00:24:46,306
它很可爱 而且它有


730
00:24:46,306 --> 00:24:47,866
一个有趣的动画


731
00:24:47,866 --> 00:24:48,836
它很适合用来合影


732
00:24:49,756 --> 00:24:51,456
所以 我们把它创建为


733
00:24:51,456 --> 00:24:53,196
适合桌面的大小


734
00:24:53,196 --> 00:24:54,396
这样就能把他合适地放置在


735
00:24:54,396 --> 00:24:56,756
常见环境中 并且还可对其


736
00:24:56,756 --> 00:24:58,586
大小进行调整 缩小它


737
00:24:58,906 --> 00:24:59,956
四处移动 或放大


738
00:24:59,956 --> 00:25:01,296
并把它调整为


739
00:25:01,296 --> 00:25:02,916
适合拍照的大小


740
00:25:03,866 --> 00:25:05,216
通过默认让它设置为


741
00:25:05,216 --> 00:25:07,406
适合桌面的大小 它很容易被放置


742
00:25:09,916 --> 00:25:13,986
我们在这里看到 Chatterbox 有动画


743
00:25:13,986 --> 00:25:15,236
我们推荐你使用动画


744
00:25:15,236 --> 00:25:16,536
这有助于把这个对象


745
00:25:16,536 --> 00:25:18,386
变得生动


746
00:25:18,386 --> 00:25:19,906
让它感觉更像真实地存在于现实世界中


747
00:25:20,426 --> 00:25:23,266
请注意 动画总是会循环


748
00:25:23,266 --> 00:25:25,556
你可以使用骨架


749
00:25:25,556 --> 00:25:26,936
或变形动画


750
00:25:27,106 --> 00:25:28,876
来创建动画


751
00:25:28,876 --> 00:25:30,906
并使对象栩栩如生


752
00:25:31,046 --> 00:25:32,136
再举一个例子


753
00:25:32,586 --> 00:25:34,166
这是一个不含动画的


754
00:25:34,166 --> 00:25:36,406
卡通风格的鸡


755
00:25:36,506 --> 00:25:38,276
如果我把它放入现实世界中


756
00:25:38,276 --> 00:25:40,756
看起来很酷 但它也看起来有点呆板


757
00:25:40,756 --> 00:25:42,146
它真的看起来不觉得


758
00:25:42,146 --> 00:25:43,446
像活在房间里


759
00:25:44,216 --> 00:25:45,926
所以 我们可以在这里做一些额外的工作


760
00:25:46,676 --> 00:25:48,426
如果我们添加一点点


761
00:25:48,426 --> 00:25:49,686
骨骼动画给我们


762
00:25:49,686 --> 00:25:50,956
的对象让它啄动它的头


763
00:25:51,026 --> 00:25:53,376
现在当我们把他放进去


764
00:25:53,376 --> 00:25:55,036
现实世界 


765
00:25:55,036 --> 00:25:56,286
它看起来自然多了 


766
00:25:56,286 --> 00:25:59,736
更像它真的在我前面的桌子上


767
00:25:59,986 --> 00:26:02,306
我有一些为你的模型添加动画时的提示


768
00:26:03,026 --> 00:26:04,986
首先 选择能够增加


769
00:26:04,986 --> 00:26:06,796
AR 沉浸感的动画


770
00:26:06,856 --> 00:26:07,946
这让对那个对象


771
00:26:07,946 --> 00:26:08,976
在房间里的感觉更加强烈


772
00:26:10,396 --> 00:26:11,826
现在 人们可以


773
00:26:11,826 --> 00:26:13,306
操纵你的物体 他们


774
00:26:13,306 --> 00:26:14,996
可以将它们收起来 缩放它们 并且


775
00:26:14,996 --> 00:26:17,206
移动它们 但有一点很重要的是


776
00:26:17,206 --> 00:26:18,296
不能把它们从


777
00:26:18,296 --> 00:26:18,696
原点移开


778
00:26:19,586 --> 00:26:21,306
如果我创造一辆


779
00:26:21,306 --> 00:26:22,806
围绕一米宽的圆圈移动的汽车


780
00:26:23,486 --> 00:26:24,386
当有人试图把他们的


781
00:26:24,386 --> 00:26:25,566
用手指放在那辆车上来选中它


782
00:26:25,566 --> 00:26:27,176
它已经离开


783
00:26:27,176 --> 00:26:28,026
走向其他的地方了


784
00:26:28,336 --> 00:26:29,256
所以 这个动画


785
00:26:29,256 --> 00:26:30,576
非常容易让想要操纵


786
00:26:30,576 --> 00:26:31,496
汽车的人产生困惑


787
00:26:32,106 --> 00:26:33,306
所以 请尝试把对象的中心


788
00:26:33,306 --> 00:26:34,156
放置在原点上


789
00:26:34,686 --> 00:26:37,536
出于同样的原因 


790
00:26:37,536 --> 00:26:39,176
尝试使整个动画


791
00:26:39,176 --> 00:26:40,316
保持一致的边界框


792
00:26:40,856 --> 00:26:42,016
即使对象停留在一个位置


793
00:26:42,016 --> 00:26:44,036
如果它一直


794
00:26:44,036 --> 00:26:45,606
停留在我手指


795
00:26:45,606 --> 00:26:46,496
下方的固定位置的话


796
00:26:46,496 --> 00:26:48,496
就更容易被操纵


797
00:26:50,586 --> 00:26:53,016
因此我们应该挑选


798
00:26:53,016 --> 00:26:54,936
那些保持在同一位置的动画


799
00:26:55,916 --> 00:26:57,516
如果你有 T-rex（霸王龙）对象


800
00:26:57,516 --> 00:26:59,256
与其让它循环走动


801
00:26:59,256 --> 00:27:00,656
像是在原地奔跑


802
00:27:00,656 --> 00:27:03,946
倒不如使其咆哮或跺脚


803
00:27:04,406 --> 00:27:05,316
或是其他合适的


804
00:27:05,316 --> 00:27:06,526
保持在静态的位置的动画


805
00:27:07,106 --> 00:27:09,396
现在 有一个备选方案


806
00:27:10,076 --> 00:27:11,826
你可以考虑创建


807
00:27:11,826 --> 00:27:14,636
有独立场景的动画


808
00:27:14,636 --> 00:27:15,636
来适应手势操纵


809
00:27:16,046 --> 00:27:17,256
我们通过一个例子


810
00:27:17,256 --> 00:27:17,756
来看看它是如何工作的


811
00:27:18,806 --> 00:27:20,566
在这里 我有一个


812
00:27:20,566 --> 00:27:22,236
游动的锦鲤


813
00:27:22,236 --> 00:27:23,786
鱼四处游动是很常见的


814
00:27:24,406 --> 00:27:25,806
所以 我们用水族馆底座


815
00:27:25,806 --> 00:27:28,106
创建了一个场景 这意味着


816
00:27:28,106 --> 00:27:29,336
当我们把它放入现实世界中时


817
00:27:29,846 --> 00:27:31,986
如果我们旋转或移动它


818
00:27:31,986 --> 00:27:34,256
我们操纵的是场景


819
00:27:34,256 --> 00:27:36,566
而不是鱼


820
00:27:36,566 --> 00:27:38,176
所以这个手势是行得通的


821
00:27:39,476 --> 00:27:40,916
我们的场景有一个底座


822
00:27:40,916 --> 00:27:42,156
这也意味着


823
00:27:42,156 --> 00:27:43,486
我们有一致的边界框


824
00:27:43,636 --> 00:27:44,876
贯穿整个动画


825
00:27:45,326 --> 00:27:48,846
另一个把你的模型


826
00:27:48,846 --> 00:27:49,996
变得生动的功能


827
00:27:50,376 --> 00:27:51,576
是接触阴影


828
00:27:52,466 --> 00:27:54,496
现在请注意 


829
00:27:54,496 --> 00:27:56,386
AR Quick Look 为你提供了接触阴影


830
00:27:57,276 --> 00:27:58,536
这意味着跟随


831
00:27:58,536 --> 00:27:59,976
模式的转换来控制


832
00:27:59,976 --> 00:28:00,976
阴影的开启和关闭


833
00:28:01,776 --> 00:28:03,196
这也意味着它可以应用


834
00:28:03,416 --> 00:28:05,116
环境光条件


835
00:28:05,116 --> 00:28:06,836
到阴影上


836
00:28:06,836 --> 00:28:07,616
来适应周围光线的变化


837
00:28:08,816 --> 00:28:10,606
正因为如此 不要为你提供的


838
00:28:10,606 --> 00:28:12,676
模型加入阴影


839
00:28:13,426 --> 00:28:14,976
如果你这样做 你会得到两个阴影


840
00:28:17,436 --> 00:28:19,196
还要注意 动画的第一帧


841
00:28:19,196 --> 00:28:22,326
是用来为模型创建阴影的


842
00:28:22,996 --> 00:28:24,596
这意味着


843
00:28:24,596 --> 00:28:26,176
我们要选择正确的第一帧


844
00:28:26,686 --> 00:28:29,206
举一个例子


845
00:28:29,206 --> 00:28:30,556
在这里 我有一个牛顿球摆的模型


846
00:28:30,556 --> 00:28:32,536
一个桌面大小的


847
00:28:33,096 --> 00:28:34,476
它有一个摇摆的动画


848
00:28:34,476 --> 00:28:36,256
一个位移动画 来给它带来生气


849
00:28:36,356 --> 00:28:39,356
现在 如果我们暂停这个动画


850
00:28:39,356 --> 00:28:41,176
在第一帧


851
00:28:41,176 --> 00:28:42,046
有一个球


852
00:28:42,046 --> 00:28:43,796
跑到了框架外面


853
00:28:43,796 --> 00:28:44,586
我们可以观察到一个问题


854
00:28:45,716 --> 00:28:47,106
我们从第一帧生成的影子中


855
00:28:47,106 --> 00:28:49,986
包含第一帧中外侧的球的影子


856
00:28:50,966 --> 00:28:52,546
所以 如果取这个动画中的


857
00:28:52,546 --> 00:28:54,076
的一个极端


858
00:28:54,696 --> 00:28:55,606
在这种情况下 影子


859
00:28:55,606 --> 00:28:58,486
不是很合理


860
00:28:58,656 --> 00:29:00,686
现在 因为动画是循环的


861
00:29:00,686 --> 00:29:01,606
我们可以选择一个不同的


862
00:29:01,606 --> 00:29:02,936
起点 更加临界的时刻


863
00:29:02,936 --> 00:29:03,966
也就是所有球都在内部的时刻


864
00:29:03,966 --> 00:29:06,016
动画依旧是相同的


865
00:29:06,016 --> 00:29:07,496
整体效果也是相同的


866
00:29:08,206 --> 00:29:09,676
但现在 通过选择更好的


867
00:29:09,676 --> 00:29:11,386
第一帧 我们的影子


868
00:29:11,386 --> 00:29:12,756
在动画中变得更合理


869
00:29:15,656 --> 00:29:17,136
我们可以做的最重要的


870
00:29:17,136 --> 00:29:18,866
关于我们的模型


871
00:29:18,866 --> 00:29:20,786
来使其变得更生动的


872
00:29:20,786 --> 00:29:21,806
修改是它的外观


873
00:29:23,056 --> 00:29:25,486
现在 在这里 AR Quick Look 使用了


874
00:29:25,486 --> 00:29:27,076
基于物理的渲染 或者是


875
00:29:27,076 --> 00:29:29,206
PBR 着色器 这给了我们


876
00:29:29,206 --> 00:29:30,706
六个我们可以修改的


877
00:29:30,816 --> 00:29:32,406
模型的外观部分


878
00:29:32,406 --> 00:29:34,146
让它在现实世界中更真实


879
00:29:35,096 --> 00:29:36,206
我们为这六个方面的


880
00:29:36,206 --> 00:29:37,666
每个方面提供


881
00:29:37,666 --> 00:29:38,866
纹理和图像


882
00:29:40,266 --> 00:29:41,996
首先是模型的 albedo


883
00:29:42,476 --> 00:29:43,916
这是模型的基础颜色


884
00:29:43,916 --> 00:29:45,816
是它原本的颜色


885
00:29:46,456 --> 00:29:48,486
第二个是指出


886
00:29:48,526 --> 00:29:50,076
模型的哪一部分是金属的


887
00:29:50,706 --> 00:29:52,076
这表示他们是否是


888
00:29:52,076 --> 00:29:53,836
导体或绝缘体


889
00:29:53,836 --> 00:29:55,126
这改变着他们如何与光


890
00:29:55,126 --> 00:29:56,236
在现实世界中进行


891
00:29:56,236 --> 00:29:56,596
物理学的交互


892
00:29:58,026 --> 00:29:59,796
我们也可以依据粗糙度材质


893
00:29:59,846 --> 00:30:01,416
来指定模型的哪一个部分


894
00:30:01,416 --> 00:30:03,366
是粗糙的或是反光的


895
00:30:04,886 --> 00:30:06,246
我们可以添加一个法线贴图


896
00:30:06,896 --> 00:30:08,056
它来形成表面深度变化


897
00:30:08,116 --> 00:30:09,326
的视觉效果


898
00:30:09,326 --> 00:30:11,176
而无须改变


899
00:30:11,426 --> 00:30:13,026
对象的网格模型


900
00:30:13,596 --> 00:30:16,086
我们可以添加环境光遮蔽纹理


901
00:30:16,086 --> 00:30:17,896
来指定模型的哪个部分


902
00:30:17,896 --> 00:30:19,746
在自身的缝隙和


903
00:30:19,746 --> 00:30:21,776
角落或裂缝投射阴影


904
00:30:23,036 --> 00:30:24,726
如果我们的模型会发光


905
00:30:25,066 --> 00:30:26,306
我们可以为像电视


906
00:30:26,306 --> 00:30:27,916
和电脑显示器这样的东西


907
00:30:27,916 --> 00:30:29,346
提供一个发光纹理


908
00:30:29,926 --> 00:30:32,276
如果你刚刚开始接触


909
00:30:32,276 --> 00:30:34,456
PBR 我们在周四


910
00:30:34,456 --> 00:30:35,886
有一个关于


911
00:30:35,916 --> 00:30:38,006
为任何 AR 体验


912
00:30:38,006 --> 00:30:39,826
创建基于 PBR 的模型的会议


913
00:30:39,826 --> 00:30:40,726
希望你能了解一下


914
00:30:42,036 --> 00:30:43,366
现在 让我们来看看


915
00:30:43,366 --> 00:30:45,306
这六种纹理会产生什么影响


916
00:30:45,306 --> 00:30:46,456
尤其是其针对 AR Quick Look


917
00:30:47,996 --> 00:30:50,056
我将从一个电视模型开始


918
00:30:50,606 --> 00:30:52,106
现在 它没有纹理


919
00:30:52,196 --> 00:30:53,586
它非常平淡


920
00:30:55,016 --> 00:30:57,356
我们将引入 Albedo 纹理


921
00:30:57,546 --> 00:30:59,386
来给它一些基本的颜色


922
00:30:59,386 --> 00:31:00,746
现在它看起来更像一个电视了


923
00:31:00,746 --> 00:31:03,066
但是少了一些空间感


924
00:31:03,346 --> 00:31:04,426
它感觉不太现实


925
00:31:04,426 --> 00:31:07,976
接下来我们要做的是


926
00:31:07,976 --> 00:31:10,166
引入金属材质贴图


927
00:31:10,166 --> 00:31:11,416
表示出屏幕周围的框架


928
00:31:11,416 --> 00:31:13,666
和顶部的天线


929
00:31:13,666 --> 00:31:14,776
表明它们是由


930
00:31:14,776 --> 00:31:15,086
金属制成的


931
00:31:16,266 --> 00:31:17,266
请注意 我们的金属


932
00:31:17,266 --> 00:31:18,946
纹理主要是由黑色和


933
00:31:18,946 --> 00:31:19,186
白色组成的


934
00:31:19,676 --> 00:31:21,436
东西要么是金属 要么不是金属


935
00:31:22,916 --> 00:31:24,206
但金属仍然不像


936
00:31:24,206 --> 00:31:25,386
我们想要的那样真实


937
00:31:25,386 --> 00:31:26,886
这是因为 金属的部分


938
00:31:26,886 --> 00:31:28,606
和模型的其他部分一样


939
00:31:28,606 --> 00:31:29,766
还是完全粗糙的


940
00:31:30,056 --> 00:31:31,356
不会反射光


941
00:31:31,526 --> 00:31:32,916
也不像现在的电视那样


942
00:31:32,916 --> 00:31:32,983
具有光滑的表面


943
00:31:35,306 --> 00:31:37,106
为了解决这个问题 我们将引入


944
00:31:37,106 --> 00:31:39,176
粗糙度纹理


945
00:31:39,176 --> 00:31:40,316
现在模型终于开始


946
00:31:40,316 --> 00:31:40,626
像模像样了


947
00:31:41,656 --> 00:31:43,076
电视屏幕周围的金属


948
00:31:43,076 --> 00:31:44,876
和天线现在看起来像金属了


949
00:31:44,876 --> 00:31:46,786
它看起来像铬


950
00:31:46,786 --> 00:31:48,486
我们电视机顶部的木头


951
00:31:48,616 --> 00:31:49,646
实际上看起来像


952
00:31:49,646 --> 00:31:51,056
清漆或漆面效果


953
00:31:51,236 --> 00:31:52,266
我们相信它现在看起来


954
00:31:52,266 --> 00:31:54,686
更像是一台电视机了


955
00:31:54,866 --> 00:31:55,946
粗糙度是你能


956
00:31:55,946 --> 00:31:57,426
最大限度操作模型外观


957
00:31:57,426 --> 00:31:58,696
并发挥创意的


958
00:31:58,696 --> 00:31:59,936
并且它也是与现实世界


959
00:31:59,936 --> 00:32:00,646
搭配的要素


960
00:32:01,186 --> 00:32:02,196
你会看到 即便在模型的相同部分


961
00:32:02,196 --> 00:32:03,476
我们在粗糙度纹理上


962
00:32:03,506 --> 00:32:04,726
都有很大的变化


963
00:32:04,726 --> 00:32:06,446
来使模型更写实


964
00:32:06,446 --> 00:32:07,736
更贴近真实的样子


965
00:32:10,176 --> 00:32:12,676
接下来 我们将添加一个法线贴图


966
00:32:12,676 --> 00:32:14,036
来产生凹凸不平的视觉效果


967
00:32:14,036 --> 00:32:15,866
特别是在电视机顶部的


968
00:32:15,866 --> 00:32:16,846
木纹部分


969
00:32:17,426 --> 00:32:18,376
基础的网格模型


970
00:32:18,376 --> 00:32:20,286
并没有被改变 但它看起来更立体了


971
00:32:20,466 --> 00:32:21,616
另外 在扬声器格栅上


972
00:32:22,066 --> 00:32:25,506
因为我们有一些缝隙


973
00:32:25,506 --> 00:32:26,686
和在电视机前面板部


974
00:32:26,686 --> 00:32:28,076
隐藏的部位


975
00:32:28,076 --> 00:32:29,876
这些地方都会投射阴影在自己身上


976
00:32:29,876 --> 00:32:31,516
我们要把这部分加入环境光遮蔽


977
00:32:31,516 --> 00:32:34,066
效果非常微妙 但是


978
00:32:34,066 --> 00:32:35,206
它确实为模型增加了深度


979
00:32:35,206 --> 00:32:37,796
让它在现实世界中感觉更真实


980
00:32:38,366 --> 00:32:41,116
而且因为这是一台带屏幕的电视机


981
00:32:41,116 --> 00:32:43,176
我们将添加一个发光


982
00:32:43,256 --> 00:32:45,056
纹理来表明


983
00:32:45,056 --> 00:32:46,456
屏幕会像周围


984
00:32:46,456 --> 00:32:46,786
发射光线


985
00:32:48,076 --> 00:32:49,356
当我们把物体潜入现实世界中时


986
00:32:49,356 --> 00:32:51,006
会看到最好的效果


987
00:32:51,786 --> 00:32:53,136
在这里 我们可以看到


988
00:32:53,136 --> 00:32:54,706
电视机机身体反射了


989
00:32:54,706 --> 00:32:55,876
它所在的房间


990
00:32:55,876 --> 00:32:57,466
环境的照明条件


991
00:32:57,466 --> 00:32:58,016
但屏幕更明亮


992
00:32:58,016 --> 00:33:00,746
它实际上是在发光


993
00:33:01,026 --> 00:33:02,266
发光纹理实际上


994
00:33:02,266 --> 00:33:03,606
是一个特例


995
00:33:03,606 --> 00:33:04,636
并不常用


996
00:33:05,436 --> 00:33:06,326
但是 如果你的对象


997
00:33:06,326 --> 00:33:07,656
会在灯光熄灭后发光


998
00:33:07,656 --> 00:33:09,116
发光纹理


999
00:33:09,116 --> 00:33:10,716
会在这时变得很有用


1000
00:33:13,196 --> 00:33:14,446
我们也可以使我们


1001
00:33:14,446 --> 00:33:15,596
模型的一部分变得透明


1002
00:33:15,596 --> 00:33:17,366
举个例子 它对那些一部分由


1003
00:33:17,366 --> 00:33:19,296
玻璃构成的物体很适用


1004
00:33:19,626 --> 00:33:22,686
如果你这样做 请务必


1005
00:33:22,686 --> 00:33:24,256
为模型的透明部分和


1006
00:33:24,256 --> 00:33:25,986
不透明部分使用不同的材料


1007
00:33:25,986 --> 00:33:28,116
让它在现实世界中被正确渲染


1008
00:33:28,696 --> 00:33:31,366
你通过提供一个


1009
00:33:31,366 --> 00:33:32,736
albedo 纹理


1010
00:33:32,736 --> 00:33:34,156
在 alpha 通道中


1011
00:33:34,156 --> 00:33:34,536
含有透明度参数


1012
00:33:34,786 --> 00:33:37,056
例如一个透明的 PNG 文件


1013
00:33:38,506 --> 00:33:40,046
请注意 透明度是被设计


1014
00:33:40,046 --> 00:33:41,726
用于模型的透明可透视部分的模型


1015
00:33:41,726 --> 00:33:43,216
而不是用于剪切图形


1016
00:33:43,216 --> 00:33:45,396
例如叶缘或是蝴蝶翅膀


1017
00:33:45,956 --> 00:33:48,896
我们会在之前的电视机模型中


1018
00:33:48,996 --> 00:33:50,196
看到这一点


1019
00:33:50,196 --> 00:33:52,336
除了我们的已经有的


1020
00:33:52,336 --> 00:33:53,596
作为主体的网格模型


1021
00:33:53,596 --> 00:33:55,806
我将为曲面屏幕


1022
00:33:55,806 --> 00:33:57,436
一个由玻璃制成的屏幕罩


1023
00:33:57,436 --> 00:33:58,416
在上面还有点灰尘


1024
00:33:58,416 --> 00:34:01,206
添加第二个网格模型


1025
00:34:01,736 --> 00:34:04,816
这是它在 AR Quick Look 中的样子


1026
00:34:05,826 --> 00:34:06,816
我们可以看到光


1027
00:34:06,816 --> 00:34:08,016
被反射和照亮


1028
00:34:08,016 --> 00:34:09,505
在屏幕曲面上


1029
00:34:09,786 --> 00:34:11,085
如果我们转到侧面


1030
00:34:11,335 --> 00:34:12,416
我们可以看到


1031
00:34:12,416 --> 00:34:13,596
屏幕的颜色以及


1032
00:34:13,596 --> 00:34:15,346
玻璃上的一点污垢


1033
00:34:16,716 --> 00:34:18,255
我们通过这种透明纹理


1034
00:34:18,315 --> 00:34:20,235
来实现我们的屏幕效果


1035
00:34:20,235 --> 00:34:21,426
这很简单


1036
00:34:21,505 --> 00:34:23,126
它只是增加了一些灰尘


1037
00:34:23,686 --> 00:34:24,666
但重要的是


1038
00:34:24,666 --> 00:34:27,146
它在 alpha 通道 由透明度来表明


1039
00:34:27,146 --> 00:34:28,346
它是可以被透视的


1040
00:34:28,346 --> 00:34:29,983
并且我们可以看到它后面的主屏幕


1041
00:34:32,795 --> 00:34:36,326
当你为这些方面设计纹理时


1042
00:34:36,326 --> 00:34:37,556
如果你需要透明度的话


1043
00:34:38,485 --> 00:34:41,815
Albedo 应该是 RGB 或


1044
00:34:41,815 --> 00:34:42,476
RBGA 格式


1045
00:34:43,126 --> 00:34:45,146
法线和发光也应该用 RGB


1046
00:34:45,146 --> 00:34:47,496
金属和粗糙度


1047
00:34:47,496 --> 00:34:48,466
还有环境光遮蔽


1048
00:34:48,466 --> 00:34:48,876
应该是灰度


1049
00:34:49,426 --> 00:34:51,896
你可以使用任何 iOS


1050
00:34:51,896 --> 00:34:54,246
支持的图像格式


1051
00:34:54,246 --> 00:34:55,676
这些纹理应该是正方形的


1052
00:34:57,266 --> 00:35:04,146
例如 2k 1k 512 像素等等


1053
00:35:04,426 --> 00:35:06,386
David 之前提到 AR


1054
00:35:06,386 --> 00:35:07,956
Quick Look 可以在


1055
00:35:07,956 --> 00:35:10,756
支持 iOS 12 的设备上使用


1056
00:35:10,756 --> 00:35:12,036
这一范围实际上包括


1057
00:35:12,036 --> 00:35:13,816
许多具备不同性能的设备


1058
00:35:15,306 --> 00:35:17,856
现在 因为 AR Quick Look 是一款


1059
00:35:17,856 --> 00:35:20,076
系统层面的扩展


1060
00:35:20,076 --> 00:35:21,206
这意味着它必须与


1061
00:35:21,206 --> 00:35:22,736
启动它的 App 


1062
00:35:22,736 --> 00:35:24,026
分享可用的系统内存


1063
00:35:24,026 --> 00:35:26,046
所以 只有有限的


1064
00:35:26,046 --> 00:35:27,866
内存可用于显示和


1065
00:35:27,866 --> 00:35:28,626
加载这些模型


1066
00:35:29,306 --> 00:35:32,586
为了解决这个问题 我们建议


1067
00:35:32,586 --> 00:35:34,366
你使用像 iPhone 7 Plus


1068
00:35:34,446 --> 00:35:36,376
8 Plus 和 X 以及 iPad Pro 12.9 英寸


1069
00:35:36,376 --> 00:35:38,786
这样有高内存的设备


1070
00:35:39,016 --> 00:35:42,816
来创建和优化你的模型


1071
00:35:43,916 --> 00:35:45,956
如果你这样做 在必要时 AR Quick Look


1072
00:35:45,956 --> 00:35:47,736
将会动态地对纹理


1073
00:35:47,736 --> 00:35:49,346
进行下采样


1074
00:35:49,346 --> 00:35:51,556
以适应不同性能的设备


1075
00:35:52,266 --> 00:35:53,216
这意味着你可以在那些设备上


1076
00:35:53,216 --> 00:35:54,626
让你的模型看起来很棒


1077
00:35:54,626 --> 00:35:56,076
但是它们在其他设备上


1078
00:35:56,076 --> 00:35:56,776
也能正常工作


1079
00:35:56,776 --> 00:35:59,786
网格模型和


1080
00:35:59,786 --> 00:36:01,156
动画不会被修改


1081
00:36:01,406 --> 00:36:02,496
只是纹理


1082
00:36:02,496 --> 00:36:02,976
会被下采样


1083
00:36:06,276 --> 00:36:07,576
你可能在想


1084
00:36:07,576 --> 00:36:09,986
好吧 我的模型可以有多大


1085
00:36:09,986 --> 00:36:12,286
我的纹理可以有多大或多复杂


1086
00:36:12,286 --> 00:36:15,626
答案是没有 一个答案


1087
00:36:16,376 --> 00:36:17,986
影响模型内存使用情况的


1088
00:36:17,986 --> 00:36:19,786
因素有很多 网格模型和


1089
00:36:19,786 --> 00:36:21,436
动画的复杂性


1090
00:36:21,436 --> 00:36:22,576
以及纹理大小和数量


1091
00:36:23,816 --> 00:36:26,536
但作为参考 对于一个具有单个 PBR 纹理


1092
00:36:26,536 --> 00:36:28,716
并使用我们看到的那六种纹理


1093
00:36:28,716 --> 00:36:30,126
的模型来说


1094
00:36:30,126 --> 00:36:32,116
如果你的目标是


1095
00:36:32,336 --> 00:36:35,606
100k 个多边形 一套 2k 乘以


1096
00:36:35,606 --> 00:36:38,136
2k 的 PBR 纹理


1097
00:36:38,136 --> 00:36:39,956
和约 10 秒钟的动画


1098
00:36:39,956 --> 00:36:40,916
这对那些


1099
00:36:40,916 --> 00:36:42,576
我们提到的高内存设备是可以的


1100
00:36:43,156 --> 00:36:45,976
如果有疑问 多在设备上


1101
00:36:45,976 --> 00:36:47,786
测试你的模型 以确保


1102
00:36:47,786 --> 00:36:52,116
它渲染并加载正确


1103
00:36:52,236 --> 00:36:53,736
当你为 AR Quick Look


1104
00:36:53,796 --> 00:36:55,336
优化你的模型时


1105
00:36:55,336 --> 00:36:56,906
有一些事情需要注意


1106
00:36:57,636 --> 00:37:00,656
确保冻结模型中的任何变换


1107
00:37:00,656 --> 00:37:01,956
合并任何相邻的顶点


1108
00:37:02,196 --> 00:37:03,576
来为导出做准备


1109
00:37:04,496 --> 00:37:06,306
如果可以 请尝试


1110
00:37:06,306 --> 00:37:08,086
为整个模型


1111
00:37:08,086 --> 00:37:08,976
使用单一的材料和纹理集


1112
00:37:10,056 --> 00:37:11,526
这可以对


1113
00:37:11,526 --> 00:37:12,866
如何将模型的


1114
00:37:12,866 --> 00:37:14,456
不同部位打包成


1115
00:37:14,456 --> 00:37:15,396
我们使用的方形纹理加以优化


1116
00:37:15,926 --> 00:37:18,666
如果你不需要纹理


1117
00:37:19,256 --> 00:37:21,416
那就不要包括它


1118
00:37:21,416 --> 00:37:22,256
如果你的模型


1119
00:37:22,256 --> 00:37:23,266
没有金属部分


1120
00:37:23,266 --> 00:37:24,336
那就没有必要提供一个


1121
00:37:24,336 --> 00:37:25,076
金属纹理


1122
00:37:25,416 --> 00:37:26,866
加载的任何模型


1123
00:37:26,866 --> 00:37:28,306
默认都是非金属的


1124
00:37:29,316 --> 00:37:30,846
当你考虑在哪里


1125
00:37:30,846 --> 00:37:32,116
使用你的纹理预算时


1126
00:37:32,616 --> 00:37:34,236
优先考虑那些


1127
00:37:34,236 --> 00:37:35,876
能够使模型变得更真实的区域


1128
00:37:35,876 --> 00:37:38,046
对于某些模型 这可能是一个


1129
00:37:38,116 --> 00:37:39,646
高分辨率的 albedo 纹理


1130
00:37:40,176 --> 00:37:41,116
对于其他的来说


1131
00:37:41,176 --> 00:37:42,976
花费在粗糙或法线贴图上 更划算


1132
00:37:45,136 --> 00:37:46,636
并记住像素实际上


1133
00:37:46,636 --> 00:37:48,486
在 AR 中具有物理大小


1134
00:37:49,656 --> 00:37:50,856
如果你正在打印某个


1135
00:37:50,856 --> 00:37:52,206
顶针模型 它是一英寸宽


1136
00:37:52,256 --> 00:37:54,566
那就可能没有必要


1137
00:37:54,566 --> 00:37:56,443
为它使用 2k×2k 的纹理


1138
00:37:56,786 --> 00:37:59,186
那些像素会在现实世界中很小


1139
00:38:00,586 --> 00:38:02,156
尽管我们想要模型


1140
00:38:02,156 --> 00:38:03,986
看起来不错 我们也需要


1141
00:38:03,986 --> 00:38:05,866
针对文件大小


1142
00:38:05,866 --> 00:38:06,846
平衡纹理尺寸和质量


1143
00:38:07,466 --> 00:38:08,496
如果一个模型被


1144
00:38:08,496 --> 00:38:10,056
从一个网站下载 我们希望它具备


1145
00:38:10,056 --> 00:38:11,646
适合下载的大小


1146
00:38:11,646 --> 00:38:13,376
也适合于通过消息或邮件


1147
00:38:13,376 --> 00:38:15,006
和邮件等其他手段共享


1148
00:38:17,156 --> 00:38:20,416
所以 我们如何做出这些东西呢


1149
00:38:21,416 --> 00:38:24,026
对此 我们有一个 usdz 转换器


1150
00:38:25,286 --> 00:38:26,806
这是一个命令行工具


1151
00:38:27,076 --> 00:38:28,976
来转换现有的 3D 模型


1152
00:38:29,136 --> 00:38:30,286
为 usdz 格式


1153
00:38:31,486 --> 00:38:34,516
它在 Xcode 10 内部


1154
00:38:34,516 --> 00:38:36,556
除了创建 usdz 文件


1155
00:38:37,206 --> 00:38:38,726
你也可以用它来映射 PBR


1156
00:38:38,726 --> 00:38:40,646
纹理到现有模型


1157
00:38:40,646 --> 00:38:42,176
内部的网格与


1158
00:38:42,176 --> 00:38:42,476
子网格模型


1159
00:38:43,156 --> 00:38:47,226
它是 X3 输入格式 OBJ 文件


1160
00:38:47,446 --> 00:38:49,706
Alembic 文件和现有的 USD 文件


1161
00:38:49,706 --> 00:38:52,736
USDA 或 USDC


1162
00:38:52,736 --> 00:38:55,206
USD 的 ASCII 和二进制版本


1163
00:38:56,496 --> 00:38:58,456
在我们创建一个之前 让我们来看看


1164
00:38:58,456 --> 00:38:59,736
看看我们要去做的是什么


1165
00:38:59,876 --> 00:39:01,586
让我们深入看一个 usdz 文件


1166
00:39:03,036 --> 00:39:04,406
实质上 这些是


1167
00:39:04,406 --> 00:39:06,146
未压缩的 zip 档案


1168
00:39:06,926 --> 00:39:10,016
第一个文件总是一个 usdc 文件


1169
00:39:10,786 --> 00:39:12,236
这包含模型的网格模型


1170
00:39:12,546 --> 00:39:13,936
如果它有的动画的话


1171
00:39:13,936 --> 00:39:15,726
还会包含动画和需要的材料


1172
00:39:16,976 --> 00:39:17,936
然后 剩下的


1173
00:39:17,936 --> 00:39:19,916
档案中的文件是


1174
00:39:19,996 --> 00:39:21,276
纹理 图像


1175
00:39:21,276 --> 00:39:22,876
就像我们之前看到的那些


1176
00:39:24,116 --> 00:39:25,446
如果你正在考虑用


1177
00:39:25,446 --> 00:39:27,666
你自己的工具来建立 usdz 文件


1178
00:39:27,666 --> 00:39:29,406
好消息是


1179
00:39:29,406 --> 00:39:30,246
这是一个开放的格式


1180
00:39:30,246 --> 00:39:32,436
Pixar 已经在


1181
00:39:32,486 --> 00:39:33,856
graphics.pixar.com 网站上


1182
00:39:33,856 --> 00:39:37,206
公布了一份透明的 usdz 规范


1183
00:39:38,836 --> 00:39:40,446
用 usdz 创建一个转换器时


1184
00:39:40,446 --> 00:39:42,486
首先注意我们


1185
00:39:42,486 --> 00:39:44,476
要使用 xcrun 调用该工具


1186
00:39:44,476 --> 00:39:45,556
因为它转移到 Xcode 内部


1187
00:39:46,476 --> 00:39:47,516
我们把我们想要转换的


1188
00:39:47,516 --> 00:39:49,436
模型的名称 在这个例子里是 OBJ 文件


1189
00:39:49,436 --> 00:39:51,206
和想输出的 usdz


1190
00:39:51,206 --> 00:39:52,866
模型的名字


1191
00:39:52,866 --> 00:39:53,706
输入进去


1192
00:39:54,676 --> 00:39:56,766
将 PBR 纹理映射到


1193
00:39:56,766 --> 00:39:59,246
网格模型中 我们使用 -g


1194
00:39:59,246 --> 00:40:00,816
选项 后跟一个我们想要映射的组 


1195
00:40:00,816 --> 00:40:03,506
一个网格或一个子网格的名称


1196
00:40:03,506 --> 00:40:05,356
并且我们可以为一个特定组


1197
00:40:05,356 --> 00:40:07,456
提供任意数量的纹理


1198
00:40:08,886 --> 00:40:10,326
将多个贴图映射到


1199
00:40:10,326 --> 00:40:12,036
多个组 我们可以任意使用


1200
00:40:12,036 --> 00:40:13,586
-g 选项多次


1201
00:40:13,586 --> 00:40:15,126
来把纹理


1202
00:40:15,126 --> 00:40:15,886
映射进我们的模型中


1203
00:40:16,426 --> 00:40:18,406
如果你不确定模型的哪一组


1204
00:40:18,406 --> 00:40:19,646
应该被调用


1205
00:40:20,246 --> 00:40:22,026
你可以传入 -v 选项


1206
00:40:22,026 --> 00:40:23,176
来查看详细输出


1207
00:40:23,486 --> 00:40:24,496
这将列出


1208
00:40:24,496 --> 00:40:26,016
模型中组的信息


1209
00:40:26,166 --> 00:40:27,596
以及其他转换过程


1210
00:40:27,596 --> 00:40:28,636
的其他信息


1211
00:40:31,096 --> 00:40:32,696
除了自己制作


1212
00:40:32,696 --> 00:40:34,536
模型 我们也提供了


1213
00:40:34,536 --> 00:40:36,546
一个示例模型库


1214
00:40:36,546 --> 00:40:37,826
来展示 PBR 的良好实践


1215
00:40:37,826 --> 00:40:40,546
如果你使用 iOS 12 设备


1216
00:40:40,546 --> 00:40:42,706
访问这个库 你可以点击


1217
00:40:42,706 --> 00:40:44,306
这些模型中的任何一个 然后在 AR Quick Look


1218
00:40:44,336 --> 00:40:45,616
中打开它们 并将它们


1219
00:40:45,616 --> 00:40:45,936
嵌入现实世界


1220
00:40:46,926 --> 00:40:48,856
这个库也展示了


1221
00:40:48,976 --> 00:40:50,946
之前 David 向你展示的 Safari 浏览器集成


1222
00:40:51,566 --> 00:40:53,436
所以 如果你有一个 iOS 12 的设备 


1223
00:40:53,436 --> 00:40:54,706
不妨访问


1224
00:40:54,706 --> 00:40:57,966
develop@apple.com/arkit/gallery


1225
00:40:58,336 --> 00:41:01,816
来试试看


1226
00:41:02,036 --> 00:41:05,166
总之 AR Quick Look 是


1227
00:41:05,166 --> 00:41:07,016
系统层面在现实世界中查看


1228
00:41:07,016 --> 00:41:08,466
AR 内容的方式


1229
00:41:09,756 --> 00:41:10,936
它可以集成到你自己


1230
00:41:10,936 --> 00:41:12,216
的 App 和网站


1231
00:41:12,216 --> 00:41:16,076
它使用 usdz 文件格式进行


1232
00:41:16,076 --> 00:41:17,856
3D 模型发布和分享


1233
00:41:19,336 --> 00:41:21,436
它支持 PBR 动画和透明度


1234
00:41:21,436 --> 00:41:24,336
你可以使用


1235
00:41:24,336 --> 00:41:25,506
usdz 转换工具


1236
00:41:25,506 --> 00:41:27,366
在 Xcode 10 中转换


1237
00:41:27,366 --> 00:41:29,616
你现有的模型到 usdz 文件


1238
00:41:30,456 --> 00:41:31,676
有关这个会议主题


1239
00:41:31,676 --> 00:41:33,156
的更多信息


1240
00:41:33,156 --> 00:41:33,936
请参阅会议网站


1241
00:41:35,036 --> 00:41:36,306
我们也在这一周中


1242
00:41:36,306 --> 00:41:36,886
提供 ARKit 实验室


1243
00:41:37,076 --> 00:41:38,036
可以带上任何你有关


1244
00:41:38,036 --> 00:41:39,256
AR Quick Look 的问题来


1245
00:41:39,256 --> 00:41:42,846
我们会很高兴为你解答 谢谢


1246
00:41:43,516 --> 00:41:47,500
[ 掌声 ]

