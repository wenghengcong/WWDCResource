1
00:00:07,016 --> 00:00:15,500
[ 音乐 ]


2
00:00:20,516 --> 00:00:29,216
[ 掌声 ]


3
00:00:29,716 --> 00:00:32,516
>> 隐私关乎于人


4
00:00:34,166 --> 00:00:35,686
我叫 Joey Tyson


5
00:00:35,726 --> 00:00:37,286
我是 Apple 的隐私工程师


6
00:00:37,386 --> 00:00:39,336
我知道各位本周已经


7
00:00:39,336 --> 00:00:40,876
了解到了很多


8
00:00:40,876 --> 00:00:43,066
令人兴奋的新功能


9
00:00:43,066 --> 00:00:44,506
并且已经准备好


10
00:00:44,506 --> 00:00:47,066
要着手开发一些新 App


11
00:00:47,066 --> 00:00:49,206
但我知道大家也非常关心


12
00:00:49,206 --> 00:00:50,246
用户的隐私问题


13
00:00:51,416 --> 00:00:53,806
这也是今天我想在讨论


14
00:00:53,806 --> 00:00:56,366
今年的更新之前


15
00:00:56,426 --> 00:00:58,676
和各位探讨的关于隐私的


16
00:00:58,676 --> 00:01:00,216
三大想法中的第一个


17
00:01:01,446 --> 00:01:02,236
因为我们将讨论到


18
00:01:02,236 --> 00:01:05,536
许多数据隐私的内容 不过我们


19
00:01:05,536 --> 00:01:07,716
永远不能忘记


20
00:01:07,716 --> 00:01:08,996
隐私关乎于人


21
00:01:09,686 --> 00:01:11,196
它属于人


22
00:01:12,456 --> 00:01:14,616
那么当我说隐私关乎于人时


23
00:01:14,616 --> 00:01:16,896
我指的是


24
00:01:16,896 --> 00:01:19,166
要同你的用户


25
00:01:19,556 --> 00:01:20,586
建立信任关系


26
00:01:22,176 --> 00:01:24,096
这为用户更好的参与度


27
00:01:24,096 --> 00:01:27,046
奠定了基础 从而带来更好的 App


28
00:01:28,506 --> 00:01:29,826
想想其他的关系


29
00:01:29,826 --> 00:01:31,596
你更可能和


30
00:01:32,086 --> 00:01:33,676
你信任的人一起工作


31
00:01:33,676 --> 00:01:35,056
共度时光


32
00:01:36,496 --> 00:01:40,076
而且 当用户了解


33
00:01:40,076 --> 00:01:41,636
你为什么要收集数据


34
00:01:41,696 --> 00:01:44,256
将如何使用数据时 由于你


35
00:01:44,256 --> 00:01:45,716
尊重并谨慎地处理数据


36
00:01:45,806 --> 00:01:47,946
所以你也将获得更好的数据


37
00:01:47,946 --> 00:01:50,416
因为他们会更加


38
00:01:50,416 --> 00:01:51,506
愿意使用你的 App


39
00:01:51,506 --> 00:01:54,076
并分享信息


40
00:01:54,076 --> 00:01:56,006
这随着时间的推移


41
00:01:56,006 --> 00:01:57,316
就建立了忠诚度


42
00:01:59,396 --> 00:02:02,446
我之所以从这个问题说起


43
00:02:02,446 --> 00:02:04,676
是因为我希望大家能将它


44
00:02:04,676 --> 00:02:06,596
应用到自己的开发过程当中


45
00:02:08,026 --> 00:02:09,816
我们每个人都不会


46
00:02:09,886 --> 00:02:12,746
与世隔绝地设计程序 所以不论


47
00:02:12,746 --> 00:02:15,056
你是在处理健康记录 还是只是制作一个


48
00:02:15,056 --> 00:02:16,266
简单的益智游戏


49
00:02:16,266 --> 00:02:19,136
你收集的信息


50
00:02:19,336 --> 00:02:21,096
以及使用方式都可能


51
00:02:21,736 --> 00:02:23,896
对人们的生活产生非常


52
00:02:23,896 --> 00:02:24,956
实际的影响


53
00:02:26,256 --> 00:02:29,846
因此 我们每个人都必须仔细考虑


54
00:02:29,846 --> 00:02:31,486
我们正在构建的技术


55
00:02:31,896 --> 00:02:34,956
最近 在杜克大学的


56
00:02:35,156 --> 00:02:37,556
一场毕业演讲中


57
00:02:37,556 --> 00:02:39,136
Tim Cook 谈到了 Apple


58
00:02:39,136 --> 00:02:41,846
对隐私的处理方法 他说


59
00:02:41,846 --> 00:02:44,196
我们在各个方面


60
00:02:44,196 --> 00:02:46,646
所问自己的问题不是


61
00:02:46,646 --> 00:02:50,396
我们能做什么 而是我们应该做什么


62
00:02:50,896 --> 00:02:54,566
这让我想到了第二个


63
00:02:54,896 --> 00:02:59,696
重要的想法 就是问“应该”的问题


64
00:03:00,336 --> 00:03:03,306
无论你扮演的角色是什么


65
00:03:03,606 --> 00:03:06,656
无论你是 App 的独立开发者


66
00:03:06,656 --> 00:03:09,606
还是大型组织的一员


67
00:03:10,136 --> 00:03:12,016
你都可以维护你用户的权益


68
00:03:12,476 --> 00:03:14,016
请记住你对用户的责任


69
00:03:14,016 --> 00:03:16,536
对你的 App 中的数据


70
00:03:16,536 --> 00:03:19,346
提出问题


71
00:03:20,186 --> 00:03:23,646
比如说 为什么我们会


72
00:03:23,646 --> 00:03:24,296
需要这个数据呢


73
00:03:25,776 --> 00:03:27,256
这不仅仅是一个问题


74
00:03:27,256 --> 00:03:28,606
这需要我们思考


75
00:03:28,606 --> 00:03:31,236
这对我们的用例是必须的吗


76
00:03:31,766 --> 00:03:32,836
我们应该收集它吗


77
00:03:34,176 --> 00:03:36,196
这会让我们的用户感到惊讶吗


78
00:03:37,256 --> 00:03:38,876
如果人们明白这一点


79
00:03:38,876 --> 00:03:41,076
但它吓到了他们 那我们为什么


80
00:03:41,076 --> 00:03:41,916
要这样做呢


81
00:03:43,116 --> 00:03:45,226
我们不能用粗糙点的数据


82
00:03:45,226 --> 00:03:46,476
不那么精确吗


83
00:03:47,416 --> 00:03:49,466
有没有我们应该考虑的其他方法


84
00:03:50,616 --> 00:03:52,316
还有我们是否应该


85
00:03:52,316 --> 00:03:54,766
在一段时间后 删除或汇总这些数据


86
00:03:55,166 --> 00:03:58,046
提出这些问题


87
00:03:58,046 --> 00:03:59,646
的部分原因是


88
00:03:59,646 --> 00:04:01,436
我们都可能


89
00:04:01,436 --> 00:04:03,326
深受数据假设其害


90
00:04:03,906 --> 00:04:06,946
那么想想看


91
00:04:06,946 --> 00:04:07,976
我们为每个人都记录下数据


92
00:04:09,036 --> 00:04:12,526
可能我们过去一直在这样做


93
00:04:12,526 --> 00:04:14,306
或者其他人一直在这样做


94
00:04:14,306 --> 00:04:15,726
但是 我们试图完成的这些


95
00:04:15,726 --> 00:04:16,966
是否真的有必要呢


96
00:04:19,516 --> 00:04:21,065
或者你可能认为


97
00:04:21,065 --> 00:04:22,696
数据在你工作的环境中


98
00:04:22,696 --> 00:04:24,046
可能不太敏感


99
00:04:24,046 --> 00:04:26,656
但也许这些数据对于


100
00:04:26,656 --> 00:04:28,506
不同的环境


101
00:04:28,806 --> 00:04:30,976
或弱势群体中的用户非常敏感


102
00:04:33,026 --> 00:04:34,446
如果你是有目的地


103
00:04:34,446 --> 00:04:35,956
采集数据并以全新的方式应用它


104
00:04:35,956 --> 00:04:38,196
用户会理解吗


105
00:04:38,196 --> 00:04:41,126
这是他们想要的吗


106
00:04:42,396 --> 00:04:44,096
你也听过人们谈论


107
00:04:44,096 --> 00:04:45,376
个人身份信息


108
00:04:45,376 --> 00:04:48,436
即 PII 但即使是


109
00:04:48,436 --> 00:04:49,996
不在该定义范围内的


110
00:04:49,996 --> 00:04:51,306
数据仍会对隐私


111
00:04:51,306 --> 00:04:52,416
产生影响


112
00:04:53,896 --> 00:04:55,926
就像如果你采用


113
00:04:55,926 --> 00:04:57,226
加密和安全措施


114
00:04:57,226 --> 00:04:59,876
来保护数据一样 这很棒


115
00:04:59,876 --> 00:05:02,106
但隐私远不止于此


116
00:05:03,096 --> 00:05:04,276
因为它无法回答


117
00:05:04,276 --> 00:05:06,306
我们是否应该采集


118
00:05:06,306 --> 00:05:08,596
这一数据里的“应该”问题


119
00:05:09,876 --> 00:05:11,926
当你询问你的 App 里的


120
00:05:11,926 --> 00:05:13,146
数据流问题


121
00:05:13,146 --> 00:05:14,576
如果你想更进一步


122
00:05:14,576 --> 00:05:16,726
你可以创建


123
00:05:16,726 --> 00:05:18,376
隐私保障


124
00:05:19,436 --> 00:05:20,936
这些是关于


125
00:05:20,936 --> 00:05:22,646
你希望能够制作的


126
00:05:22,646 --> 00:05:24,766
App 中的隐私预期的高级声明


127
00:05:25,946 --> 00:05:27,986
通过在开发过程中


128
00:05:27,986 --> 00:05:29,886
尽早建立这些功能


129
00:05:30,676 --> 00:05:32,396
就可以给你提供一个框架


130
00:05:32,396 --> 00:05:33,316
在构建功能时指导你


131
00:05:33,316 --> 00:05:35,216
并在完成后


132
00:05:35,216 --> 00:05:36,926
测试相关内容


133
00:05:38,416 --> 00:05:39,966
屏幕上有一些例子


134
00:05:39,966 --> 00:05:41,256
它们和 Apple


135
00:05:41,256 --> 00:05:42,326
关于我们的功能的


136
00:05:42,326 --> 00:05:44,416
陈述很相似


137
00:05:44,416 --> 00:05:46,436
并且有很多选项


138
00:05:46,846 --> 00:05:48,866
可以实现这些功能


139
00:05:48,946 --> 00:05:50,436
这就使我有了


140
00:05:51,586 --> 00:05:54,946
第三个想法


141
00:05:56,166 --> 00:05:58,956
请将你的数据和用例


142
00:05:59,036 --> 00:06:04,166
结合起来要说明这一点 我们要先思考一下


143
00:06:04,166 --> 00:06:05,886
数据收集


144
00:06:05,886 --> 00:06:07,536
你收集的数据数量及其类型


145
00:06:07,996 --> 00:06:09,846
我们之前已经提过


146
00:06:09,846 --> 00:06:10,576
这些假设


147
00:06:10,576 --> 00:06:11,856
有时候你可能会想


148
00:06:11,856 --> 00:06:13,366
难道我不应该


149
00:06:13,466 --> 00:06:15,376
尽可能多地收集数据吗


150
00:06:15,376 --> 00:06:17,706
大家都知道


151
00:06:17,706 --> 00:06:18,856
过去人们都称数据为


152
00:06:18,856 --> 00:06:20,526
新经济的燃料


153
00:06:21,066 --> 00:06:24,416
同实际的燃料一样


154
00:06:24,416 --> 00:06:25,726
应谨慎处理数据


155
00:06:27,316 --> 00:06:29,606
因为数据非常强大


156
00:06:29,606 --> 00:06:30,796
可以解锁很多用例


157
00:06:30,796 --> 00:06:32,866
但正因为它非常强大


158
00:06:32,866 --> 00:06:34,576
所以如果处理不当


159
00:06:34,576 --> 00:06:36,596
数据也会变得


160
00:06:36,596 --> 00:06:37,166
非常危险


161
00:06:38,756 --> 00:06:40,926
作为一名工程师


162
00:06:40,926 --> 00:06:41,636
收集数据会给你带来开销


163
00:06:41,636 --> 00:06:43,806
你将需要花费 不断更新


164
00:06:43,966 --> 00:06:46,596
时间和资源来管理


165
00:06:46,596 --> 00:06:48,376
这些数据 并对其进行过滤


166
00:06:48,476 --> 00:06:49,746
现在你可以开始


167
00:06:50,136 --> 00:06:52,126
为你的用户开发新功能了


168
00:06:53,156 --> 00:06:55,316
这同时也会产生责任


169
00:06:56,096 --> 00:06:57,376
我们都听说过有公司


170
00:06:57,376 --> 00:06:58,766
发生数据泄露的情况


171
00:06:58,766 --> 00:06:59,966
这非常糟糕


172
00:07:00,836 --> 00:07:02,166
但是 如果泄露的数据


173
00:07:02,296 --> 00:07:03,876
包含与用例


174
00:07:03,926 --> 00:07:06,626
无关的信息


175
00:07:06,626 --> 00:07:08,456
那情况就更糟了


176
00:07:09,396 --> 00:07:11,286
意外的数据收集


177
00:07:11,626 --> 00:07:13,536
会造成各种风险


178
00:07:13,716 --> 00:07:15,846
而且它会破坏你同


179
00:07:15,846 --> 00:07:17,666
用户之间的信任关系


180
00:07:18,606 --> 00:07:20,086
下一次你想收集


181
00:07:20,286 --> 00:07:21,386
尽可能多的数据时


182
00:07:21,386 --> 00:07:23,926
我希望你能在脑海中


183
00:07:23,926 --> 00:07:26,236
想象一下这些化学品罐


184
00:07:26,236 --> 00:07:27,816
并记住你对用户的责任


185
00:07:27,816 --> 00:07:30,036
以便仔细和周到地


186
00:07:30,586 --> 00:07:32,306
处理他们的数据


187
00:07:32,306 --> 00:07:34,726
反之 你可能想应用


188
00:07:35,346 --> 00:07:38,686
我们所说的比例数据收集


189
00:07:39,236 --> 00:07:41,396
这是只收集


190
00:07:41,396 --> 00:07:43,246
为实现你的目标


191
00:07:43,246 --> 00:07:45,196
所必需的数据的想法


192
00:07:45,196 --> 00:07:47,186
有时你可能会 开始认为有充足的


193
00:07:47,186 --> 00:07:49,006
不同的数据集时


194
00:07:49,006 --> 00:07:50,106
就需要大量的信息


195
00:07:50,106 --> 00:07:52,366
你甚至可以


196
00:07:52,366 --> 00:07:53,946
从没有数据的假设开始


197
00:07:53,946 --> 00:07:55,726
找出你想要解决的


198
00:07:55,726 --> 00:07:56,936
问题的真正必要条件


199
00:07:58,666 --> 00:08:00,006
这就回到了用户期待


200
00:08:00,006 --> 00:08:01,116
这一问题


201
00:08:02,126 --> 00:08:04,286
人们应该明白


202
00:08:04,286 --> 00:08:06,446
你为什么要收集数据 以及你要如何使用它


203
00:08:06,896 --> 00:08:08,566
数据应该符合用户的期待


204
00:08:09,716 --> 00:08:10,656
你应该始终能够


205
00:08:10,656 --> 00:08:13,206
为你正在构建的


206
00:08:13,266 --> 00:08:14,816
用例提供明确的理据


207
00:08:15,226 --> 00:08:18,356
不过当然 这是关于


208
00:08:18,356 --> 00:08:19,486
数据收集的 但是当我们


209
00:08:19,486 --> 00:08:20,746
讨论如何将数据实践


210
00:08:20,746 --> 00:08:22,866
与用例结合时


211
00:08:22,866 --> 00:08:24,596
它将扩展到整个


212
00:08:24,596 --> 00:08:27,036
数据生命周期


213
00:08:27,036 --> 00:08:29,296
并成为委托给你的信息的良好管理者


214
00:08:30,286 --> 00:08:32,426
因此 除了比例数据收集


215
00:08:32,426 --> 00:08:33,796
你也会希望在整个 App 的


216
00:08:33,796 --> 00:08:35,265
工作流程中开发


217
00:08:35,265 --> 00:08:38,806
并使用隐私技术


218
00:08:39,285 --> 00:08:41,626
你可以开发一个完整的


219
00:08:41,626 --> 00:08:43,686
Toolbox 或技术指令系统


220
00:08:43,686 --> 00:08:45,466
以帮助你在你的


221
00:08:45,466 --> 00:08:47,026
App 内构建隐私


222
00:08:47,796 --> 00:08:49,546
像聚类一样


223
00:08:50,386 --> 00:08:52,426
随着时间自动流转


224
00:08:53,126 --> 00:08:54,806
为用户提供数据透明度


225
00:08:54,806 --> 00:08:56,256
使用范围标识符


226
00:08:56,756 --> 00:08:58,926
而不是真实身份


227
00:08:59,966 --> 00:09:01,366
甚至更高级的技术


228
00:09:01,366 --> 00:09:02,646
如差异隐私


229
00:09:03,396 --> 00:09:05,166
我今天没有时间来讨论


230
00:09:05,166 --> 00:09:06,396
列表上所有的


231
00:09:06,396 --> 00:09:08,476
可用技术 但我现在


232
00:09:08,476 --> 00:09:10,116
想集中讨论的是


233
00:09:10,116 --> 00:09:12,396
调整这些以适应


234
00:09:12,396 --> 00:09:13,216
你的用例


235
00:09:14,636 --> 00:09:16,676
你可以把它想成音乐中的混音


236
00:09:17,436 --> 00:09:18,556
如果你有一首曲目


237
00:09:18,556 --> 00:09:20,696
特别响亮或柔和


238
00:09:20,696 --> 00:09:22,366
则可能需要调整其他曲目


239
00:09:22,366 --> 00:09:24,686
以平衡一些元素并实现好的混音


240
00:09:25,776 --> 00:09:27,686
同样 有时你需要


241
00:09:27,686 --> 00:09:29,026
为特定功能


242
00:09:29,056 --> 00:09:30,626
收集大量数据


243
00:09:30,626 --> 00:09:32,986
但在那些情况下


244
00:09:33,236 --> 00:09:34,636
你需要确保你调整的


245
00:09:34,636 --> 00:09:36,946
这些隐私技术


246
00:09:36,946 --> 00:09:39,156
可以为用户创造出色的体验


247
00:09:40,416 --> 00:09:42,456
理想情况下 这些适用于


248
00:09:42,456 --> 00:09:44,086
存在数据的所有系统


249
00:09:44,086 --> 00:09:45,626
因而这些隐私保障


250
00:09:45,626 --> 00:09:47,796
会保持一致


251
00:09:47,866 --> 00:09:49,276
并会执行技术


252
00:09:49,276 --> 00:09:50,526
而非仅仅是关于你


253
00:09:50,526 --> 00:09:52,396
计划执行的政策声明


254
00:09:53,676 --> 00:09:55,316
但我知道这一切


255
00:09:55,316 --> 00:09:56,996
可能都有点抽象


256
00:09:56,996 --> 00:09:58,766
所以为了进一步说明


257
00:09:58,766 --> 00:10:00,096
我想分享一些 Apple


258
00:10:00,096 --> 00:10:01,976
在我们这种想法的基础上 建立的功能


259
00:10:03,516 --> 00:10:05,146
首先是活动分享


260
00:10:05,146 --> 00:10:07,176
你可以与朋友分享健身数据


261
00:10:08,206 --> 00:10:09,376
我作为一名隐私工程师


262
00:10:09,376 --> 00:10:11,246
我想尽可能地把所有


263
00:10:11,246 --> 00:10:12,856
这些滑块调到百分之百


264
00:10:12,856 --> 00:10:15,106
但对某个特定功能来说


265
00:10:15,106 --> 00:10:16,946
这并不总是可行的


266
00:10:17,406 --> 00:10:18,956
在这一情况下 你是在和


267
00:10:18,956 --> 00:10:21,626
朋友分享数据 所以他们知道你的名字


268
00:10:21,626 --> 00:10:22,646
他们知道这是谁的数据


269
00:10:23,676 --> 00:10:25,846
所以你不能去消除这个数据


270
00:10:25,906 --> 00:10:27,636
作为用例的一部分


271
00:10:27,636 --> 00:10:28,706
它已经非常明确


272
00:10:29,646 --> 00:10:31,556
因此 我们启用了


273
00:10:31,556 --> 00:10:32,976
其他隐私技术


274
00:10:32,976 --> 00:10:34,326
例如仅显示概要数据


275
00:10:34,746 --> 00:10:37,756
而非逐分统计数据


276
00:10:38,396 --> 00:10:38,716
或你跑步的确切位置


277
00:10:38,716 --> 00:10:40,176
我们还提供了很多关于你与谁


278
00:10:40,176 --> 00:10:41,906
共享以及何时分享的控制权


279
00:10:43,166 --> 00:10:45,716
如今 在 Apple News App 中


280
00:10:45,716 --> 00:10:47,496
我们使用未连接到


281
00:10:47,496 --> 00:10:49,126
Apple ID 的范围标识符


282
00:10:49,126 --> 00:10:50,816
收集分析数据


283
00:10:51,766 --> 00:10:53,246
这让我们在收集数据


284
00:10:53,246 --> 00:10:54,486
的精度方面拥有


285
00:10:54,486 --> 00:10:56,666
更大的灵活性


286
00:10:56,666 --> 00:10:58,006
但由于它仍是敏感信息


287
00:10:58,006 --> 00:10:59,416
我们仍会通过诸如


288
00:10:59,416 --> 00:11:00,896
能随时重置该标识符


289
00:11:00,896 --> 00:11:02,296
等方式提供控制权


290
00:11:03,516 --> 00:11:05,456
最后就是照片记忆


291
00:11:05,456 --> 00:11:07,126
你可能在设备上看到过这些


292
00:11:08,086 --> 00:11:10,346
这是通过面孔识别数据


293
00:11:10,346 --> 00:11:12,616
来识别图片中的人物


294
00:11:13,696 --> 00:11:15,266
它还使用精确的


295
00:11:15,266 --> 00:11:16,816
位置信息将相似的照片


296
00:11:16,816 --> 00:11:17,596
联系在一起


297
00:11:18,686 --> 00:11:20,776
这是非常敏感的数据


298
00:11:21,856 --> 00:11:23,466
因此 我们还有


299
00:11:23,466 --> 00:11:25,056
另一种隐私技术


300
00:11:26,146 --> 00:11:27,366
所有建立这些记忆


301
00:11:27,366 --> 00:11:30,036
的过程都在你的设备上完成


302
00:11:30,806 --> 00:11:31,976
顺便说一下 这是你的


303
00:11:31,976 --> 00:11:33,776
Toolbox 进行本地处理


304
00:11:33,776 --> 00:11:34,866
的绝妙工具


305
00:11:35,396 --> 00:11:39,196
那让我们来回顾一下这三大想法


306
00:11:39,856 --> 00:11:43,706
隐私关乎于人


307
00:11:43,706 --> 00:11:46,386
提出有关“应该”的问题


308
00:11:46,386 --> 00:11:48,596
还有将你的数据实践与使用案例


309
00:11:48,596 --> 00:11:49,496
结合起来


310
00:11:51,256 --> 00:11:52,816
剩下的时间


311
00:11:52,816 --> 00:11:53,996
我想谈谈作为


312
00:11:53,996 --> 00:11:55,136
开发人员可用的一些


313
00:11:55,136 --> 00:11:56,856
功能和 Tool


314
00:11:56,856 --> 00:11:58,746
以帮助大家在 App 中


315
00:11:58,746 --> 00:12:00,046
构建隐私


316
00:12:00,546 --> 00:12:02,216
这些可分为


317
00:12:02,216 --> 00:12:03,866
访问用户数据


318
00:12:03,866 --> 00:12:05,986
和更广义的数据管理


319
00:12:05,986 --> 00:12:06,656
两大类


320
00:12:07,896 --> 00:12:09,776
所以关于数据访问


321
00:12:09,826 --> 00:12:12,336
让我们先从 iOS 谈起


322
00:12:12,336 --> 00:12:13,656
本指南的大部分内容


323
00:12:13,656 --> 00:12:15,666
也同样适用于 tvOS 及 watchOS


324
00:12:16,186 --> 00:12:18,576
假设你正在构建一款


325
00:12:18,576 --> 00:12:20,266
iOS 版游戏


326
00:12:20,266 --> 00:12:21,916
玩家可以相互竞争


327
00:12:21,916 --> 00:12:22,746
你希望他们能上传


328
00:12:22,746 --> 00:12:24,896
照片以识别自己


329
00:12:25,816 --> 00:12:26,716
现在我们都已经看到了


330
00:12:26,756 --> 00:12:28,276
这些允许访问照片的


331
00:12:28,276 --> 00:12:30,386
许可提示 但如果我们只需


332
00:12:30,386 --> 00:12:32,906
用户点按按钮 选择一张照片


333
00:12:32,906 --> 00:12:34,436
然后立刻显示在 App 中


334
00:12:34,436 --> 00:12:36,646
这会不会很棒


335
00:12:37,276 --> 00:12:39,396
那么你今天就可以做到这一点


336
00:12:40,786 --> 00:12:41,796
因为我们为联系人


337
00:12:41,796 --> 00:12:43,366
相机和照片数据提供了


338
00:12:43,366 --> 00:12:45,056
一个叫做 out-of-process


339
00:12:45,056 --> 00:12:47,646
选择器的功能


340
00:12:47,646 --> 00:12:49,356
其中出现的选择器


341
00:12:49,356 --> 00:12:51,476
在你的 App 外运行


342
00:12:51,476 --> 00:12:52,786
因此与 App 共享的唯一信息


343
00:12:52,786 --> 00:12:55,096
就是用户选择的内容


344
00:12:56,196 --> 00:12:58,516
我们谈到了这些隐私技术


345
00:12:58,516 --> 00:13:00,256
这种情况下


346
00:13:00,256 --> 00:13:01,856
由于这不涉及对整个


347
00:13:01,856 --> 00:13:03,846
资料库的持续访问


348
00:13:04,416 --> 00:13:06,376
用户可通过选择


349
00:13:06,376 --> 00:13:08,266
共享的内容来进行控制


350
00:13:08,266 --> 00:13:09,596
所以我们不需要显示


351
00:13:09,916 --> 00:13:11,366
权限提示来要求他们作出关于


352
00:13:11,556 --> 00:13:13,066
是否继续访问的决定


353
00:13:14,476 --> 00:13:16,976
这是访问联系人


354
00:13:16,976 --> 00:13:18,696
相机和照片数据的


355
00:13:18,696 --> 00:13:19,586
默认方法


356
00:13:20,856 --> 00:13:22,176
有时你可能需要


357
00:13:22,176 --> 00:13:23,446
访问更大的资料库


358
00:13:23,446 --> 00:13:24,706
但在大多数情况下


359
00:13:24,706 --> 00:13:26,296
你会发现这对于


360
00:13:26,296 --> 00:13:29,186
很多 App 都非常有用


361
00:13:31,876 --> 00:13:33,356
这种情况下


362
00:13:33,356 --> 00:13:34,776
它只需几行代码


363
00:13:34,776 --> 00:13:35,816
即可正常运作


364
00:13:36,206 --> 00:13:37,326
这里你可以看到一些片段


365
00:13:37,326 --> 00:13:39,796
来了解如何在你的 App 中 调用这些选择器


366
00:13:40,656 --> 00:13:42,076
如我所说 有时你需要


367
00:13:42,076 --> 00:13:43,176
获取更多的数据


368
00:13:43,176 --> 00:13:44,766
但大家也知道


369
00:13:44,856 --> 00:13:46,026
设备上有各种


370
00:13:46,026 --> 00:13:47,726
受保护的资源


371
00:13:47,726 --> 00:13:50,686
但如果你使用


372
00:13:50,686 --> 00:13:52,426
这其中的一种 API


373
00:13:53,176 --> 00:13:54,256
那么在你发出


374
00:13:54,256 --> 00:13:55,336
请求访问之前需要


375
00:13:55,336 --> 00:13:56,646
记住三件事


376
00:13:57,986 --> 00:13:59,646
你只应请求访问


377
00:14:00,226 --> 00:14:01,836
你 App 中的


378
00:14:01,836 --> 00:14:04,326
用例所需的数据


379
00:14:05,056 --> 00:14:06,556
如果实际上你并不需要


380
00:14:06,556 --> 00:14:08,716
整个信息资料库


381
00:14:09,496 --> 00:14:10,586
比起请求访问


382
00:14:10,586 --> 00:14:11,806
你更应该寻找


383
00:14:11,806 --> 00:14:12,886
替代方案 比如说


384
00:14:12,886 --> 00:14:13,946
out-of-process 选择器


385
00:14:15,096 --> 00:14:16,296
你只应在需要时


386
00:14:16,296 --> 00:14:17,526
提出这些请求


387
00:14:17,526 --> 00:14:19,556
你想要它在


388
00:14:19,656 --> 00:14:21,936
用户做决定时出现


389
00:14:22,366 --> 00:14:23,636
而不是当他们一打开 App


390
00:14:23,636 --> 00:14:25,126
就被他们还不太明白的


391
00:14:25,126 --> 00:14:26,886
问题狂轰乱炸


392
00:14:27,886 --> 00:14:29,876
你希望提示符 处于环境之中


393
00:14:30,606 --> 00:14:32,356
但是 你也希望仅用


394
00:14:32,356 --> 00:14:33,946
API 即可获取状态


395
00:14:34,956 --> 00:14:36,406
请记住 用户可以随时


396
00:14:36,406 --> 00:14:38,046
撤销他们的决定


397
00:14:38,106 --> 00:14:39,546
你只想确保不论用户


398
00:14:39,546 --> 00:14:41,356
做出什么样的决定


399
00:14:41,356 --> 00:14:42,586
你的 App 仍然可以运行


400
00:14:44,326 --> 00:14:46,676
现在 当你请求访问时


401
00:14:46,676 --> 00:14:47,996
你需要将目标字符串


402
00:14:47,996 --> 00:14:50,366
或用法说明包含进来


403
00:14:51,446 --> 00:14:52,526
当我说你需要时


404
00:14:52,946 --> 00:14:54,466
是指这些都是必需的


405
00:14:55,596 --> 00:14:57,196
如果没有这些 你会发现


406
00:14:57,196 --> 00:14:58,406
App 审核时会拒绝你的 App


407
00:14:58,406 --> 00:14:59,716
实际上 如果你尝试访问


408
00:14:59,716 --> 00:15:00,946
没有目标字符串的数据


409
00:15:00,946 --> 00:15:02,916
便会发现你的 App 开始崩溃


410
00:15:04,356 --> 00:15:06,216
这是向用户提供


411
00:15:06,216 --> 00:15:07,306
透明度的一种方式


412
00:15:07,306 --> 00:15:08,686
当然这不是唯一的方法


413
00:15:09,546 --> 00:15:10,746
这里我并不是说让用户


414
00:15:10,746 --> 00:15:12,256
在点击真实内容之前去


415
00:15:12,256 --> 00:15:13,156
点开一个假提示符


416
00:15:13,816 --> 00:15:14,596
我的意思是 这应该是


417
00:15:14,596 --> 00:15:16,236
通知用户你的 App 中的


418
00:15:16,236 --> 00:15:18,846
数据流这一总体计划的一部分


419
00:15:19,496 --> 00:15:21,876
此处的目标是


420
00:15:21,876 --> 00:15:24,906
解释请求的原因


421
00:15:24,906 --> 00:15:26,526
以便用户可以根据


422
00:15:26,526 --> 00:15:28,716
其优先级做出知情的


423
00:15:28,716 --> 00:15:29,716
有效的决定


424
00:15:30,226 --> 00:15:32,946
我说解释请求的原因


425
00:15:33,676 --> 00:15:35,546
其实并不是这个意思


426
00:15:36,566 --> 00:15:37,996
过去我们已经看到了


427
00:15:37,996 --> 00:15:38,936
类似这样的目标字符串


428
00:15:38,936 --> 00:15:40,526
不过这还是会在


429
00:15:40,526 --> 00:15:41,996
App 审核中被拒绝


430
00:15:43,246 --> 00:15:44,876
我们通过自动验证


431
00:15:45,156 --> 00:15:47,086
和人工审核


432
00:15:47,086 --> 00:15:48,596
强制执行质量目标


433
00:15:48,596 --> 00:15:49,396
字符串的情况越来越多


434
00:15:50,766 --> 00:15:53,026
光有占位符或空白字符串


435
00:15:53,026 --> 00:15:54,286
是不够的


436
00:15:54,676 --> 00:15:56,316
正如说广告不会告诉


437
00:15:56,316 --> 00:15:57,016
用户太多内容


438
00:15:57,056 --> 00:15:58,796
只告诉用户需要位置信息


439
00:15:58,796 --> 00:15:59,696
无法让他们了其中解缘由


440
00:16:00,126 --> 00:16:01,776
即便是最后一个关于更相关


441
00:16:01,776 --> 00:16:03,286
的内容 虽然这这很好


442
00:16:03,316 --> 00:16:05,066
但它非常模糊


443
00:16:06,276 --> 00:16:07,586
当你看我们自己的地图 App 时


444
00:16:07,646 --> 00:16:09,376
当它请求使用位置时


445
00:16:09,376 --> 00:16:11,156
你会看到这些


446
00:16:11,586 --> 00:16:12,806
这些内容将显示在地图上


447
00:16:12,966 --> 00:16:14,676
并用于指示


448
00:16:14,676 --> 00:16:16,406
附近的搜索结果和旅行时间


449
00:16:17,356 --> 00:16:19,046
所以这就解释了这个


450
00:16:19,046 --> 00:16:21,116
请求的用例的原因


451
00:16:21,816 --> 00:16:24,666
它很具体 包括将


452
00:16:24,846 --> 00:16:26,206
如何使用数据的实例


453
00:16:26,686 --> 00:16:29,696
同样 TV App 也是 Apple 用你的


454
00:16:29,696 --> 00:16:31,446
位置来确定你所看到的


455
00:16:31,446 --> 00:16:32,566
内容的一款 App


456
00:16:32,566 --> 00:16:34,136
它还会向你展示


457
00:16:34,136 --> 00:16:35,716
你所在地区的实时游戏


458
00:16:35,716 --> 00:16:37,066
活动和新闻


459
00:16:37,636 --> 00:16:39,396
请记住 如果用户了解他们为什么


460
00:16:39,396 --> 00:16:41,136
会被要求提供这些数据


461
00:16:41,136 --> 00:16:42,206
他们也就更可能允许你


462
00:16:42,206 --> 00:16:44,596
获取这些数据


463
00:16:44,726 --> 00:16:45,946
如果你正在为地铁系统


464
00:16:45,946 --> 00:16:47,296
创建一个交通 App


465
00:16:47,596 --> 00:16:48,876
你可能会写这样的内容


466
00:16:49,146 --> 00:16:50,856
这款 App 使用你的位置


467
00:16:50,856 --> 00:16:52,486
来显示附近的站点和车站


468
00:16:52,526 --> 00:16:54,106
并允许你从当前


469
00:16:54,106 --> 00:16:55,206
的位置计划旅行


470
00:16:56,596 --> 00:16:59,056
再强调一次 解释你的用例


471
00:16:59,056 --> 00:17:01,396
使其具体化 并提供实例


472
00:17:01,916 --> 00:17:04,326
在设备上使用


473
00:17:04,326 --> 00:17:05,276
受保护资源时


474
00:17:05,276 --> 00:17:07,266
要记住一些其他的指导原则


475
00:17:08,076 --> 00:17:09,596
App 的功能应不需


476
00:17:09,596 --> 00:17:10,915
访问权限即可运行


477
00:17:11,596 --> 00:17:12,715
这可能会再次在


478
00:17:12,715 --> 00:17:15,326
App 审核过程中被拒绝


479
00:17:16,435 --> 00:17:17,856
你的 App 应具有


480
00:17:17,856 --> 00:17:19,925
回退机制 这样即使用户


481
00:17:19,925 --> 00:17:22,465
拒绝访问 它仍然可以正常工作


482
00:17:23,056 --> 00:17:24,356
比如说 使用该交通 App 时


483
00:17:24,356 --> 00:17:26,266
如果用户拒绝位置访问


484
00:17:26,266 --> 00:17:27,906
可以设置一个


485
00:17:27,906 --> 00:17:29,026
可允许手动输入位置


486
00:17:29,026 --> 00:17:30,786
并使用该位置的域


487
00:17:31,986 --> 00:17:33,586
你需要验证你的


488
00:17:33,586 --> 00:17:35,176
App 的授权状态


489
00:17:35,316 --> 00:17:37,046
以便确保用户


490
00:17:37,046 --> 00:17:38,776
仍可以访问


491
00:17:38,776 --> 00:17:41,106
而且要随时留意


492
00:17:41,106 --> 00:17:43,006
第三方的 STK


493
00:17:43,566 --> 00:17:45,136
同样 请求访问只应


494
00:17:45,136 --> 00:17:46,546
用于 App 的用例中


495
00:17:46,546 --> 00:17:48,336
如果包含更改


496
00:17:48,336 --> 00:17:49,656
或者要求设置


497
00:17:49,656 --> 00:17:50,726
目标字符串的资料库


498
00:17:50,726 --> 00:17:52,226
那么你可能应该


499
00:17:52,226 --> 00:17:53,686
寻找其他的解决方案


500
00:17:53,686 --> 00:17:55,026
或更新代码


501
00:17:55,566 --> 00:17:56,886
最后一点 你想一直


502
00:17:56,886 --> 00:17:58,106
提供透明度


503
00:17:58,106 --> 00:17:59,326
同样 这不应该是用户


504
00:17:59,326 --> 00:18:00,736
了解他们的数据


505
00:18:00,736 --> 00:18:02,846
是如何被使用的


506
00:18:02,846 --> 00:18:03,666
唯一机会


507
00:18:04,386 --> 00:18:05,616
你可以在 App Store 中


508
00:18:05,616 --> 00:18:07,086
App 所需的隐私政策


509
00:18:07,086 --> 00:18:08,746
中执行此操作


510
00:18:08,746 --> 00:18:09,876
也可以在整个 App 中


511
00:18:09,876 --> 00:18:11,506
提供链接和文稿


512
00:18:11,676 --> 00:18:13,606
以帮助用户了解他们的


513
00:18:13,606 --> 00:18:14,676
数据是如何被使用的


514
00:18:16,296 --> 00:18:18,356
现在这都是围绕这些类型的


515
00:18:18,616 --> 00:18:21,026
API 所提供的更广泛的指导


516
00:18:21,026 --> 00:18:22,206
但是我想在今年


517
00:18:22,206 --> 00:18:24,276
更改一些特定的内容


518
00:18:24,766 --> 00:18:27,406
首先是 WiFi 网络信息


519
00:18:27,926 --> 00:18:29,546
如果你的 App 用户查看


520
00:18:29,546 --> 00:18:30,946
并复制当前的网络信息


521
00:18:31,276 --> 00:18:33,046
你将需要在 Xcode 中增加权限


522
00:18:33,046 --> 00:18:35,566
即 AccessWiFiInformation


523
00:18:36,616 --> 00:18:37,996
这是你可以为自己的


524
00:18:37,996 --> 00:18:39,076
App 启用的功能


525
00:18:39,736 --> 00:18:41,666
比如 假如你的 App


526
00:18:41,666 --> 00:18:42,746
正在与硬件配件进行通信


527
00:18:42,746 --> 00:18:44,236
并且需要验证它们


528
00:18:44,236 --> 00:18:46,746
是否在同一网络上 那么你就需要照上述去做


529
00:18:47,296 --> 00:18:48,246
如果你没有使用这个用例


530
00:18:48,246 --> 00:18:50,196
你则不需要担心这个


531
00:18:50,196 --> 00:18:52,856
只有在你的 App 的功能 有需要时才需如此


532
00:18:53,296 --> 00:18:55,386
你可能也已听说过我们


533
00:18:55,386 --> 00:18:56,746
新的 Health Records API


534
00:18:57,726 --> 00:18:59,096
因为我们知道开发人员


535
00:18:59,096 --> 00:19:00,686
在使用健康数据开发 App 方面


536
00:19:00,686 --> 00:19:02,156
有很多很棒的想法


537
00:19:02,626 --> 00:19:03,916
但我们同时也意识到


538
00:19:04,106 --> 00:19:05,626
这是非常敏感的信息


539
00:19:06,616 --> 00:19:08,046
再次强调一下


540
00:19:08,046 --> 00:19:09,846
要调整隐私技术而不是


541
00:19:09,846 --> 00:19:11,156
仅简单地调整权限提示


542
00:19:11,536 --> 00:19:12,386
我们为用户提供了


543
00:19:12,386 --> 00:19:14,316
更高的透明度和更大的控制权


544
00:19:14,936 --> 00:19:16,166
大家可以看到一个目标字符串


545
00:19:16,166 --> 00:19:17,726
它指向隐私政策的链接


546
00:19:17,726 --> 00:19:18,706
该链接应是一个网址


547
00:19:18,706 --> 00:19:20,226
或在你的 App


548
00:19:20,346 --> 00:19:21,486
退出时可用


549
00:19:22,256 --> 00:19:23,676
你还可以控制要分享


550
00:19:23,676 --> 00:19:25,076
哪些类别的数据


551
00:19:25,076 --> 00:19:26,266
无论是当前的还是


552
00:19:26,266 --> 00:19:28,156
现在与将来的数据


553
00:19:28,156 --> 00:19:30,536
而且周二有一个会议 可供各位参考


554
00:19:30,536 --> 00:19:31,926
该会议将为如何在你的 App 中


555
00:19:31,926 --> 00:19:34,026
使用此 API 提供更多信息


556
00:19:35,516 --> 00:19:37,226
最后 对于 iOS 我想分享


557
00:19:37,226 --> 00:19:38,476
关于 Apple 是


558
00:19:38,476 --> 00:19:39,816
如何使用差分隐私技术


559
00:19:39,816 --> 00:19:41,526
来改进我们的 


560
00:19:41,526 --> 00:19:43,136
App 和设备的


561
00:19:44,016 --> 00:19:45,686
今年的第一个新用例


562
00:19:45,686 --> 00:19:47,446
是针对拼写错误的单词


563
00:19:47,776 --> 00:19:49,056
如果你正在打字


564
00:19:49,056 --> 00:19:51,166
并改正自己的拼写


565
00:19:51,166 --> 00:19:52,666
那么被选择加入设备分析


566
00:19:52,666 --> 00:19:54,566
的设备现在将捐赠这些


567
00:19:54,566 --> 00:19:55,706
词语的数据以帮助我们进一步


568
00:19:55,706 --> 00:19:57,386
改进我们的键盘算法


569
00:19:57,386 --> 00:19:58,616
同时保护用户隐私


570
00:19:59,376 --> 00:20:01,936
另外 关于 Safari 去年以来


571
00:20:01,936 --> 00:20:03,126
我们增加了这些设备


572
00:20:03,126 --> 00:20:04,716
向网址捐赠数据的能力


573
00:20:04,956 --> 00:20:06,946
从而提高浏览器的稳定性


574
00:20:06,946 --> 00:20:08,816
因为这些数据通常


575
00:20:08,816 --> 00:20:09,956
会导致崩溃


576
00:20:10,456 --> 00:20:12,226
这就是 iOS


577
00:20:12,226 --> 00:20:14,176
我们也来聊聊


578
00:20:14,176 --> 00:20:15,256
macOS 的情况


579
00:20:15,606 --> 00:20:17,086
因为大家可能听说过


580
00:20:17,436 --> 00:20:18,766
我们对 macOS 上


581
00:20:18,766 --> 00:20:20,356
受保护资源的处理方式


582
00:20:20,356 --> 00:20:21,236
做了一些更改


583
00:20:22,136 --> 00:20:24,546
这是一个扩展的数据类别列表


584
00:20:24,886 --> 00:20:26,576
其中有保护措施


585
00:20:26,576 --> 00:20:27,546
如今可以触发权限提示


586
00:20:27,546 --> 00:20:29,746
或通过系统偏好触发


587
00:20:29,746 --> 00:20:31,776
其中的一些选择性加入


588
00:20:32,816 --> 00:20:34,076
我只想强调一下这一内容


589
00:20:34,076 --> 00:20:35,136
这样如果你正在开发 Mac


590
00:20:35,136 --> 00:20:37,246
我希望你能了解


591
00:20:37,246 --> 00:20:38,716
其中的一些变化


592
00:20:38,716 --> 00:20:39,706
因为如果你要访问这些资源


593
00:20:39,706 --> 00:20:41,176
你需要知道它们会


594
00:20:41,176 --> 00:20:42,816
如何影响你的 App


595
00:20:43,896 --> 00:20:45,416
同样 由于这些可以触发


596
00:20:45,416 --> 00:20:46,486
权限提示 所以你想知道


597
00:20:46,486 --> 00:20:47,906
何时会发生这种情况


598
00:20:47,906 --> 00:20:49,446
以免用户感到惊讶


599
00:20:50,136 --> 00:20:51,786
请注意 这适用于


600
00:20:51,976 --> 00:20:54,006
所有第三方 App 程序


601
00:20:54,346 --> 00:20:56,666
包括 App Store


602
00:20:57,236 --> 00:20:59,746
之外的那些 就像使用 iOS 一样


603
00:20:59,746 --> 00:21:00,886
你还需为这些权限提示


604
00:21:00,886 --> 00:21:02,026
设置一个目标字符串


605
00:21:02,026 --> 00:21:03,456
并且周二还有一个会议


606
00:21:03,456 --> 00:21:04,676
它会详细介绍


607
00:21:04,676 --> 00:21:06,556
如何在你的 App 中


608
00:21:06,556 --> 00:21:07,696
使用这些内容


609
00:21:08,076 --> 00:21:11,306
现在谈谈网络数据访问


610
00:21:11,306 --> 00:21:13,066
我将把这一内容交给我的同事


611
00:21:13,066 --> 00:21:14,316
Brandon Van Ryswykon 来为大家讲解


612
00:21:14,316 --> 00:21:15,976
他是一名隐私工程师


613
00:21:16,516 --> 00:21:22,816
[ 掌声 ]


614
00:21:23,316 --> 00:21:23,826
>> 感谢 Joey


615
00:21:25,376 --> 00:21:27,046
网络是当今数据访问


616
00:21:27,046 --> 00:21:28,996
最大的场所之一


617
00:21:29,856 --> 00:21:31,546
如果你的业务需依靠


618
00:21:31,546 --> 00:21:33,286
在第三方网站上提供内容


619
00:21:33,286 --> 00:21:35,406
那么本节很适合你


620
00:21:37,336 --> 00:21:38,886
今年我们推出了


621
00:21:38,886 --> 00:21:40,186
Storage Access API


622
00:21:41,106 --> 00:21:43,086
Storage Access API 允许用户


623
00:21:43,086 --> 00:21:45,146
通过网络从嵌入的


624
00:21:45,146 --> 00:21:47,186
第三方来接入登录内容


625
00:21:47,186 --> 00:21:49,926
其中包括通过


626
00:21:50,126 --> 00:21:51,226
智能跟踪预防


627
00:21:51,226 --> 00:21:53,236
而被归类为


628
00:21:53,236 --> 00:21:54,676
追踪器的域


629
00:21:55,806 --> 00:21:57,556
现在 Storage Access API 只有在


630
00:21:57,616 --> 00:21:59,386
用户明确同意的情况下


631
00:21:59,426 --> 00:22:00,486
才能执行此操作


632
00:22:01,016 --> 00:22:02,646
我们来看一个例子


633
00:22:03,156 --> 00:22:05,696
这里用户正在浏览新闻网站


634
00:22:05,696 --> 00:22:08,576
news.example 并且该网站


635
00:22:08,576 --> 00:22:10,036
有来自 video.example 的


636
00:22:10,036 --> 00:22:11,786
嵌入式视频播放器


637
00:22:12,686 --> 00:22:14,676
用户在该视频网站上


638
00:22:14,676 --> 00:22:16,406
拥有付费帐户 并希望授予


639
00:22:16,406 --> 00:22:17,986
对其 Cookie 的


640
00:22:17,986 --> 00:22:20,666
嵌入式视频访问权限


641
00:22:20,666 --> 00:22:22,226
以便他们在阅读新闻时


642
00:22:22,226 --> 00:22:24,566
享受其订阅的好处


643
00:22:25,746 --> 00:22:26,676
为实现这一目标


644
00:22:26,776 --> 00:22:29,146
video.example 需要实现


645
00:22:29,206 --> 00:22:30,576
Storage Access API


646
00:22:32,866 --> 00:22:35,356
当用户点击其 App 中的


647
00:22:35,446 --> 00:22:37,636
播放按钮时 Video.example


648
00:22:37,636 --> 00:22:39,336
应向 Storage Access API


649
00:22:39,366 --> 00:22:40,486
添加一个调用


650
00:22:41,026 --> 00:22:42,976
这是一个异步 API


651
00:22:43,086 --> 00:22:44,976
它将返回一个承诺


652
00:22:44,976 --> 00:22:46,206
所以你应同时准备好


653
00:22:46,206 --> 00:22:47,856
处理成功及失败两种情况


654
00:22:48,396 --> 00:22:50,946
因此 当用户点击播放按钮时


655
00:22:50,946 --> 00:22:52,286
将会启动一个请求


656
00:22:52,286 --> 00:22:54,726
这将提示用户


657
00:22:54,876 --> 00:22:57,296
是否希望在


658
00:22:57,296 --> 00:22:58,146
嵌入 news.example 时


659
00:22:58,496 --> 00:23:00,776
授予对其 Cookie 的


660
00:23:00,776 --> 00:23:02,676
video.example


661
00:23:02,676 --> 00:23:03,486
访问权限


662
00:23:04,036 --> 00:23:06,896
如果用户点击允许


663
00:23:06,896 --> 00:23:07,916
该选择将变得棘手


664
00:23:07,916 --> 00:23:09,566
并且用户不会再被提示


665
00:23:09,566 --> 00:23:11,006
这个域的组合


666
00:23:12,156 --> 00:23:13,516
但是 如果用户点击拒绝


667
00:23:13,516 --> 00:23:14,776
该网站可以随时重新提示


668
00:23:15,186 --> 00:23:17,836
假设用户点击允许


669
00:23:18,766 --> 00:23:20,776
该请求将通过


670
00:23:20,776 --> 00:23:22,996
Cookies 将被返回到嵌入式网站


671
00:23:24,496 --> 00:23:25,376
这可能会产生


672
00:23:25,376 --> 00:23:27,106
跟踪风险 因为现在


673
00:23:27,106 --> 00:23:29,466
video.example 的用户


674
00:23:29,566 --> 00:23:31,956
已经登录了他们在


675
00:23:31,956 --> 00:23:34,026
这个新闻网站上的身份


676
00:23:35,446 --> 00:23:36,926
鉴于今年智能跟踪预防


677
00:23:37,016 --> 00:23:40,046
的变化 现在这一点尤为重要


678
00:23:41,016 --> 00:23:44,076
现在 除了通过 Storage Access API


679
00:23:44,076 --> 00:23:45,516
提供的用户同意书之外


680
00:23:45,516 --> 00:23:48,106
来自被归类为


681
00:23:48,106 --> 00:23:49,616
追踪器的域的 Cookie


682
00:23:49,616 --> 00:23:52,156
将立即进行分区


683
00:23:52,156 --> 00:23:54,526
并且永远不会在第三方环境中使用


684
00:23:55,916 --> 00:23:58,106
此外 如果用户


685
00:23:58,106 --> 00:23:59,566
30 天没有使用 这些


686
00:23:59,566 --> 00:24:01,236
Cookies 将被彻底清除


687
00:24:01,746 --> 00:24:05,346
这里重要的是


688
00:24:05,346 --> 00:24:07,466
通过 Storage Access API 访问


689
00:24:07,466 --> 00:24:09,296
将计入这 30 天的


690
00:24:09,296 --> 00:24:10,176
交互计时器


691
00:24:11,196 --> 00:24:12,316
这意味着在第三方环境中


692
00:24:12,346 --> 00:24:13,626
经常与你的


693
00:24:13,626 --> 00:24:15,786
网站互动的用户


694
00:24:16,016 --> 00:24:17,026
将保持登录状态


695
00:24:17,476 --> 00:24:20,576
因此 在这个序列中


696
00:24:20,776 --> 00:24:23,166
用户将在第一方


697
00:24:23,166 --> 00:24:24,956
及第三方环境中


698
00:24:24,956 --> 00:24:26,806
同时访问 video.example


699
00:24:26,806 --> 00:24:28,456
来登录到主页上


700
00:24:28,456 --> 00:24:30,206
并将其嵌入到网络中


701
00:24:31,056 --> 00:24:32,946
首先 用户在第一方


702
00:24:32,946 --> 00:24:34,736
环境中访问该网站


703
00:24:35,606 --> 00:24:37,416
请注意 由于用户


704
00:24:37,416 --> 00:24:39,206
当前正在与网站进行互动


705
00:24:39,296 --> 00:24:41,796
因此互动计时器的日期将变为零


706
00:24:43,476 --> 00:24:45,566
但是 当用户在


707
00:24:45,566 --> 00:24:47,166
浏览网页时与嵌入式


708
00:24:47,166 --> 00:24:50,406
内容互动时 计时器


709
00:24:50,406 --> 00:24:51,046
将会更新


710
00:24:52,466 --> 00:24:53,886
这意味着当用户


711
00:24:53,886 --> 00:24:56,146
在第一方环境中返回时


712
00:24:56,146 --> 00:24:58,316
尽管距用户上次访问


713
00:24:58,316 --> 00:25:00,426
video.example 的第一方环境


714
00:25:00,426 --> 00:25:04,026
的时间为 45 天


715
00:25:04,726 --> 00:25:06,136
但交互计时器的


716
00:25:06,136 --> 00:25:08,686
天数仍将读取 5 天


717
00:25:10,096 --> 00:25:11,926
采用 Storage Access API


718
00:25:11,926 --> 00:25:13,876
将允许用户保持登录状态


719
00:25:13,876 --> 00:25:16,816
并防止不必要的跟踪


720
00:25:17,306 --> 00:25:21,366
隐私不会因获取


721
00:25:21,366 --> 00:25:23,006
用户数据而结束


722
00:25:23,986 --> 00:25:25,336
你对用户的隐私


723
00:25:25,336 --> 00:25:27,256
始终负有责任


724
00:25:27,256 --> 00:25:29,246
以在数据的整个生命周期内


725
00:25:29,246 --> 00:25:30,146
保持用户的信任


726
00:25:31,046 --> 00:25:33,266
这里会开始进行数据管理


727
00:25:33,866 --> 00:25:36,646
现在我想给你提供


728
00:25:36,646 --> 00:25:38,206
四个数据管理


729
00:25:38,206 --> 00:25:39,466
领域的例子


730
00:25:39,466 --> 00:25:42,476
供你在开发 App 时参考


731
00:25:42,546 --> 00:25:43,406
首先是删除


732
00:25:44,356 --> 00:25:45,706
作为一名优秀的数据管理员


733
00:25:45,706 --> 00:25:47,176
需要尊重用户


734
00:25:47,176 --> 00:25:49,106
想从 App 中删除


735
00:25:49,106 --> 00:25:51,166
一些东西的意图


736
00:25:52,696 --> 00:25:54,476
因此 你应该识别到


737
00:25:54,476 --> 00:25:55,756
你的 App 外有数据流


738
00:25:55,846 --> 00:25:58,066
而且你应该确保


739
00:25:58,066 --> 00:26:00,236
这些系统在


740
00:26:00,236 --> 00:26:02,136
用户删除 App 内的


741
00:26:02,136 --> 00:26:03,686
某些内容时保持一致


742
00:26:04,346 --> 00:26:06,686
现在操作系统并不知道


743
00:26:06,686 --> 00:26:08,066
你的 App 内在进行什么


744
00:26:08,066 --> 00:26:09,776
所以如果你已经向 Siri 捷径


745
00:26:09,776 --> 00:26:11,586
捐赠了信息或者


746
00:26:11,586 --> 00:26:13,666
递交了通知


747
00:26:13,666 --> 00:26:14,966
你应确保当用户从你的


748
00:26:14,996 --> 00:26:16,786
App 内删除那些内容时


749
00:26:16,786 --> 00:26:18,486
你也删除了那些内容


750
00:26:20,516 --> 00:26:22,936
例如 如果用户删除了


751
00:26:22,936 --> 00:26:25,186
你 App 的联系人列表中的


752
00:26:25,186 --> 00:26:27,166
某个人 不应该建议


753
00:26:27,166 --> 00:26:28,686
用户使用你的 App


754
00:26:28,686 --> 00:26:30,646
来发送消息


755
00:26:30,786 --> 00:26:32,826
或者如果用户删除了


756
00:26:32,826 --> 00:26:34,756
消息传递 App


757
00:26:34,756 --> 00:26:36,166
中的某个线程


758
00:26:36,166 --> 00:26:37,836
你也应删除关于该内容的通知


759
00:26:37,836 --> 00:26:39,476
因为如果用户从


760
00:26:39,476 --> 00:26:40,906
他们认为已完全删除的线程上


761
00:26:40,906 --> 00:26:42,556
看到那些通知仍在自己的设备上


762
00:26:42,556 --> 00:26:43,806
会感到十分意外


763
00:26:44,316 --> 00:26:46,696
最后 如果你是


764
00:26:46,696 --> 00:26:48,316
密码管理员


765
00:26:48,316 --> 00:26:50,216
并且你已向新系统密码


766
00:26:50,216 --> 00:26:52,346
API 捐赠密码


767
00:26:52,346 --> 00:26:53,326
则应确保在用户从


768
00:26:53,326 --> 00:26:55,336
密码管理器中


769
00:26:55,336 --> 00:26:58,756
删除该网站时删除此信息


770
00:26:59,116 --> 00:27:00,786
现在数据管理工作


771
00:27:00,786 --> 00:27:02,156
会一直继续到设备跟踪


772
00:27:02,156 --> 00:27:03,576
这说明我将在今天的


773
00:27:03,576 --> 00:27:05,216
讨论中提供非常


774
00:27:05,216 --> 00:27:07,736
具体的内容


775
00:27:07,896 --> 00:27:09,546
你可能对使用你的


776
00:27:09,546 --> 00:27:11,666
App 的设备有些疑问


777
00:27:12,406 --> 00:27:14,476
比如 此设备是否


778
00:27:14,626 --> 00:27:17,806
已使用过免费试用版


779
00:27:17,966 --> 00:27:19,896
或者此设备以前


780
00:27:19,896 --> 00:27:21,926
是否被不文明用户


781
00:27:21,926 --> 00:27:23,106
或欺诈活动使用过


782
00:27:24,596 --> 00:27:26,026
我们提供了一款名为


783
00:27:26,026 --> 00:27:27,826
DeviceCheck 的 API


784
00:27:27,826 --> 00:27:28,986
能够让你回答这些问题


785
00:27:30,716 --> 00:27:32,426
DeviceCheck 允许你


786
00:27:32,426 --> 00:27:34,536
为每个设备设置两位数据


787
00:27:34,536 --> 00:27:36,616
这些数据由 Apple 存储


788
00:27:36,616 --> 00:27:38,666
并可通过签名返回给你


789
00:27:40,036 --> 00:27:42,076
这几位数据在设备重置


790
00:27:42,076 --> 00:27:44,966
或设备清除安装中一直存在


791
00:27:45,466 --> 00:27:47,626
而无需暴露独一无二


792
00:27:47,736 --> 00:27:49,816
的设备标识符


793
00:27:49,816 --> 00:27:51,246
这些数据就会为你提供关于


794
00:27:51,286 --> 00:27:54,116
设备历史记录的


795
00:27:54,116 --> 00:27:55,446
高完整性答案


796
00:27:58,016 --> 00:27:59,356
现在 你应采用 DeviceCheck9


797
00:27:59,356 --> 00:28:01,526
而不是依赖


798
00:28:01,646 --> 00:28:03,346
像数字指纹这样


799
00:28:03,346 --> 00:28:05,126
不受支持的设备跟踪机制


800
00:28:05,636 --> 00:28:08,406
正如 Craig 在主题演讲中


801
00:28:08,406 --> 00:28:10,546
所说的那样 我们将继续


802
00:28:10,546 --> 00:28:12,836
从我们的平台中删除熵


803
00:28:12,906 --> 00:28:14,166
并删除正在被滥用


804
00:28:14,166 --> 00:28:16,676
以标识用户独一无二身份的功能


805
00:28:17,896 --> 00:28:19,556
所以作为一名优秀的数据管理员


806
00:28:19,606 --> 00:28:20,966
你应该采用 DeviceCheck


807
00:28:20,966 --> 00:28:22,476
来解答你的问题


808
00:28:23,896 --> 00:28:25,166
除了要在自己的 App 中


809
00:28:25,166 --> 00:28:26,686
成为优秀的数据管理员之外


810
00:28:27,786 --> 00:28:28,736
你还应考虑到你的


811
00:28:28,936 --> 00:28:30,876
第三方合作伙伴


812
00:28:33,276 --> 00:28:35,426
你作为开发人员


813
00:28:35,426 --> 00:28:37,566
需要负责你的 App 中


814
00:28:37,696 --> 00:28:38,486
所有芯片的代码


815
00:28:39,516 --> 00:28:40,756
这包括你已编写的代码


816
00:28:40,756 --> 00:28:42,246
还包括你以资料库


817
00:28:42,246 --> 00:28:44,126
的形式导入的代码


818
00:28:45,206 --> 00:28:46,906
因此 你应该了解


819
00:28:46,906 --> 00:28:48,576
你导入的这些资料库


820
00:28:49,176 --> 00:28:51,386
如何访问或将设备上的


821
00:28:51,386 --> 00:28:52,636
用户数据传输出去


822
00:28:53,736 --> 00:28:54,976
这样 你就可以向用户


823
00:28:54,976 --> 00:28:56,186
提供完整的透明度


824
00:28:56,636 --> 00:28:58,306
不要只讨论你写的代码


825
00:28:58,666 --> 00:28:59,936
你应该描述其对用户


826
00:28:59,936 --> 00:29:01,426
隐私的全面影响


827
00:29:01,906 --> 00:29:04,226
正如 Joey 之前提到的


828
00:29:05,116 --> 00:29:06,806
你应该避免请求


829
00:29:06,806 --> 00:29:08,226
不必要的资源


830
00:29:09,266 --> 00:29:12,036
所以 比如说


831
00:29:12,036 --> 00:29:14,076
如果你要使用的资料库


832
00:29:14,076 --> 00:29:15,926
需要授权或访问某些


833
00:29:16,066 --> 00:29:17,876
其他敏感资源


834
00:29:17,876 --> 00:29:19,646
而这些敏感资源并非


835
00:29:19,646 --> 00:29:20,776
你试图从该资料库中


836
00:29:20,776 --> 00:29:22,896
获取的功能所需要的


837
00:29:22,896 --> 00:29:23,956
那么你应找到


838
00:29:23,956 --> 00:29:26,016
不同的资料库


839
00:29:26,016 --> 00:29:27,606
或联系该库的开发人员


840
00:29:27,606 --> 00:29:29,056
并要求他们删除


841
00:29:29,056 --> 00:29:30,246
敏感资源请求


842
00:29:30,926 --> 00:29:34,076
现在请思考一下假如


843
00:29:34,146 --> 00:29:36,246
第三方也能扩展到你的服务器终端


844
00:29:37,556 --> 00:29:39,356
你应该了解数据


845
00:29:39,356 --> 00:29:41,756
如何流向服务器接触的


846
00:29:41,756 --> 00:29:42,476
所有第三方


847
00:29:43,676 --> 00:29:45,796
这包括支持你的


848
00:29:45,796 --> 00:29:47,516
App 的整个系统


849
00:29:47,516 --> 00:29:49,976
不仅包括分析


850
00:29:49,976 --> 00:29:51,976
或广告网络


851
00:29:51,976 --> 00:29:54,016
还包括网络安全系统


852
00:29:54,116 --> 00:29:55,726
电子邮件提供商会向


853
00:29:55,796 --> 00:29:58,096
客户发送密码重置电子邮件


854
00:29:58,686 --> 00:30:01,446
或由第三方客户支持集成


855
00:30:01,916 --> 00:30:04,776
作为一名优秀的


856
00:30:04,836 --> 00:30:06,956
数据管理员意味着在考虑


857
00:30:06,956 --> 00:30:09,226
一起工作的合作伙伴时


858
00:30:09,226 --> 00:30:10,536
要对工作有整体规划


859
00:30:10,616 --> 00:30:11,556
并考虑到隐私问题


860
00:30:12,146 --> 00:30:15,466
现在我们来聊一个各位


861
00:30:15,466 --> 00:30:17,056
可能听说过的话题 即机器学习


862
00:30:18,186 --> 00:30:20,216
那么 在整个行业中


863
00:30:20,216 --> 00:30:21,476
关于机器学习的


864
00:30:21,856 --> 00:30:23,596
大部分讨论都是围绕着


865
00:30:23,596 --> 00:30:24,846
新算法的性能特点


866
00:30:24,846 --> 00:30:26,976
或基于云解决方案的


867
00:30:26,976 --> 00:30:27,936
的强大功能而言的


868
00:30:28,866 --> 00:30:30,246
虽然这些都是重要


869
00:30:30,246 --> 00:30:32,516
的技术发展 但正如


870
00:30:32,516 --> 00:30:33,416
Tim 在开幕致辞中


871
00:30:33,416 --> 00:30:35,776
所说的那样 我们所问的问题


872
00:30:35,776 --> 00:30:37,706
不是我们能做什么


873
00:30:38,366 --> 00:30:38,976
而是我们应该做什么


874
00:30:40,206 --> 00:30:42,346
如今这特别适用于


875
00:30:42,346 --> 00:30:44,256
机器学习 我们已经


876
00:30:44,256 --> 00:30:45,646
开展了多年的研究


877
00:30:47,496 --> 00:30:49,236
面容 ID 是以


878
00:30:49,366 --> 00:30:50,936
隐私友好的机器学习


879
00:30:50,936 --> 00:30:51,976
为核心构建的


880
00:30:53,416 --> 00:30:54,896
我们已通过使用


881
00:30:54,896 --> 00:30:57,336
LocalAuthentication API


882
00:30:57,336 --> 00:30:58,496
让你在 App 里添加 


883
00:30:58,496 --> 00:31:00,156
Face ID 验证变得简单容易


884
00:31:01,606 --> 00:31:03,126
你可以通过隐私友好的


885
00:31:03,126 --> 00:31:05,566
机器学习技术对


886
00:31:05,566 --> 00:31:07,806
Apple 现有的技术


887
00:31:08,206 --> 00:31:10,756
加以利用来建立强大的生物认证功能


888
00:31:12,676 --> 00:31:15,936
同样 ARKit


889
00:31:15,936 --> 00:31:16,996
使用机器学习来模拟


890
00:31:16,996 --> 00:31:18,966
用户设备周围的环境


891
00:31:19,846 --> 00:31:22,686
在 ARKit 2 中 你可以


892
00:31:22,686 --> 00:31:25,116
创建 保留 并在自己的


893
00:31:25,116 --> 00:31:26,436
App 中存储此环境地图


894
00:31:26,436 --> 00:31:29,396
但只有在你的功能


895
00:31:29,396 --> 00:31:31,176
需要时才能收集此地图


896
00:31:31,176 --> 00:31:33,686
因为 此数据可能非常敏感


897
00:31:34,166 --> 00:31:38,456
它包含用户周围的所有信息


898
00:31:38,556 --> 00:31:39,786
所以 如果你从设备上


899
00:31:39,786 --> 00:31:41,126
将其发出 应该是可预料的


900
00:31:41,646 --> 00:31:42,816
就好像你正在


901
00:31:42,816 --> 00:31:44,656
与一个共享对象一起玩游戏


902
00:31:45,766 --> 00:31:47,556
如果你使用 Game Center


903
00:31:47,556 --> 00:31:48,596
则可以利用支持


904
00:31:48,596 --> 00:31:51,156
端到端加密的


905
00:31:51,156 --> 00:31:52,896
MultipeerConnectivity API


906
00:31:53,636 --> 00:31:55,756
在设备之间传输这些模型


907
00:31:57,016 --> 00:32:00,256
现在 面容 ID 和 ARKit


908
00:32:00,256 --> 00:32:02,226
都是 Apple 所开发的


909
00:32:02,226 --> 00:32:04,036
功能的很好个例


910
00:32:04,116 --> 00:32:05,286
它们都依靠隐私友好的机器学习


911
00:32:05,286 --> 00:32:07,706
在你的 App 中也可以使用它


912
00:32:09,026 --> 00:32:10,766
但大家还想要更多的灵活性


913
00:32:12,156 --> 00:32:15,086
Create ML 和 Core ML 允许你


914
00:32:15,436 --> 00:32:17,996
在机器学习之上 创建自己的功能


915
00:32:20,356 --> 00:32:23,016
使用 Create ML 和 Core ML


916
00:32:23,016 --> 00:32:24,676
那么将设备上的机器学习


917
00:32:24,916 --> 00:32:26,816
添加到你的 App 中就会


918
00:32:26,816 --> 00:32:27,406
变得轻而易举


919
00:32:28,816 --> 00:32:30,686
Create ML 允许你


920
00:32:30,686 --> 00:32:32,286
直接在 Mac 上训练


921
00:32:32,286 --> 00:32:35,016
机器学习模型 而 Core ML


922
00:32:35,016 --> 00:32:36,586
让你可以直接在用户设备上


923
00:32:36,586 --> 00:32:38,936
使用此模型并对其进行评估


924
00:32:40,466 --> 00:32:42,206
这就避免了收集敏感用户


925
00:32:42,206 --> 00:32:44,376
数据来评估模型


926
00:32:45,136 --> 00:32:46,926
而且保护服务器上的


927
00:32:46,926 --> 00:32:48,886
敏感数据工作量十分巨大


928
00:32:49,496 --> 00:32:51,516
在用户的设备上评估模型


929
00:32:51,516 --> 00:32:53,546
可以降低服务器


930
00:32:53,546 --> 00:32:55,296
的安全要求


931
00:32:55,296 --> 00:32:56,706
并且可以降低违规风险


932
00:32:56,706 --> 00:32:58,256
因为你不需要在最初


933
00:32:58,256 --> 00:33:00,036
就掌握这些敏感信息


934
00:33:01,096 --> 00:33:03,566
现在 这两个 API


935
00:33:03,566 --> 00:33:05,816
使设备上的机器学习变得十分容易


936
00:33:08,896 --> 00:33:10,486
在开发像 Joey 之前


937
00:33:10,486 --> 00:33:12,086
所说的那些功能时


938
00:33:12,086 --> 00:33:13,256
大家应该已经


939
00:33:13,256 --> 00:33:15,926
提出了隐私问题


940
00:33:15,926 --> 00:33:17,656
这些问题都很好


941
00:33:17,656 --> 00:33:19,106
我和 Joey 每天都用这些


942
00:33:19,106 --> 00:33:21,776
在 Apple 做功能审核


943
00:33:21,976 --> 00:33:23,116
但是 机器学习要求你


944
00:33:23,116 --> 00:33:24,856
提出一组新的问题


945
00:33:24,916 --> 00:33:26,986
来解决相同的


946
00:33:27,096 --> 00:33:29,006
潜在隐私目标


947
00:33:30,256 --> 00:33:32,836
例如 你应该问我的模型


948
00:33:32,836 --> 00:33:35,296
是否显示了任何它所


949
00:33:35,296 --> 00:33:36,656
训练的数据的内容


950
00:33:38,386 --> 00:33:40,456
实际上是可以


951
00:33:40,536 --> 00:33:42,446
倒转机器学习模型


952
00:33:42,446 --> 00:33:44,516
并恢复大部分训练数据


953
00:33:45,766 --> 00:33:47,446
如果你用你的 App 开发一个模型


954
00:33:47,446 --> 00:33:49,276
这可能会导致意外的信息披露


955
00:33:49,276 --> 00:33:51,076
它可能倒转过来


956
00:33:51,076 --> 00:33:53,096
公开其训练过程中


957
00:33:53,096 --> 00:33:54,126
的用户信息


958
00:33:54,606 --> 00:33:58,006
现在 这是一个得到积极


959
00:33:58,076 --> 00:33:59,866
研究的学术领域


960
00:33:59,866 --> 00:34:01,066
你可以在我放在这张幻灯片上


961
00:34:01,066 --> 00:34:03,936
的论文中了解更多内容


962
00:34:04,446 --> 00:34:07,076
同样 你会问


963
00:34:07,076 --> 00:34:09,576
我是否可以超出用户期待


964
00:34:09,576 --> 00:34:10,196
来推断出更多内容


965
00:34:11,306 --> 00:34:13,456
用户可能会希望通过


966
00:34:13,456 --> 00:34:15,616
传感器数据对活动类型


967
00:34:15,616 --> 00:34:16,146
进行分类


968
00:34:17,326 --> 00:34:19,356
但是你可能会问


969
00:34:19,356 --> 00:34:21,136
我是否意外地编码了


970
00:34:21,626 --> 00:34:23,746
这个用户使用轮椅的事实


971
00:34:24,255 --> 00:34:26,206
能为轮椅使用者


972
00:34:26,206 --> 00:34:27,406
提供功能非常棒


973
00:34:28,436 --> 00:34:30,366
但这应让用户清楚并作为


974
00:34:30,366 --> 00:34:31,156
销售的功能亮点


975
00:34:32,596 --> 00:34:34,126
与一般的数据收集一样


976
00:34:34,126 --> 00:34:36,606
如果你通过机器学习


977
00:34:36,606 --> 00:34:38,396
启用新的用例


978
00:34:38,396 --> 00:34:39,246
那你也应获得新许可


979
00:34:39,735 --> 00:34:42,746
现在事实证明


980
00:34:42,746 --> 00:34:44,516
做两个小修改即可帮助


981
00:34:44,516 --> 00:34:45,556
改善这两个问题


982
00:34:47,116 --> 00:34:48,866
首先是确保你训练


983
00:34:48,866 --> 00:34:50,565
正确的数据


984
00:34:51,985 --> 00:34:53,146
这意味着对征得


985
00:34:53,146 --> 00:34:55,516
用户同意而收集的


986
00:34:55,516 --> 00:34:57,646
足够数量的不同输入信息


987
00:34:57,646 --> 00:34:58,546
进行训练


988
00:34:59,026 --> 00:35:02,226
其次是保持你的


989
00:35:02,226 --> 00:35:04,296
模型复杂度与你


990
00:35:04,296 --> 00:35:05,636
试图解决的目标成正比


991
00:35:07,146 --> 00:35:08,436
这两种技术都可以


992
00:35:08,436 --> 00:35:11,146
防止模型过度拟合


993
00:35:11,146 --> 00:35:12,916
这极可能导致模型倒转


994
00:35:12,916 --> 00:35:14,706
或得出意外结论


995
00:35:15,296 --> 00:35:17,936
如今在 Apple 我们相信


996
00:35:17,936 --> 00:35:19,426
考虑这些问题是开发


997
00:35:19,856 --> 00:35:21,326
用户可以信赖的产品


998
00:35:21,326 --> 00:35:23,116
的重要组成部分


999
00:35:24,436 --> 00:35:27,986
因为基本上隐私都是关乎于人的


1000
00:35:29,386 --> 00:35:31,226
这是关乎与用户建立


1001
00:35:31,266 --> 00:35:33,586
信任关系 并在处理


1002
00:35:33,586 --> 00:35:35,286
用户数据时 尊重他们


1003
00:35:36,636 --> 00:35:38,276
通过采用我们在


1004
00:35:38,276 --> 00:35:39,086
演讲中介绍的技术


1005
00:35:39,086 --> 00:35:41,656
你也可以开发出


1006
00:35:41,656 --> 00:35:44,516
具有强大功能和良好


1007
00:35:44,786 --> 00:35:45,776
隐私性的产品


1008
00:35:46,286 --> 00:35:49,406
总而言之 我希望大家能


1009
00:35:49,406 --> 00:35:51,546
采用我们关于隐私的三大想法


1010
00:35:52,416 --> 00:35:53,886
隐私关乎于人


1011
00:35:54,546 --> 00:35:56,456
问“应该”的问题


1012
00:35:56,456 --> 00:35:58,406
以及将数据实践


1013
00:35:58,406 --> 00:36:00,196
和你要解决的


1014
00:36:00,196 --> 00:36:01,796
用例结合起来


1015
00:36:02,386 --> 00:36:05,236
若想了解更多信息


1016
00:36:05,236 --> 00:36:07,116
请参加这些会议


1017
00:36:07,116 --> 00:36:08,276
我期待本次会议之后


1018
00:36:08,276 --> 00:36:10,056
还能在实验室与各位相见


1019
00:36:10,146 --> 00:36:11,616
以便我们通过更好的隐私技术


1020
00:36:11,736 --> 00:36:13,846
来帮你开发更出色的 App


1021
00:36:14,396 --> 00:36:14,756
谢谢大家


1022
00:36:15,516 --> 00:36:19,500
[ 掌声 ]

