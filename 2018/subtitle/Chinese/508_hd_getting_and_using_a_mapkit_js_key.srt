1
00:00:17,251 --> 00:00:21,722 line:0
（获取和使用
MAPKIT JS密钥）


2
00:00:22,256 --> 00:00:25,926 line:-2
欢迎来到演讲508
获取和使用MapKit JS密钥


3
00:00:26,360 --> 00:00:28,362 line:-2
我是MapKit JS团队的
Eric Gelinas


4
00:00:29,096 --> 00:00:29,930 line:-1
在这段视频里


5
00:00:30,364 --> 00:00:33,233 line:-2
我们将学习
MapKit JS授权如何工作


6
00:00:33,700 --> 00:00:35,769 line:-1
创建一个MapKit JS密钥


7
00:00:36,270 --> 00:00:37,905 line:-1
创建一个授权令牌


8
00:00:37,971 --> 00:00:39,339 line:-1
最后 我们将制作一张地图


9
00:00:40,841 --> 00:00:44,244 line:-2
让我们深入了解一下
授权在MapKit JS中的过程


10
00:00:44,811 --> 00:00:45,846 line:-1
（网络是纯文本）


11
00:00:45,913 --> 00:00:49,383 line:-2
你放在网上的任何内容（包括
MapKit JS）都是纯文本


12
00:00:49,883 --> 00:00:51,585 line:-1
网络的伟大之处之一在于


13
00:00:51,652 --> 00:00:54,788 line:-2
仅仅通过查看源代码
就可以学习他人技术


14
00:00:56,223 --> 00:00:58,625 line:0
只需打开网络检查器
看看它是如何完成的


15
00:00:59,193 --> 00:01:00,227 line:0
看到你喜欢的地图了吗？


16
00:01:00,661 --> 00:01:02,563 line:0
查看它的源代码
看看它是如何工作的


17
00:01:02,863 --> 00:01:04,197 line:-1
我就是这样来学习的


18
00:01:05,866 --> 00:01:07,668 line:-1
问题是 有时这意味着


19
00:01:07,734 --> 00:01:10,637 line:-1
你的API授权凭证可以被复制


20
00:01:10,704 --> 00:01:12,739 line:-1
而且未经你的许可而误用


21
00:01:13,674 --> 00:01:17,311 line:-2
未经授权的使用
可能会使你超出你的使用限制


22
00:01:18,212 --> 00:01:19,413 line:-1
一旦达到限制


23
00:01:19,680 --> 00:01:22,416 line:-1
你的网站可能无法再显示地图


24
00:01:23,183 --> 00:01:26,854 line:-2
MapKit JS授权系统
旨在对如何使用你的凭证


25
00:01:26,920 --> 00:01:28,522 line:-1
为你提供更多控制


26
00:01:29,089 --> 00:01:32,492 line:-1
你可以设置访问应该到期的时间


27
00:01:33,660 --> 00:01:35,963 line:-1
并限制对特定域名的访问


28
00:01:36,697 --> 00:01:39,333 line:-2
当然 网络的特点是
其他人仍然可以查看源代码


29
00:01:39,399 --> 00:01:41,034 line:-1
并用网络检查器读取有关信息


30
00:01:41,502 --> 00:01:44,204 line:-2
但是如果有人出于任何原因
而得到了你的身份


31
00:01:44,271 --> 00:01:46,139 line:-1
如何使用它将是有限制的


32
00:01:47,641 --> 00:01:51,712 line:-2
让我们来概括地谈谈
MapKit JS授权如何工作


33
00:01:52,913 --> 00:01:56,917 line:-2
你拿到了MapKit JS密钥后
要把它保存在一个安全的地方


34
00:01:57,551 --> 00:01:59,253 line:-1
绝不能通过网络共享


35
00:01:59,419 --> 00:02:01,588 line:-1
相反 你将创建有限制的令牌


36
00:02:01,822 --> 00:02:03,891 line:-1
并用你的密钥来签名


37
00:02:04,591 --> 00:02:06,260 line:-1
你就用这个令牌


38
00:02:06,326 --> 00:02:09,463 line:-2
通过MapKit JS API
进行授权


39
00:02:10,864 --> 00:02:14,067 line:-2
让我们看看如何创建
一个MapKit JS密钥


40
00:02:15,636 --> 00:02:17,437 line:-2
MapKit JS密钥
是你的身份凭证


41
00:02:17,504 --> 00:02:19,706 line:-2
与MapKit JS API
一起使用


42
00:02:20,541 --> 00:02:22,509 line:-2
这是一次性设置
具体过程是这样的


43
00:02:23,277 --> 00:02:24,545 line:-1
创建一个地图标识符


44
00:02:25,512 --> 00:02:29,216 line:-2
创建一个MapKit JS密钥
并将其与该标识符关联


45
00:02:30,384 --> 00:02:33,053 line:-2
然后下载你的密钥
并将其保存到一个安全的地方


46
00:02:34,655 --> 00:02:35,489 line:-1
在我们开始之前


47
00:02:35,889 --> 00:02:39,326 line:-2
请到
developer.apple.com/account登录


48
00:02:40,427 --> 00:02:43,664 line:-2
左侧菜单中 单击
Certificates 然后IDs


49
00:02:43,730 --> 00:02:44,765 line:-1
再Profiles


50
00:02:47,100 --> 00:02:49,870 line:0
我们的第一步是创建一个地图标识符


51
00:02:50,437 --> 00:02:53,774 line:0
这将在Apple Developer
网站中识别你的项目


52
00:02:54,341 --> 00:02:56,710 line:0
同时它也用于跟踪使用限制


53
00:02:58,979 --> 00:03:01,248 line:0
你可能想要对生产和开发环境


54
00:03:01,315 --> 00:03:03,550 line:0
创建不同的标识符


55
00:03:04,351 --> 00:03:05,853 line:0
要创建地图标识符


56
00:03:06,620 --> 00:03:09,089 line:0
从菜单中选择地图标识符


57
00:03:10,390 --> 00:03:12,492 line:0
点击右上角的 + 按钮


58
00:03:14,061 --> 00:03:15,729 line:0
给这个标识符一个说明


59
00:03:16,296 --> 00:03:18,565 line:0
这个说明应该是你显示给用户的


60
00:03:18,632 --> 00:03:19,867 line:0
网站的名称


61
00:03:21,368 --> 00:03:23,303 line:-1
给这个标识符一个独特的ID


62
00:03:23,904 --> 00:03:27,207 line:0
我们建议为此ID
使用反向域名风格命名


63
00:03:27,574 --> 00:03:29,877 line:0
它需要以字符串maps开始


64
00:03:32,079 --> 00:03:32,913 line:0
例如


65
00:03:33,280 --> 00:03:37,918 line:0
maps.com
yourdomainname.yourapp


66
00:03:40,487 --> 00:03:42,289 line:0
下面我们将创建一个
MapKit JS密钥


67
00:03:42,789 --> 00:03:45,425 line:0
此密钥是你与Apple之间的秘密


68
00:03:45,792 --> 00:03:47,828 line:0
绝不应该存储在前端代码中


69
00:03:48,161 --> 00:03:50,697 line:0
存入源代码管理
或与其他人共享


70
00:03:52,065 --> 00:03:56,870 line:0
首先点击左侧菜单中
Keys副标题下的All


71
00:03:58,405 --> 00:04:01,275 line:0
然后点击标题中的 + 图标


72
00:04:02,809 --> 00:04:04,778 line:0
下面给这个新的密钥命名


73
00:04:06,980 --> 00:04:09,917 line:0
再选择MapKit JS复选框


74
00:04:11,451 --> 00:04:13,253 line:0
然后点击Configure按钮


75
00:04:14,288 --> 00:04:16,023 line:0
现在你已经创建了一个新的密钥


76
00:04:16,990 --> 00:04:20,060 line:0
我们可以从Maps下拉菜单中


77
00:04:20,459 --> 00:04:23,096 line:0
将它与你之前创建的
地图标识符相关联


78
00:04:24,097 --> 00:04:27,568 line:0
地图标识符同时只能与一个密钥关联


79
00:04:29,036 --> 00:04:32,272 line:0
当你选择了你的地图标识符后
请点击Continue


80
00:04:34,007 --> 00:04:38,712 line:0
最后在出现提示时复查你的输入
然后单击Confirm


81
00:04:40,881 --> 00:04:42,549 line:0
现在可以下载你的密钥了


82
00:04:43,150 --> 00:04:44,384 line:0
点击Download按钮


83
00:04:44,451 --> 00:04:46,720 line:0
将你的授权密钥文件
保存到你的计算机


84
00:04:47,221 --> 00:04:49,189 line:0
你只能下载此文件一次


85
00:04:49,256 --> 00:04:50,791 line:0
请务必保存在安全的地方


86
00:04:51,191 --> 00:04:52,226 line:0
若这个文件找不到了


87
00:04:52,659 --> 00:04:54,094 line:0
你需要创建一个新的密钥


88
00:04:54,161 --> 00:04:55,562 line:0
然后撤销旧密钥


89
00:04:57,264 --> 00:04:58,131 line:-1
下载时


90
00:04:58,465 --> 00:05:00,868 line:-1
你的授权密钥文件看起来像这样


91
00:05:01,368 --> 00:05:02,402 line:-1
如我之前所说


92
00:05:02,970 --> 00:05:06,106 line:-2
此密钥旨在成为
你与Apple之间的秘密


93
00:05:07,174 --> 00:05:10,410 line:-2
这是你唯一能够下载
验证密钥文件的时间


94
00:05:10,911 --> 00:05:13,180 line:-2
我们建议你尽快将其
保存在安全的地方


95
00:05:14,581 --> 00:05:17,451 line:0
如果你丢失了钥匙或者钥匙被盗用


96
00:05:17,751 --> 00:05:20,287 line:0
你可以随时回到
Apple Developer网站


97
00:05:20,354 --> 00:05:21,889 line:0
来撤销它并创建一个新的密钥


98
00:05:25,292 --> 00:05:27,327 line:-2
你刚创建了一个
MapKit JS密钥


99
00:05:28,061 --> 00:05:30,063 line:-1
现在我们将创建授权令牌


100
00:05:30,364 --> 00:05:33,333 line:-2
可用于通过Web授权
MapKit JS


101
00:05:36,270 --> 00:05:39,673 line:-1
令牌创建时包含了开发人员的身份


102
00:05:39,907 --> 00:05:42,075 line:-1
并使用你的授权密钥文件进行签名


103
00:05:42,976 --> 00:05:44,545 line:-1
声明被添加到此令牌中


104
00:05:44,811 --> 00:05:48,348 line:-1
Apple用它来验证客户的授权


105
00:05:49,917 --> 00:05:53,387 line:-1
让我们深入了解如何制作授权令牌


106
00:05:55,322 --> 00:05:57,391 line:0
MapKit JS授权令牌


107
00:05:57,457 --> 00:06:02,796 line:0
基于JSON Web令牌
RFC 7519


108
00:06:02,963 --> 00:06:04,231 line:0
简称JWT


109
00:06:04,965 --> 00:06:09,036 line:0
这是专为传输通过网络的授权声明


110
00:06:09,102 --> 00:06:11,004 line:0
而设计的行业标准


111
00:06:12,172 --> 00:06:16,310 line:0
你可以在jwt.io上
找到关于此标准的更多信息


112
00:06:17,878 --> 00:06:21,748 line:0
你还可以找到用大多数编程语言写的


113
00:06:21,815 --> 00:06:23,450 line:0
用于签署JWT令牌的库


114
00:06:25,185 --> 00:06:28,655 line:-1
所有JWT令牌都由以下三部分组成


115
00:06:29,423 --> 00:06:33,894 line:-1
头部 有效载荷和签名


116
00:06:34,995 --> 00:06:38,832 line:-2
以句点进行分隔
并对每个Base64 URL编码


117
00:06:39,199 --> 00:06:42,636 line:-2
这就是一个可以
很容易传递给请求头的令牌


118
00:06:44,872 --> 00:06:47,641 line:-2
为你的授权令牌
我们有两种


119
00:06:47,708 --> 00:06:49,142 line:-1
推荐的JWT配置


120
00:06:49,610 --> 00:06:52,379 line:-1
短命令牌和长命令牌


121
00:06:54,781 --> 00:06:56,550 line:-1
让我们从短命令牌开始


122
00:06:57,050 --> 00:07:00,821 line:-2
这些授权令牌
可以最大程度地防止滥用


123
00:07:01,355 --> 00:07:05,092 line:-1
通过确保授权令牌如果从源代码复制


124
00:07:05,158 --> 00:07:06,627 line:-1
不能长期使用


125
00:07:07,895 --> 00:07:10,831 line:-1
这种方法要求你提供服务器端点


126
00:07:10,898 --> 00:07:13,233 line:-1
响应来自MapKit JS的请求


127
00:07:13,300 --> 00:07:14,935 line:-1
获取新的授权令牌


128
00:07:15,736 --> 00:07:18,238 line:-2
任何时候我们需要
在用户会话中进行授权


129
00:07:18,305 --> 00:07:21,542 line:-1
MapKit将从此端点刷新


130
00:07:23,377 --> 00:07:27,347 line:-1
首先有效载荷必须包含ISS声明


131
00:07:28,081 --> 00:07:30,751 line:-2
这是你的Apple Developer
Program ID


132
00:07:31,485 --> 00:07:32,920 line:-2
你可以到
Apple Developer网站


133
00:07:33,453 --> 00:07:36,657 line:-1
从帐户部分找到你的团队ID


134
00:07:37,791 --> 00:07:39,293 line:-1
IAT声明


135
00:07:39,626 --> 00:07:43,564 line:-1
这是以秒计算的授权令牌发出的时间


136
00:07:44,498 --> 00:07:45,766 line:-1
EXP声明


137
00:07:46,366 --> 00:07:50,137 line:-1
这是以秒计算的授权令牌到期时间


138
00:07:50,971 --> 00:07:53,740 line:-1
对于短期令牌 我们建议30分钟


139
00:07:54,541 --> 00:07:56,343 line:-1
最后 一个起源的声明


140
00:07:57,110 --> 00:08:01,882 line:-2
这可以通过匹配原始标题
来限制浏览器访问


141
00:08:03,083 --> 00:08:05,786 line:-1
虽然此声明是可选的 但我们建议


142
00:08:05,853 --> 00:08:08,889 line:-2
所有授权令牌都用它
尤其是在生产中


143
00:08:10,490 --> 00:08:15,062 line:-2
其次 你先前下载的
授权密钥文件内容


144
00:08:15,729 --> 00:08:19,666 line:-2
这个完整的文件
包括空白 页眉和页脚


145
00:08:20,000 --> 00:08:21,702 line:-1
应该用来签署此令牌


146
00:08:22,336 --> 00:08:26,139 line:-1
请参阅你的JWT签名库的文档


147
00:08:26,340 --> 00:08:28,942 line:-1
获取特定于你的编程语言的指令


148
00:08:30,143 --> 00:08:35,982 line:-2
最后 JWT令牌的标题部分
将包含KID声明


149
00:08:36,582 --> 00:08:38,852 line:-2
这是你的MapKit JS
密钥ID


150
00:08:39,586 --> 00:08:42,222 line:-1
注意这与你的地图标识符不同


151
00:08:43,289 --> 00:08:47,728 line:-1
TYP声明应该是字符串JWT


152
00:08:47,794 --> 00:08:50,230 line:-1
来识别这是一个JWT风格的标记


153
00:08:50,898 --> 00:08:54,935 line:-2
和一个ALG声明
这是使用的散列算法


154
00:08:55,602 --> 00:08:58,338 line:-1
这必须设置为ES256


155
00:09:00,073 --> 00:09:02,643 line:-1
当它传递给你的JWT签名库时


156
00:09:02,709 --> 00:09:05,212 line:-1
将输出一个JWT令牌


157
00:09:05,646 --> 00:09:07,748 line:-1
由MapKit JS使用


158
00:09:08,649 --> 00:09:10,450 line:-1
由于短命令在用户完成其会话之前


159
00:09:10,517 --> 00:09:12,486 line:-1
可能会过期


160
00:09:12,819 --> 00:09:15,956 line:-2
你的服务器需为MapKit JS
提供一个端点


161
00:09:16,023 --> 00:09:18,325 line:-1
将响应新令牌的请求


162
00:09:18,926 --> 00:09:22,329 line:-2
稍后我将向你展示如何使
MapKit JS知道你的端点


163
00:09:22,396 --> 00:09:24,932 line:-2
但现在 我已经创建了
一个快速的JS路线


164
00:09:24,998 --> 00:09:27,201 line:-1
这里是一个端点的例子


165
00:09:28,602 --> 00:09:31,438 line:-2
每次调用时 这条路线只是返回
一个新的访问令牌


166
00:09:31,505 --> 00:09:34,741 line:-1
设置为在1800秒或30分钟内


167
00:09:35,175 --> 00:09:36,276 line:-1
过期


168
00:09:36,944 --> 00:09:38,946 line:-1
无论你的令牌是否到期


169
00:09:39,279 --> 00:09:41,381 line:-1
贯穿用户的会话


170
00:09:41,448 --> 00:09:43,250 line:-1
任何时候需要授权


171
00:09:43,317 --> 00:09:44,985 line:-1
MapKit JS会调用该端点


172
00:09:46,787 --> 00:09:49,289 line:-1
由于你的端点需要返回一个新的令牌


173
00:09:49,356 --> 00:09:50,457 line:-1
每次调用时


174
00:09:50,858 --> 00:09:53,160 line:-1
你需要让浏览器知道不要缓存


175
00:09:53,861 --> 00:09:56,330 line:-1
你可以通过设置缓存控制标题来做到


176
00:09:57,831 --> 00:09:58,899 line:-1
如果设置正确


177
00:09:59,166 --> 00:10:01,802 line:-2
你应该在你的服务器上
有一个返回令牌的路线


178
00:10:01,869 --> 00:10:03,203 line:-1
看起来像这样


179
00:10:05,539 --> 00:10:07,007 line:-1
长寿命的标记是不同的


180
00:10:07,508 --> 00:10:09,343 line:-1
其到期时间设定得远得多


181
00:10:09,910 --> 00:10:12,179 line:-2
你可以在很长一段时间
对许多请求


182
00:10:12,246 --> 00:10:13,680 line:-1
使用相同的标记


183
00:10:14,448 --> 00:10:16,850 line:-1
这种类型的令牌不需要服务器


184
00:10:17,317 --> 00:10:19,586 line:-1
因为令牌在用户的会话期间


185
00:10:19,653 --> 00:10:20,787 line:-1
不易过期


186
00:10:22,022 --> 00:10:25,759 line:-2
出于这个原因
它可以很容易地在静态网站上


187
00:10:25,826 --> 00:10:27,294 line:-1
或在开发环境中使用


188
00:10:27,995 --> 00:10:31,031 line:-1
你可以根据你的发布周期


189
00:10:31,431 --> 00:10:32,766 line:-1
同步调整令牌的到期和续订


190
00:10:33,300 --> 00:10:36,103 line:-1
我们强烈建议你在长寿命的令牌中


191
00:10:36,170 --> 00:10:37,271 line:-1
附上来源声明


192
00:10:37,671 --> 00:10:38,839 line:-1
让我们看看这如何完成


193
00:10:40,374 --> 00:10:41,408 line:-1
在这个例子中


194
00:10:41,708 --> 00:10:44,711 line:-1
我们设置了长达6个月的长期令牌


195
00:10:45,345 --> 00:10:46,413 line:-1
如我之前所说


196
00:10:46,480 --> 00:10:48,782 line:-1
你可以根据你的app的需要改动


197
00:10:49,349 --> 00:10:52,452 line:-1
例如 如果你团队的发布周期是两周


198
00:10:52,953 --> 00:10:55,522 line:-1
你可以设置你的期望与之同步


199
00:10:56,123 --> 00:10:58,125 line:-1
甚至加几个星期作为缓冲


200
00:10:59,593 --> 00:11:03,330 line:-1
无论什么情况下 建议设置原始声明


201
00:11:03,497 --> 00:11:05,933 line:-1
尤其是长期到期的令牌


202
00:11:06,233 --> 00:11:07,768 line:-1
这是你防止滥用你的身份的


203
00:11:07,835 --> 00:11:09,469 line:-1
最强的防守


204
00:11:11,238 --> 00:11:13,807 line:-1
现在令牌在手 我们准备做一张地图


205
00:11:15,576 --> 00:11:18,579 line:-2
最简单的例子就是
创建一个HTML页面


206
00:11:19,213 --> 00:11:24,551 line:-2
包括链接到Apple CDN上的
MapKit JS的脚本标记


207
00:11:26,053 --> 00:11:27,855 line:0
记得吗 刚才我说我会展示


208
00:11:27,921 --> 00:11:30,891 line:0
如何使MapKit JS
知道你的令牌端点？


209
00:11:32,059 --> 00:11:34,528 line:0
这发生在初始化
MapKit JS过程中


210
00:11:34,862 --> 00:11:36,797 line:0
当你提供回调函数时


211
00:11:37,531 --> 00:11:38,799 line:0
对于短命令牌


212
00:11:39,032 --> 00:11:41,768 line:0
MapKit JS
将在整个用户会话过程


213
00:11:41,935 --> 00:11:43,704 line:0
根据需要获取新的令牌


214
00:11:46,340 --> 00:11:50,010 line:0
请注意 当MapKit JS
调用你的回调函数时


215
00:11:50,477 --> 00:11:51,812 line:0
它会传递一个函数


216
00:11:52,346 --> 00:11:54,248 line:0
在我们的例子里我们调用Done


217
00:11:55,115 --> 00:11:57,417 line:0
用你的新令牌调用这个函数


218
00:11:57,751 --> 00:12:01,288 line:0
以允许MapKit JS
继续进行授权过程


219
00:12:03,323 --> 00:12:05,025 line:0
如果你使用的是长寿命的令牌


220
00:12:05,325 --> 00:12:07,394 line:0
只需在授权回调函数的主体中


221
00:12:07,461 --> 00:12:10,330 line:0
立即调用Done


222
00:12:11,131 --> 00:12:13,934 line:0
任何时候需要刷新其授权时


223
00:12:14,234 --> 00:12:17,538 line:0
MapKit JS
将使用相同的长命令标记


224
00:12:19,573 --> 00:12:22,976 line:0
最后 为地图设置一个地图框和中心


225
00:12:25,879 --> 00:12:28,749 line:-2
让我们启动我们的服务器
并观察这些步骤


226
00:12:31,151 --> 00:12:32,853 line:0
如果一切设置正确


227
00:12:33,153 --> 00:12:34,821 line:0
你的浏览器应显示一个地图


228
00:12:36,657 --> 00:12:39,693 line:0
如果你在网络检查器中使用短命令牌


229
00:12:40,093 --> 00:12:43,297 line:0
你应该保证服务器端点被调用


230
00:12:43,764 --> 00:12:45,566 line:0
返回授权令牌


231
00:12:46,900 --> 00:12:49,369 line:0
既然MapKit JS有了授权


232
00:12:49,570 --> 00:12:50,504 line:0
它会完成其余的工作


233
00:12:51,104 --> 00:12:53,941 line:0
任何时候它需要一个新的令牌


234
00:12:54,208 --> 00:12:55,609 line:0
MapKit JS
会从你的路线请求


235
00:12:57,878 --> 00:13:01,114 line:-2
现在你知道了
MapKit JS授权如何工作


236
00:13:02,115 --> 00:13:04,151 line:-2
你也知道了如何创建一个
MapKit JS密钥


237
00:13:05,319 --> 00:13:07,521 line:-1
创建一个授权令牌


238
00:13:07,855 --> 00:13:12,125 line:-1
以及如何用你的新令牌做一个地图


239
00:13:14,294 --> 00:13:18,465 line:-2
请记住 获取你MapKit JS
密钥并将它存储在安全的地方


240
00:13:19,132 --> 00:13:21,635 line:-1
只能通过网络发送授权令牌


241
00:13:22,836 --> 00:13:24,371 line:-1
如果某个密钥泄露


242
00:13:24,805 --> 00:13:27,140 line:-1
你只要创建并更新你的网站


243
00:13:27,541 --> 00:13:30,210 line:-1
然后在Apple Developer网站上


244
00:13:30,277 --> 00:13:31,245 line:-1
撤消旧密钥


245
00:13:32,846 --> 00:13:33,981 line:0
想要了解更多信息


246
00:13:34,681 --> 00:13:41,688 line:0
请访问
developer.apple.com/wwdc18/508


247
00:13:43,557 --> 00:13:44,725 line:0
看看我们的演讲


248
00:13:44,992 --> 00:13:46,493 line:0
“引入MapKit JS”


249
00:13:46,560 --> 00:13:49,730 line:0
星期二下午5点在行政宴会厅举行


250
00:13:50,864 --> 00:13:51,698 line:-1
谢谢

