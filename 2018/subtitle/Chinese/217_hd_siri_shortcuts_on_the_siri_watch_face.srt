1
00:00:07,516 --> 00:00:15,516
[ 音乐 ]


2
00:00:16,516 --> 00:00:25,936
[ 掌声 ]


3
00:00:26,436 --> 00:00:27,406
>> 大家好


4
00:00:27,646 --> 00:00:29,246
我叫 Paul Salzman


5
00:00:29,246 --> 00:00:30,636
我和我的朋友 Josh Ford


6
00:00:30,636 --> 00:00:31,706
今天非常兴奋能来到这里


7
00:00:32,016 --> 00:00:33,066
和各位谈谈 Siri 表盘上的


8
00:00:33,066 --> 00:00:34,626
Siri 捷径服务


9
00:00:36,316 --> 00:00:37,556
去年 我们发布了 Siri 表盘


10
00:00:37,556 --> 00:00:39,276
每当抬起手腕


11
00:00:39,276 --> 00:00:40,486
它就会根据用户


12
00:00:40,486 --> 00:00:41,686
使用习惯的相关性


13
00:00:41,686 --> 00:00:43,056
使信息可以快速浏览


14
00:00:43,056 --> 00:00:43,516
并拥有触控操作


15
00:00:44,376 --> 00:00:45,786
这意味着我们的用户


16
00:00:45,786 --> 00:00:47,326
不需任何配置


17
00:00:47,676 --> 00:00:48,646
即可全天接收到


18
00:00:48,646 --> 00:00:50,436
随时更新的内容


19
00:00:51,746 --> 00:00:53,046
现在 在 watchOS 5 中


20
00:00:53,046 --> 00:00:54,466
我们非常兴奋可以将


21
00:00:54,466 --> 00:00:55,936
你的 App 作为数据源


22
00:00:55,936 --> 00:00:56,766
添加到 Siri 表盘上


23
00:00:58,196 --> 00:00:59,666
你提供的捷径


24
00:00:59,666 --> 00:01:00,566
将出现在表盘上


25
00:01:00,566 --> 00:01:01,376
或者说 在这些称之为


26
00:01:01,376 --> 00:01:01,876
卡片的东西上


27
00:01:02,276 --> 00:01:03,436
当用户轻触这些卡片时


28
00:01:03,436 --> 00:01:04,825
它就会执行


29
00:01:04,825 --> 00:01:05,916
相应的捷径操作


30
00:01:06,256 --> 00:01:07,486
比如它可以


31
00:01:07,996 --> 00:01:09,036
进入到你的 App 内


32
00:01:09,086 --> 00:01:12,246
具体的内容界面中去


33
00:01:12,246 --> 00:01:13,006
如果你的捷径支持后台运行


34
00:01:13,006 --> 00:01:15,216
我们还可以直接


35
00:01:15,216 --> 00:01:16,566
在表盘上运行这个内联程序


36
00:01:17,586 --> 00:01:18,396
也就是说


37
00:01:18,396 --> 00:01:19,496
用户不用离开表盘


38
00:01:19,496 --> 00:01:21,446
就能使用 App 的功能


39
00:01:22,006 --> 00:01:23,146
让我们来看看


40
00:01:23,146 --> 00:01:24,276
我们今天要讨论的内容


41
00:01:24,596 --> 00:01:25,686
我们将从内容是


42
00:01:25,686 --> 00:01:27,926
如何在 Siri 表盘上显示开始


43
00:01:29,246 --> 00:01:30,366
然后 我们会讨论


44
00:01:30,366 --> 00:01:32,056
Relevant Shortcut API


45
00:01:32,056 --> 00:01:33,266
即用来给 Siri 表盘


46
00:01:33,266 --> 00:01:34,486
提供内容的 API 


47
00:01:35,846 --> 00:01:37,166
我们也会提到如何在你的


48
00:01:37,166 --> 00:01:38,636
iOS App 内


49
00:01:38,636 --> 00:01:39,926
使用 API 来为你的


50
00:01:39,926 --> 00:01:40,756
Siri 表盘提供内容


51
00:01:40,826 --> 00:01:42,416
之后我会把场地交给 Josh


52
00:01:42,416 --> 00:01:43,896
让他为大家介绍预测引擎


53
00:01:43,896 --> 00:01:45,536
并让各位了解


54
00:01:45,536 --> 00:01:46,866
如何最好的利用这些 API


55
00:01:46,866 --> 00:01:48,346
来为你的 App


56
00:01:48,346 --> 00:01:49,066
提供服务


57
00:01:49,666 --> 00:01:52,536
让我们来看看


58
00:01:52,536 --> 00:01:53,726
Siri 表盘如何显示内容


59
00:01:55,246 --> 00:01:56,116
Siri 表盘上的所有内容


60
00:01:56,116 --> 00:01:57,716
都是根据它和用户的相关性


61
00:01:57,716 --> 00:01:58,206
来进行排序的


62
00:01:58,836 --> 00:01:59,746
某条内容和用户的相关性越高


63
00:01:59,746 --> 00:02:01,306
它就会出现在


64
00:02:01,306 --> 00:02:02,386
表盘的更上方


65
00:02:03,076 --> 00:02:04,196
我们通过整合系统中


66
00:02:04,196 --> 00:02:05,936
大量的输入信息


67
00:02:05,936 --> 00:02:07,286
来计算相关性 比如


68
00:02:07,286 --> 00:02:08,776
当前的时间 用户的位置


69
00:02:08,776 --> 00:02:10,446
他们的日常活动


70
00:02:10,446 --> 00:02:11,546
以及他们与给定数据源的


71
00:02:11,546 --> 00:02:12,136
互动情况


72
00:02:13,546 --> 00:02:14,596
你们将为我们提供


73
00:02:14,596 --> 00:02:15,946
相关的捷径内容


74
00:02:16,366 --> 00:02:18,346
而相应的捷径


75
00:02:18,346 --> 00:02:19,576
会用于自定义 UI


76
00:02:19,576 --> 00:02:20,626
并能提示我们


77
00:02:20,626 --> 00:02:21,786
何时来分配你们的内容


78
00:02:22,996 --> 00:02:24,796
现在 我们将根据


79
00:02:24,796 --> 00:02:25,876
用户过去和


80
00:02:25,876 --> 00:02:27,426
捷径的互动


81
00:02:27,426 --> 00:02:29,106
获得内部的相关性


82
00:02:29,646 --> 00:02:31,036
但是 你通常会有更多


83
00:02:31,036 --> 00:02:32,116
的明智建议


84
00:02:32,406 --> 00:02:33,146
尤其是显示


85
00:02:33,146 --> 00:02:34,606
可快速浏览的消息时


86
00:02:34,606 --> 00:02:35,626
或者你想推荐一个


87
00:02:35,656 --> 00:02:37,206
还没被用户使用过的捷径


88
00:02:37,306 --> 00:02:38,466
所以 你可以向我们提供


89
00:02:38,466 --> 00:02:39,466
叫做 Relevance Providers 的东西


90
00:02:40,786 --> 00:02:41,866
而且 和第一方数据源一样


91
00:02:41,866 --> 00:02:43,756
用户可以通过


92
00:02:43,786 --> 00:02:46,036
iOS Watch App


93
00:02:46,036 --> 00:02:47,536
在 Siri 表盘上的定制页面


94
00:02:47,586 --> 00:02:49,126
停用或重新激活你的数据源


95
00:02:49,876 --> 00:02:51,726
在我们深入讨论


96
00:02:51,726 --> 00:02:52,736
Relevant Shortcut API 前


97
00:02:52,736 --> 00:02:55,146
我们想确认相应的捷径


98
00:02:55,146 --> 00:02:56,676
在表盘上运行与显示的同时


99
00:02:56,676 --> 00:02:58,216
没有和它们的


100
00:02:58,396 --> 00:02:59,916
相关性算法相冲突


101
00:03:00,766 --> 00:03:01,736
所以 当我们开发时


102
00:03:01,766 --> 00:03:02,796
我们想进入到 iOS


103
00:03:02,796 --> 00:03:04,096
设置 App 的内部


104
00:03:04,096 --> 00:03:06,296
进入开发者界面


105
00:03:06,296 --> 00:03:07,456
找到捷径测试部分


106
00:03:07,996 --> 00:03:10,456
这样我们可以确保


107
00:03:10,456 --> 00:03:11,906
最近提供的相关


108
00:03:11,906 --> 00:03:13,376
捷径会出现在表盘的最上方


109
00:03:13,376 --> 00:03:15,216
这是通过允许 “Show Recent Shortcuts”


110
00:03:15,216 --> 00:03:16,626
选项来实现的


111
00:03:19,796 --> 00:03:21,616
此外 随着我们更多的在


112
00:03:21,616 --> 00:03:23,146
iOS App 内采用


113
00:03:23,146 --> 00:03:25,216
此 API 我们可以


114
00:03:25,216 --> 00:03:26,666
通过点击 “Force Sync Shortcut


115
00:03:26,666 --> 00:03:28,346
to Watch” 按钮来将


116
00:03:28,346 --> 00:03:30,816
和 iOS 设备相关的捷径


117
00:03:30,816 --> 00:03:31,866
定期和 Watch 同步


118
00:03:32,286 --> 00:03:34,616
所以 现在让我们来谈谈


119
00:03:34,616 --> 00:03:36,426
Relevant Shortcut


120
00:03:36,426 --> 00:03:38,286
Relevant Shortcut 的核心就是捷径


121
00:03:39,356 --> 00:03:40,706
捷径包含着


122
00:03:40,706 --> 00:03:42,016
你的 App 内


123
00:03:42,016 --> 00:03:43,116
想让用户更易


124
00:03:43,116 --> 00:03:44,606
获得的核心功能


125
00:03:45,336 --> 00:03:46,126
并且 他们能通过


126
00:03:46,126 --> 00:03:47,336
对 Siri 说出关键词


127
00:03:47,336 --> 00:03:49,476
或者轻触不同的系统 UI 来访问捷径


128
00:03:49,476 --> 00:03:51,236
而在 watchOS 中


129
00:03:51,446 --> 00:03:52,376
那就是在 Siri 表盘


130
00:03:52,376 --> 00:03:53,606
上的一张卡片


131
00:03:54,196 --> 00:03:55,626
今年有很多


132
00:03:55,626 --> 00:03:56,636
关于如何制作出色的


133
00:03:56,686 --> 00:03:57,596
捷径的深入讨论


134
00:03:57,656 --> 00:03:58,896
这都将给我们一个高层次的概况


135
00:03:58,896 --> 00:04:00,526
为我们展现它们是如何


136
00:04:00,526 --> 00:04:01,526
在 watchOS 上工作的


137
00:04:01,646 --> 00:04:02,946
我非常推荐大家去看一看


138
00:04:02,946 --> 00:04:04,246
"Introduction to Siri Shortcuts"


139
00:04:04,276 --> 00:04:05,716
和 "Building for Voice with


140
00:04:05,936 --> 00:04:07,356
Siri Shortcuts" 它们是


141
00:04:07,356 --> 00:04:08,626
在这次大会早些时候进行的演讲


142
00:04:10,236 --> 00:04:11,646
捷径可以由


143
00:04:11,646 --> 00:04:12,506
两种东西来组成


144
00:04:13,306 --> 00:04:14,686
其中之一是 NSUserActivity


145
00:04:14,716 --> 00:04:15,836
它代表你在 App 内


146
00:04:15,836 --> 00:04:16,706
想要让用户


147
00:04:16,706 --> 00:04:19,096
快速返回的任务


148
00:04:19,096 --> 00:04:20,796
或是代用户


149
00:04:20,796 --> 00:04:22,166
执行的任务


150
00:04:23,126 --> 00:04:23,886
如今 Intent 十分强大


151
00:04:23,886 --> 00:04:24,876
因为它们可以


152
00:04:24,876 --> 00:04:26,076
支持后台运行


153
00:04:26,526 --> 00:04:27,676
这意味着用户无需


154
00:04:27,676 --> 00:04:28,866
把 App 在前台启动


155
00:04:28,996 --> 00:04:29,956
就可以使用


156
00:04:29,956 --> 00:04:30,736
软件的功能


157
00:04:31,376 --> 00:04:32,696
实际上 用户可以从


158
00:04:32,696 --> 00:04:34,256
他们的 Apple Watch 


159
00:04:34,256 --> 00:04:35,226
或 HomePod 上查询


160
00:04:35,376 --> 00:04:36,706
可在其 iPhone 上支持后台运行的 Intent


161
00:04:37,986 --> 00:04:39,086
而且 我们框架提供了


162
00:04:39,086 --> 00:04:40,316
许多你立即就能


163
00:04:40,316 --> 00:04:41,386
使用的嵌入式 Intent


164
00:04:41,806 --> 00:04:43,236
比如发短信 开始体能训练


165
00:04:43,236 --> 00:04:44,606
或者请求搭车


166
00:04:45,336 --> 00:04:46,916
不过 在新一代 watchOS 5 和 iOS 12 中


167
00:04:46,916 --> 00:04:48,626
你可以制作个性化的


168
00:04:48,626 --> 00:04:49,666
并拥有你的


169
00:04:49,666 --> 00:04:51,426
App 最佳功能的 Intent


170
00:04:52,436 --> 00:04:53,836
Xcode 中内置了


171
00:04:53,836 --> 00:04:55,616
这个非常棒的深度 Intent


172
00:04:55,616 --> 00:04:56,736
定义文件和编辑器


173
00:04:56,886 --> 00:04:57,906
并且 我会给各位


174
00:04:57,906 --> 00:04:59,386
看一些有关 Relevant Shortcut 的指示器


175
00:04:59,626 --> 00:05:00,496
不过 我特别推荐各位


176
00:05:00,496 --> 00:05:01,836
看看其他的讲座来了解


177
00:05:02,436 --> 00:05:02,646
全部的细节


178
00:05:03,216 --> 00:05:04,766
现在 让我们来看几个


179
00:05:04,766 --> 00:05:06,346
当 Watch App 发出请求时


180
00:05:06,346 --> 00:05:09,316
捷径将如何执行的例子


181
00:05:09,626 --> 00:05:12,016
用户通过轻点 Siri 表盘


182
00:05:12,016 --> 00:05:13,806
或向 Siri 说出


183
00:05:13,806 --> 00:05:15,056
关键的语音词汇


184
00:05:15,056 --> 00:05:16,996
来生成捷径请求


185
00:05:16,996 --> 00:05:18,206
之后 Watch 会收到这一请求


186
00:05:18,546 --> 00:05:19,816
它会检查并确认


187
00:05:19,876 --> 00:05:20,836
是否有已安装并能处理这个


188
00:05:20,836 --> 00:05:22,336
捷径的 App


189
00:05:22,916 --> 00:05:24,306
在这个例子当中


190
00:05:24,306 --> 00:05:25,226
有一个已安装的软件


191
00:05:25,626 --> 00:05:27,116
所以 我们会将这个


192
00:05:27,116 --> 00:05:28,656
捷径发送到适合的 App 上


193
00:05:29,496 --> 00:05:31,086
如果你的捷径


194
00:05:31,086 --> 00:05:32,346
是由一个能后台运行的


195
00:05:32,346 --> 00:05:34,276
Intent 生成的 那么


196
00:05:34,276 --> 00:05:35,856
执行 App 的 Intent


197
00:05:36,066 --> 00:05:36,876
将运行这个捷径


198
00:05:37,486 --> 00:05:38,606
但是 如果你的捷径


199
00:05:38,606 --> 00:05:40,086
不是基于 NSUserActivity 构建的


200
00:05:40,276 --> 00:05:41,206
或者你的 Intent 无法


201
00:05:41,206 --> 00:05:42,616
支持后台运行 那么 App 


202
00:05:42,616 --> 00:05:43,836
就会自行启动


203
00:05:43,836 --> 00:05:44,546
来处理这个捷径


204
00:05:45,586 --> 00:05:46,936
当捷径执行完成


205
00:05:46,936 --> 00:05:48,006
它会生成一个结果


206
00:05:48,006 --> 00:05:49,666
然后将结果返回给用户


207
00:05:50,856 --> 00:05:51,746
现在 让我们来看看


208
00:05:51,746 --> 00:05:52,396
另一个例子


209
00:05:53,036 --> 00:05:55,556
在这个例子中 用户轻点 Siri 表盘


210
00:05:55,556 --> 00:05:57,056
或者向 Siri 说出关键词来生成


211
00:05:57,056 --> 00:05:58,416
捷径请求


212
00:05:58,636 --> 00:06:00,216
之后 Watch 会检查这个请求


213
00:06:00,216 --> 00:06:01,646
这种情况下


214
00:06:01,646 --> 00:06:02,626
它会确认是否有


215
00:06:02,626 --> 00:06:03,766
已安装的能处理这个


216
00:06:03,846 --> 00:06:04,916
捷径的 App


217
00:06:05,456 --> 00:06:06,556
所以 我们会检查手机


218
00:06:06,556 --> 00:06:07,816
是否有能处理这个


219
00:06:07,816 --> 00:06:08,576
捷径的 App


220
00:06:08,956 --> 00:06:10,316
在这个例子里 手机中有这样的 App


221
00:06:10,316 --> 00:06:11,306
所以 我们将把请求


222
00:06:11,306 --> 00:06:12,496
发送至手机


223
00:06:12,836 --> 00:06:14,216
之后就会有相应的 App


224
00:06:14,216 --> 00:06:15,486
或 Intent 扩展程序


225
00:06:15,486 --> 00:06:16,016
来执行请求


226
00:06:16,546 --> 00:06:18,536
当请求执行完毕


227
00:06:18,536 --> 00:06:19,676
手机上会生成一个结果


228
00:06:19,676 --> 00:06:21,156
将其返回给 Watch


229
00:06:21,156 --> 00:06:22,336
再传达给用户


230
00:06:22,336 --> 00:06:25,806
那么 现在我们了解了


231
00:06:25,806 --> 00:06:26,946
构成捷径的关键概念 


232
00:06:26,946 --> 00:06:28,256
以及它在 Watch 上是如何执行的


233
00:06:28,256 --> 00:06:29,446
下面让我们来看看


234
00:06:29,446 --> 00:06:31,166
Relevant Shortcut 它可以获取你的


235
00:06:31,166 --> 00:06:32,456
捷径并在最相关的时刻


236
00:06:32,456 --> 00:06:33,696
将它们呈现在表盘上


237
00:06:35,066 --> 00:06:37,756
我们可以根据你的捷径内容


238
00:06:37,756 --> 00:06:38,936
自动对 Siri 表盘中


239
00:06:38,936 --> 00:06:39,846
卡片上的栏目进行填充


240
00:06:40,016 --> 00:06:41,706
不过 你也可以根据个人习惯


241
00:06:41,706 --> 00:06:42,826
决定卡片的显示内容


242
00:06:42,826 --> 00:06:43,846
这对一目了然地呈现信息


243
00:06:43,846 --> 00:06:44,816
十分有用


244
00:06:45,216 --> 00:06:47,756
当然 当你轻点卡片


245
00:06:47,756 --> 00:06:48,666
就会执行


246
00:06:48,666 --> 00:06:49,706
相应的隐藏的捷径


247
00:06:50,056 --> 00:06:51,106
那么 下面让我们来看看


248
00:06:51,106 --> 00:06:52,476
这在表盘上是如何运行的


249
00:06:53,006 --> 00:06:54,976
如果你的捷径支持


250
00:06:54,976 --> 00:06:56,226
用户活动 那么当用户


251
00:06:56,226 --> 00:06:57,916
轻点它 你的 App


252
00:06:57,916 --> 00:07:00,726
将自动打开相关的内容


253
00:07:01,256 --> 00:07:03,756
如果你的 App 或者


254
00:07:03,756 --> 00:07:04,886
捷径不是基于 Intent 构建的


255
00:07:04,886 --> 00:07:06,316
那么当用户轻点卡片时


256
00:07:06,316 --> 00:07:07,476
我们将看到这样的


257
00:07:07,476 --> 00:07:08,516
Intent 确认界面


258
00:07:09,336 --> 00:07:10,556
如果用户轻点确认


259
00:07:11,156 --> 00:07:11,906
并且你的 Intent 是在后台运行的


260
00:07:11,906 --> 00:07:13,536
那么我们将内联执行该指令


261
00:07:14,576 --> 00:07:15,906
假如你的 Intent


262
00:07:15,906 --> 00:07:16,976
无法在后台运行 我们将启动


263
00:07:16,976 --> 00:07:18,166
你的 App 并递交你的


264
00:07:18,166 --> 00:07:19,716
Intent 来继续执行指令


265
00:07:21,216 --> 00:07:22,556
接下来 让我们看一下 Relevant Shortcut


266
00:07:22,556 --> 00:07:23,306
的 API


267
00:07:23,916 --> 00:07:25,146
Relevant Shortcut 的核心


268
00:07:25,146 --> 00:07:26,396
当然就是捷径


269
00:07:26,886 --> 00:07:28,286
如果你想提示我们


270
00:07:28,286 --> 00:07:29,086
这一内容何时


271
00:07:29,086 --> 00:07:30,166
会产生相关性 你可以给我们提供


272
00:07:30,166 --> 00:07:31,256
relevanceProviders


273
00:07:31,256 --> 00:07:31,806
我们很快会介绍它


274
00:07:33,196 --> 00:07:34,186
如果你想自定义的


275
00:07:34,186 --> 00:07:36,216
UI 超出了捷径


276
00:07:36,216 --> 00:07:37,916
可提供的范围 你可以在


277
00:07:37,916 --> 00:07:39,196
watchTemplate 属性中给我们一个


278
00:07:39,196 --> 00:07:40,106
默认卡片模版


279
00:07:40,726 --> 00:07:43,246
现在 当你创造完成了


280
00:07:43,246 --> 00:07:44,166
所有的 Relevant Shortcut


281
00:07:44,166 --> 00:07:45,676
你需要让我们了解它们


282
00:07:45,926 --> 00:07:46,886
你要告知


283
00:07:46,886 --> 00:07:48,186
默认 relevantShortcut 商店


284
00:07:48,696 --> 00:07:49,696
你可以通过提供一个数组


285
00:07:49,696 --> 00:07:50,576
来做到这一点


286
00:07:50,966 --> 00:07:52,066
每当你提供给我们一个数组


287
00:07:52,066 --> 00:07:53,286
它就会清除之前


288
00:07:53,286 --> 00:07:54,596
Shortcut Store 内的内容


289
00:07:54,596 --> 00:07:55,946
这对清除过去的


290
00:07:55,946 --> 00:07:57,786
Relevant Shortcut 非常有用


291
00:07:58,116 --> 00:07:58,846
不过 你只需记住


292
00:07:58,846 --> 00:08:00,406
为我们提供所有


293
00:08:00,406 --> 00:08:01,616
需要我们考量的 Relevant Shortcut


294
00:08:01,616 --> 00:08:02,136
就可以了


295
00:08:03,876 --> 00:08:05,116
让我们来看看


296
00:08:05,116 --> 00:08:05,946
我们的内容是如何在


297
00:08:05,946 --> 00:08:06,266
卡片上显示的


298
00:08:06,806 --> 00:08:08,296
你可以在左上角看到


299
00:08:08,296 --> 00:08:09,436
你的 App 图标


300
00:08:09,436 --> 00:08:10,836
以及你的 App 的名称


301
00:08:11,536 --> 00:08:12,816
它的下面需要一个标题字符串


302
00:08:12,816 --> 00:08:14,346
再下面是可选的副标题


303
00:08:14,346 --> 00:08:15,746
你可以用它显示


304
00:08:15,746 --> 00:08:17,026
更多的文字


305
00:08:17,386 --> 00:08:18,556
副标题的内容将用斜体显示


306
00:08:19,236 --> 00:08:20,166
这些标题的左边是


307
00:08:20,166 --> 00:08:22,106
可选的自定义图像


308
00:08:22,646 --> 00:08:23,486
它支持透明图像


309
00:08:23,486 --> 00:08:25,916
而且自动采用圆角模式


310
00:08:26,776 --> 00:08:27,696
你可以通过 watchOS 的


311
00:08:27,696 --> 00:08:28,886
Human Interface Guidelines


312
00:08:29,086 --> 00:08:30,186
来了解更多关于


313
00:08:30,186 --> 00:08:31,756
这些素材的尺寸


314
00:08:32,496 --> 00:08:33,716
正如我之前提到的 现在我们可以


315
00:08:33,775 --> 00:08:35,096
自动填充所有


316
00:08:35,096 --> 00:08:36,796
非用户提供的捷径栏目


317
00:08:37,196 --> 00:08:39,346
在自定义 Intent 的情况下


318
00:08:39,936 --> 00:08:41,426
你提供的每一个参数组合


319
00:08:41,426 --> 00:08:43,265
都会关联一个我们可以使用的


320
00:08:43,265 --> 00:08:44,246
标题和副标题


321
00:08:45,546 --> 00:08:46,556
而且 当你用代码生成了 Intent


322
00:08:46,556 --> 00:08:48,196
并产生了一个捷径之后


323
00:08:48,856 --> 00:08:50,766
你可以用任意参数来设定图像


324
00:08:51,406 --> 00:08:52,606
我们将根据所提供的


325
00:08:52,606 --> 00:08:54,266
最详细的参数


326
00:08:54,266 --> 00:08:55,536
来为自定义图像


327
00:08:55,536 --> 00:08:56,436
选择一个图像


328
00:08:57,326 --> 00:08:58,346
一个参数的具体取值


329
00:08:58,346 --> 00:08:59,356
是由你列在


330
00:08:59,416 --> 00:09:00,706
Intent 定义文件


331
00:09:00,706 --> 00:09:02,256
内的参数所决定的


332
00:09:02,836 --> 00:09:05,106
在 NSUserActivity 的情况下


333
00:09:05,106 --> 00:09:06,906
当你通过创建你的


334
00:09:06,906 --> 00:09:07,926
userActivity 来生成


335
00:09:07,926 --> 00:09:09,536
一个捷径时


336
00:09:09,536 --> 00:09:10,896
你要提供你在 App 的


337
00:09:10,896 --> 00:09:11,776
info.plist 中的


338
00:09:11,776 --> 00:09:12,776
userActivity 类型


339
00:09:13,156 --> 00:09:13,986
对我们来说 要想不用


340
00:09:13,986 --> 00:09:15,076
默认卡片模版就将其


341
00:09:15,076 --> 00:09:16,116
呈现出来 你需要给我们


342
00:09:16,116 --> 00:09:17,176
在标题属性上提供一个


343
00:09:17,176 --> 00:09:17,596
标题的值


344
00:09:18,646 --> 00:09:20,486
在 iOS 中 你也可以通过


345
00:09:20,486 --> 00:09:22,526
创建一个 CSSearchableItemAttributeSet


346
00:09:22,526 --> 00:09:25,066
来提供副标题和自定义图像


347
00:09:26,256 --> 00:09:27,336
在该属性集上


348
00:09:27,336 --> 00:09:28,666
我们将从内容描述属性中


349
00:09:28,666 --> 00:09:29,456
抽取副标题


350
00:09:29,456 --> 00:09:31,146
并且从 thumbnailData 属性中


351
00:09:31,146 --> 00:09:32,306
抽取自定义头像


352
00:09:33,476 --> 00:09:34,426
当你配置完


353
00:09:34,426 --> 00:09:35,926
这个属性集 就可以将它设置在


354
00:09:35,966 --> 00:09:36,926
NSUserActivity 的


355
00:09:37,066 --> 00:09:38,336
contentAttributeSet 属性中了


356
00:09:38,916 --> 00:09:42,216
如果你不想提供给我们


357
00:09:42,216 --> 00:09:43,856
整合进你的捷径的内容


358
00:09:43,856 --> 00:09:44,846
你可以提供一个


359
00:09:44,846 --> 00:09:46,306
默认卡片模版 它有


360
00:09:46,306 --> 00:09:48,066
卡片上每一个栏目的属性


361
00:09:48,536 --> 00:09:49,376
而且 根据我们所获取的内容


362
00:09:49,376 --> 00:09:51,796
我们将展示不同的布局


363
00:09:52,536 --> 00:09:53,296
大家可以看到右边的


364
00:09:53,296 --> 00:09:54,746
两个配置 如果它们未提供


365
00:09:54,746 --> 00:09:55,796
图像 我们将把它的文字


366
00:09:55,796 --> 00:09:57,296
向左延伸


367
00:09:57,296 --> 00:09:58,696
这给文字内容提供了更多的空间


368
00:09:59,376 --> 00:10:00,836
在下方的两个例子中


369
00:10:00,836 --> 00:10:02,126
如果没有副标题


370
00:10:02,126 --> 00:10:03,206
我们会把标题字符串


371
00:10:03,206 --> 00:10:04,330
从顶行自动换至底行


372
00:10:06,616 --> 00:10:08,796
如果你的捷径是基于 Intent 构建的


373
00:10:08,796 --> 00:10:10,246
当用户轻点它时


374
00:10:10,246 --> 00:10:11,906
就会看到这个 Intent 确认视图


375
00:10:12,736 --> 00:10:13,546
左上角是你的


376
00:10:13,546 --> 00:10:14,736
App 图标


377
00:10:14,736 --> 00:10:15,946
它会变大一点 后面是


378
00:10:15,946 --> 00:10:16,666
你的 App 名称


379
00:10:17,376 --> 00:10:18,416
在此之下 我们将直接从


380
00:10:18,416 --> 00:10:19,936
你的 Intent 的定义文件中


381
00:10:19,936 --> 00:10:21,026
选取显示的标题和副标题


382
00:10:21,626 --> 00:10:22,816
这时候 用户有


383
00:10:22,886 --> 00:10:23,516
三个选项


384
00:10:24,186 --> 00:10:25,286
如果他们想运行你的 Intent


385
00:10:25,556 --> 00:10:26,716
可以点击中间粉色的


386
00:10:26,716 --> 00:10:27,566
确认按钮


387
00:10:28,126 --> 00:10:28,996
如果他们不想运行它


388
00:10:29,276 --> 00:10:30,406
可以轻点忽略按钮


389
00:10:30,406 --> 00:10:30,976
或者 Digital Crown


390
00:10:31,496 --> 00:10:32,596
第三个选项


391
00:10:32,596 --> 00:10:33,266
要更为精细


392
00:10:33,936 --> 00:10:35,486
有时用户看到一个 Intent


393
00:10:35,756 --> 00:10:37,076
发现自己想对其中的一些参数


394
00:10:37,076 --> 00:10:37,886
做轻微调整


395
00:10:38,176 --> 00:10:40,426
那么 他们可以轻点顶端的模块


396
00:10:40,456 --> 00:10:41,926
我们将启动你的


397
00:10:41,926 --> 00:10:43,276
App 并提供


398
00:10:43,276 --> 00:10:44,486
你自定义过的 Intent


399
00:10:44,726 --> 00:10:46,146
因此 你可以在继续


400
00:10:46,146 --> 00:10:47,376
执行指令前 呈现给用户一些


401
00:10:47,376 --> 00:10:48,376
可以对某些参数


402
00:10:48,376 --> 00:10:49,356
稍作修改的 UI


403
00:10:50,666 --> 00:10:51,616
现在 让我们来进一步


404
00:10:51,616 --> 00:10:53,166
谈谈中间的


405
00:10:53,166 --> 00:10:55,186
粉色确认按钮


406
00:10:55,386 --> 00:10:56,306
我们这里所显示的字符串


407
00:10:56,306 --> 00:10:57,806
是一个操作动词


408
00:10:57,806 --> 00:10:58,976
它基于你在


409
00:10:58,976 --> 00:11:00,346
Intent 定义文件中


410
00:11:00,346 --> 00:11:01,296
定义的 Intent 类别


411
00:11:02,596 --> 00:11:04,336
此外 这个颜色是从


412
00:11:04,336 --> 00:11:05,706
你的 Watch App 界面描述板里


413
00:11:05,706 --> 00:11:07,266
App 的全球色彩中


414
00:11:07,266 --> 00:11:08,056
选出来的


415
00:11:08,666 --> 00:11:10,886
要时刻记住


416
00:11:10,886 --> 00:11:11,946
你的 Watch App 内


417
00:11:11,976 --> 00:11:13,226
支持的 Intent


418
00:11:13,276 --> 00:11:14,816
必须是你的 iOS App


419
00:11:14,816 --> 00:11:16,206
支持的 Intent 的子集


420
00:11:16,686 --> 00:11:17,406
这意味着你将在 iOS 和 watchOS 上


421
00:11:17,406 --> 00:11:19,066
共享同样的


422
00:11:19,066 --> 00:11:21,196
标题字符串和


423
00:11:21,196 --> 00:11:21,836
副标题字符串


424
00:11:22,306 --> 00:11:23,356
而 watchOS


425
00:11:23,356 --> 00:11:24,316
是一个有很多约束的画板


426
00:11:24,536 --> 00:11:25,446
每一个字都很重要


427
00:11:25,936 --> 00:11:27,426
因此 我们非常推荐使用


428
00:11:27,426 --> 00:11:28,776
NSStringVariableWidthRuleType 密钥


429
00:11:28,776 --> 00:11:30,956
和字符串字典


430
00:11:31,476 --> 00:11:32,636
这允许你给我们


431
00:11:32,636 --> 00:11:34,356
许多可供我们选择的


432
00:11:34,446 --> 00:11:35,296
不同大小的字符串


433
00:11:35,456 --> 00:11:36,456
我们可以根据


434
00:11:36,456 --> 00:11:37,096
呈现内容的环境来进行选择


435
00:11:38,456 --> 00:11:39,496
当为 watchOS 提供内容时


436
00:11:39,496 --> 00:11:41,876
我们推荐为 38 毫米 Watch


437
00:11:41,876 --> 00:11:43,776
提供一个宽度规则


438
00:11:44,166 --> 00:11:45,616
为 20 的字符串


439
00:11:45,656 --> 00:11:47,506
同时 为 42 毫米 Watch 提供


440
00:11:47,506 --> 00:11:48,106
一个宽度规则为 24 的字符串


441
00:11:48,756 --> 00:11:51,266
想了解更多关于这个


442
00:11:51,266 --> 00:11:53,216
API 的信息


443
00:11:53,216 --> 00:11:54,476
请观看去年大会上的


444
00:11:54,476 --> 00:11:55,706
"Localizing with Xcode 9" 讲座


445
00:11:56,646 --> 00:11:58,726
现在让我们来


446
00:11:58,726 --> 00:11:59,566
谈论一下 Relevance Provider


447
00:12:01,116 --> 00:12:02,676
Relevance Provider 是


448
00:12:02,676 --> 00:12:04,146
一种提示我们


449
00:12:04,146 --> 00:12:05,116
何时该显示内容的方法


450
00:12:06,436 --> 00:12:07,366
这种方法可以让我们知道


451
00:12:07,366 --> 00:12:08,686
我们在计算相关性时


452
00:12:08,716 --> 00:12:09,966
该如何整合内容 比如时间


453
00:12:09,966 --> 00:12:11,536
用户的位置 或他们的


454
00:12:11,536 --> 00:12:12,506
日常活动


455
00:12:13,186 --> 00:12:14,166
而实际上 你可以在一个


456
00:12:14,166 --> 00:12:15,366
Relevance Shortcut 种给我们


457
00:12:15,366 --> 00:12:16,266
提供不止一个的 Relevance Provider


458
00:12:16,306 --> 00:12:17,526
我们还将利用


459
00:12:17,526 --> 00:12:18,686
输出信息的内部区段


460
00:12:19,016 --> 00:12:20,076
所以 如果你给我们提供一个


461
00:12:20,076 --> 00:12:21,286
说明某天某个时刻


462
00:12:21,286 --> 00:12:22,296
很重要的 Relevance Provider


463
00:12:22,296 --> 00:12:23,336
而另一个说明某个


464
00:12:23,336 --> 00:12:24,606
特定的位置很重要


465
00:12:25,116 --> 00:12:26,256
当在这个时刻用户同时


466
00:12:26,356 --> 00:12:28,136
出现在这个位置时 你将得到


467
00:12:28,206 --> 00:12:29,806
高关联性的输出结果


468
00:12:30,586 --> 00:12:31,866
如果你想将这些


469
00:12:31,866 --> 00:12:32,816
Relevance Provider 结合起来


470
00:12:32,816 --> 00:12:33,756
你需要分别提供两个


471
00:12:33,906 --> 00:12:35,356
Relevance Shortcut


472
00:12:35,356 --> 00:12:36,356
每一个都有


473
00:12:36,356 --> 00:12:37,246
不同的 Relevance Provider


474
00:12:37,746 --> 00:12:39,716
那么让我们来看一下


475
00:12:39,716 --> 00:12:40,586
我们可用的选项


476
00:12:41,416 --> 00:12:42,246
第一个是


477
00:12:42,436 --> 00:12:44,726
INDateRelevanceProvider


478
00:12:44,726 --> 00:12:45,656
它有规定的 startDate 参数


479
00:12:45,656 --> 00:12:46,876
和一个可选的


480
00:12:46,876 --> 00:12:47,536
endDate 参数


481
00:12:48,546 --> 00:12:49,516
当你新建一个这样的


482
00:12:49,516 --> 00:12:50,986
Relevance Provider 实例时


483
00:12:50,986 --> 00:12:52,416
离你提供的开始时间


484
00:12:52,536 --> 00:12:53,676
越接近 那么 Provider


485
00:12:53,676 --> 00:12:55,346
输出的相关性就越高


486
00:12:56,226 --> 00:12:57,596
当那一天的那一时刻过去后


487
00:12:57,836 --> 00:12:58,856
其相关性就会呈曲线下滑


488
00:12:58,856 --> 00:13:00,126
以让更多的


489
00:13:00,126 --> 00:13:01,366
内容出现在表盘上


490
00:13:01,706 --> 00:13:02,466
如果你给我们提供了


491
00:13:02,466 --> 00:13:04,076
可选的 endDate 我们会调整曲线


492
00:13:04,076 --> 00:13:05,316
来适应信息


493
00:13:05,856 --> 00:13:08,806
如果你的内容


494
00:13:08,806 --> 00:13:10,086
和指定位置更相关


495
00:13:10,086 --> 00:13:10,706
你可以使用


496
00:13:10,816 --> 00:13:12,076
INLocationRelevanceProvider


497
00:13:13,086 --> 00:13:14,916
当你构建一个这样的实例时


498
00:13:14,916 --> 00:13:16,246
它会把 CLRegion


499
00:13:16,246 --> 00:13:16,956
作为主要参数


500
00:13:17,116 --> 00:13:18,296
当用户离这一区域


501
00:13:18,296 --> 00:13:19,686
越来越近时


502
00:13:19,686 --> 00:13:20,666
RelevanceProvider 输出的


503
00:13:20,666 --> 00:13:22,306
关联性就会变得越来越高


504
00:13:23,686 --> 00:13:24,956
你的脑海中并不会经常出现


505
00:13:24,956 --> 00:13:26,246
关联内容的


506
00:13:26,246 --> 00:13:27,506
具体时间或


507
00:13:27,506 --> 00:13:29,946
或具体位置


508
00:13:30,296 --> 00:13:31,866
用户的日程


509
00:13:31,866 --> 00:13:33,676
和他们最爱的位置


510
00:13:33,676 --> 00:13:34,636
时常发生变化


511
00:13:34,636 --> 00:13:35,796
你肯定不想追踪


512
00:13:35,796 --> 00:13:36,546
所有的这些信息


513
00:13:36,736 --> 00:13:38,126
所以你可以利用


514
00:13:38,126 --> 00:13:39,676
Siri 面部智能识别并且使用


515
00:13:39,836 --> 00:13:41,226
INDailyRoutineRelevanceProvider


516
00:13:41,496 --> 00:13:42,646
这里面有


517
00:13:42,646 --> 00:13:43,856
用户可能喜爱的


518
00:13:43,856 --> 00:13:45,596
时刻和位置


519
00:13:46,196 --> 00:13:47,256
比如说 假如你有一些


520
00:13:47,256 --> 00:13:48,516
想要在用户醒来时


521
00:13:48,516 --> 00:13:49,846
作为每日预报来显示的内容


522
00:13:49,846 --> 00:13:51,296
你不必知道他们是


523
00:13:51,296 --> 00:13:52,176
早上五点醒还是


524
00:13:52,176 --> 00:13:52,896
上午十点醒


525
00:13:53,206 --> 00:13:53,956
你只需向我们提供


526
00:13:53,956 --> 00:13:54,816
早晨的情况即可


527
00:13:55,736 --> 00:13:57,066
如果你想进行需要些


528
00:13:57,066 --> 00:13:58,116
运动器材的体能训练


529
00:13:58,116 --> 00:13:59,426
你只要提供我们


530
00:13:59,426 --> 00:14:00,426
运动的情况即可


531
00:14:01,006 --> 00:14:04,186
现在我们的 Toolbox 里


532
00:14:04,186 --> 00:14:05,736
已经有了所有的这些 API


533
00:14:05,736 --> 00:14:06,846
下面让我们构建一些 Relevant Shortcut


534
00:14:07,956 --> 00:14:09,336
在我的例子中 我们制作了一个


535
00:14:09,336 --> 00:14:10,546
虚拟的记录饮食的 App


536
00:14:10,546 --> 00:14:12,656
它可以让用户记录


537
00:14:12,656 --> 00:14:13,726
自己的饮食情况 而且他们可以


538
00:14:13,726 --> 00:14:14,626
选择做些挑战


539
00:14:15,016 --> 00:14:16,186
在这周的挑战中 我们的用户


540
00:14:16,186 --> 00:14:17,676
选择了素食挑战


541
00:14:18,346 --> 00:14:19,636
那么 我们将为记录饮食


542
00:14:19,636 --> 00:14:22,336
创建一个用户活动


543
00:14:22,556 --> 00:14:23,846
它的活动类型是


544
00:14:23,846 --> 00:14:25,386
com.myapp.LogMeal


545
00:14:25,926 --> 00:14:26,596
由于我们要在


546
00:14:26,596 --> 00:14:27,696
晚餐时显示出来


547
00:14:27,806 --> 00:14:28,936
我们要把用户信息


548
00:14:28,936 --> 00:14:30,076
字典内的重要内容


549
00:14:30,076 --> 00:14:31,656
设置到晚餐中


550
00:14:32,986 --> 00:14:34,056
一旦我们设置好了 userActivity


551
00:14:34,056 --> 00:14:35,266
我们就可以创建一个捷径


552
00:14:35,266 --> 00:14:36,166
从这个捷径里


553
00:14:36,166 --> 00:14:36,976
我们就可以创建出一个


554
00:14:36,976 --> 00:14:37,676
Relevant Shortcut


555
00:14:38,716 --> 00:14:39,536
现在 我们想让用户知道


556
00:14:39,536 --> 00:14:40,696
因为他们已经


557
00:14:40,696 --> 00:14:41,736
选择了素食挑战


558
00:14:41,736 --> 00:14:42,916
因此这一内容将在表盘上


559
00:14:42,916 --> 00:14:43,406
显示出来


560
00:14:43,896 --> 00:14:44,716
我们要制作一个


561
00:14:44,716 --> 00:14:45,606
默认卡片模版


562
00:14:45,606 --> 00:14:47,516
来用 Log Dinner 这个名字


563
00:14:47,516 --> 00:14:48,316
来作为自定义 UI 的标题


564
00:14:48,796 --> 00:14:49,876
并且 我们会在副标题


565
00:14:49,876 --> 00:14:51,436
和自定义图像中


566
00:14:51,606 --> 00:14:52,396
显示素食挑战


567
00:14:52,986 --> 00:14:55,466
我们的用户不经常


568
00:14:55,466 --> 00:14:56,876
记录自己的饮食


569
00:14:56,876 --> 00:14:58,636
但是他们选择了这个挑战


570
00:14:58,896 --> 00:15:00,136
所以 我们想给系统一个提示


571
00:15:00,136 --> 00:15:00,986
告诉它这个内容


572
00:15:00,986 --> 00:15:02,926
应在夜间 通过在 .evening. 情景下发送


573
00:15:03,166 --> 00:15:04,566
dailyRoutineRelevanceProvider


574
00:15:04,566 --> 00:15:05,636
显示出来


575
00:15:06,366 --> 00:15:07,076
现在既然我们的


576
00:15:07,076 --> 00:15:08,306
Relevant Shortcut 已经配置完成了


577
00:15:08,306 --> 00:15:09,246
我们可以把它发送至


578
00:15:09,246 --> 00:15:10,466
默认的 relevantShortcutStore 中


579
00:15:10,536 --> 00:15:14,006
下一个例子 在我们的


580
00:15:14,006 --> 00:15:15,466
App 中 用户还可以


581
00:15:15,466 --> 00:15:16,346
设定许多爱吃的


582
00:15:16,346 --> 00:15:17,786
和经常吃的零食


583
00:15:17,786 --> 00:15:19,886
或者设置他们每天吃的早餐


584
00:15:19,936 --> 00:15:20,726
那么我们创建了一个


585
00:15:20,726 --> 00:15:23,176
logFavoriteMealIntent


586
00:15:24,136 --> 00:15:25,206
我们想要这些


587
00:15:25,206 --> 00:15:26,146
显示在表盘上


588
00:15:26,146 --> 00:15:27,206
使用户更易记录


589
00:15:27,206 --> 00:15:28,936
自己最爱的零食和饮食


590
00:15:29,736 --> 00:15:30,896
因此 我们将新建一个 Intent 的实例


591
00:15:30,896 --> 00:15:32,806
拿出一个我们最爱的食物


592
00:15:32,806 --> 00:15:33,736
在参数中将它


593
00:15:33,736 --> 00:15:34,466
设置为最爱


594
00:15:34,566 --> 00:15:36,746
这个例子中 我们的用户爱吃曲奇


595
00:15:36,986 --> 00:15:39,496
我们也会为这一参数设置一个


596
00:15:39,496 --> 00:15:40,936
图像 当它出现在表盘上时


597
00:15:40,936 --> 00:15:42,106
用户就会有更多的


598
00:15:42,106 --> 00:15:43,136
相关信息来了解


599
00:15:43,136 --> 00:15:43,876
他们将记录什么


600
00:15:45,076 --> 00:15:46,146
从这里 我们可以采用我们的


601
00:15:46,146 --> 00:15:47,416
Intent 创建捷径


602
00:15:47,416 --> 00:15:48,646
通过捷径就可以创建一个


603
00:15:48,646 --> 00:15:49,316
relevantShortcut


604
00:15:50,536 --> 00:15:51,416
此时 我们就准备好将


605
00:15:51,416 --> 00:15:52,636
relevantShortcut 发送至


606
00:15:52,636 --> 00:15:54,106
relevant shortcut store 了


607
00:15:54,756 --> 00:15:55,656
我们不需要默认卡片模版


608
00:15:55,656 --> 00:15:56,806
因为有标题字符串


609
00:15:56,806 --> 00:15:58,236
和我们发送给


610
00:15:58,236 --> 00:15:59,056
Intent 的图像


611
00:15:59,056 --> 00:16:00,086
就已经足够了


612
00:16:00,926 --> 00:16:01,816
我们实在不想


613
00:16:01,816 --> 00:16:02,976
再提供一个 relevanceProvider


614
00:16:03,436 --> 00:16:04,356
因为这对用户来说


615
00:16:04,356 --> 00:16:05,426
是已经习以为常的事情


616
00:16:05,666 --> 00:16:06,906
他们通常会全天


617
00:16:06,906 --> 00:16:07,806
记录这些 我们可以利用


618
00:16:07,806 --> 00:16:09,056
Siri 面部预测引擎


619
00:16:09,056 --> 00:16:10,316
让它在用户最需要


620
00:16:10,316 --> 00:16:12,196
的时候显示出来


621
00:16:12,736 --> 00:16:14,966
而且 尽管我们完成了


622
00:16:14,966 --> 00:16:16,126
relevantShortcuts 的创建 但实际上到这一步


623
00:16:16,126 --> 00:16:16,996
我们还没有彻底结束


624
00:16:17,286 --> 00:16:18,846
我们也需要有能力来处理它们


625
00:16:19,316 --> 00:16:21,316
在新的 watchOS 5 中


626
00:16:21,316 --> 00:16:22,396
在你的 WKExtensionDelegate


627
00:16:22,396 --> 00:16:23,896
中有一种叫做


628
00:16:23,896 --> 00:16:24,836
处理用户捷径的方法


629
00:16:26,246 --> 00:16:27,336
来看我们的第一个例子 如果


630
00:16:27,336 --> 00:16:28,946
用户轻点 Siri 上的卡片


631
00:16:28,946 --> 00:16:29,766
我们就会启动 App


632
00:16:29,766 --> 00:16:31,396
接下来我们会把用户活动


633
00:16:31,396 --> 00:16:32,886
传递给这个方法


634
00:16:33,186 --> 00:16:34,436
这种方法的活动类型和


635
00:16:34,526 --> 00:16:35,686
com.myapp.LogMeal 是匹配的


636
00:16:36,556 --> 00:16:37,716
在这个阶段 我们想确定


637
00:16:37,716 --> 00:16:38,646
我们进入到了 App 中


638
00:16:38,646 --> 00:16:39,396
正确的部分


639
00:16:39,496 --> 00:16:40,486
所以我们会跳转到


640
00:16:40,486 --> 00:16:41,916
rootInterfaceController


641
00:16:41,916 --> 00:16:42,456
进而启用


642
00:16:42,456 --> 00:16:43,786
logMealInterfaceController


643
00:16:44,446 --> 00:16:45,376
我们要确保


644
00:16:45,376 --> 00:16:46,636
将我们输入进用户信息字典


645
00:16:46,636 --> 00:16:48,076
的内容继续传递


646
00:16:48,076 --> 00:16:48,976
这样我们才能知道要记录


647
00:16:48,976 --> 00:16:49,476
哪一顿饮食


648
00:16:49,476 --> 00:16:52,956
来看第二个例子


649
00:16:52,956 --> 00:16:54,316
一般来说


650
00:16:54,316 --> 00:16:55,716
能够后台运行的 Intent


651
00:16:55,716 --> 00:16:57,006
可以成功在我们的


652
00:16:57,006 --> 00:16:57,796
Intent 扩展程序中运行


653
00:16:58,346 --> 00:16:59,076
不过 也有一些我们的


654
00:16:59,076 --> 00:17:00,506
App 会


655
00:17:00,506 --> 00:17:02,106
直接收到反馈的实例


656
00:17:02,656 --> 00:17:03,646
第一种是 假如在执行指令的


657
00:17:03,646 --> 00:17:04,856
过程中有错误产生


658
00:17:04,856 --> 00:17:06,846
我们需要在 App 内处理它


659
00:17:07,116 --> 00:17:08,165
另一种则可能


660
00:17:08,165 --> 00:17:09,096
出现在用户想要


661
00:17:09,096 --> 00:17:10,415
稍微修改一些参数时


662
00:17:10,856 --> 00:17:11,836
比如 当他们想要


663
00:17:11,836 --> 00:17:12,806
记录一个曲奇饼


664
00:17:13,076 --> 00:17:14,356
但实际上吃掉了五个时


665
00:17:14,356 --> 00:17:16,195
那么 我们要轻点顶端模块


666
00:17:16,336 --> 00:17:17,086
启动你的 App


667
00:17:17,086 --> 00:17:18,945
然后你就会收到一个反馈


668
00:17:19,396 --> 00:17:20,945
你收到的 userActivity


669
00:17:21,415 --> 00:17:22,586
的活动类型


670
00:17:22,586 --> 00:17:23,945
将和你给我们的 Intent 类


671
00:17:23,945 --> 00:17:24,846
名称相同


672
00:17:25,386 --> 00:17:27,626
在这个阶段 你可以从


673
00:17:27,626 --> 00:17:28,526
userActivity 中抽出


674
00:17:28,526 --> 00:17:30,546
一个交互 和这个交互中的


675
00:17:30,546 --> 00:17:31,936
一个 Intent 它拥有


676
00:17:31,936 --> 00:17:33,826
你创建 Relevant Shortcut 时设置的


677
00:17:33,826 --> 00:17:35,086
所有参数


678
00:17:35,836 --> 00:17:37,366
所以 每当我们的 App


679
00:17:37,366 --> 00:17:38,506
运行时 我们都可以


680
00:17:38,506 --> 00:17:39,596
创建 Relevant Shortcut


681
00:17:39,956 --> 00:17:40,966
不过 必须注意的一点是


682
00:17:40,966 --> 00:17:42,136
尽管你的内容出现在


683
00:17:42,136 --> 00:17:43,166
Siri 表盘上


684
00:17:43,166 --> 00:17:44,456
但是这不一定意味着


685
00:17:44,456 --> 00:17:45,966
你的 App 正在运行


686
00:17:46,496 --> 00:17:48,006
所以 为了帮助大家获得更多的


687
00:17:48,176 --> 00:17:49,256
运行时间 以提供相关的捷径


688
00:17:49,516 --> 00:17:50,186
我们创建了


689
00:17:50,186 --> 00:17:52,676
WKRelevantShortcutRefresh


690
00:17:52,676 --> 00:17:53,336
后台任务


691
00:17:54,556 --> 00:17:56,026
我们将把它传递给


692
00:17:56,026 --> 00:17:57,516
那些用户花费了时间


693
00:17:57,596 --> 00:17:58,916
观察 浏览


694
00:17:58,916 --> 00:17:59,896
但并没有滑开的


695
00:17:59,896 --> 00:18:02,956
App 的 Relevant Shortcut


696
00:18:04,286 --> 00:18:05,126
当你有了一个


697
00:18:05,126 --> 00:18:06,716
后台刷新任务


698
00:18:06,716 --> 00:18:08,366
你就可以更新支持你


699
00:18:08,366 --> 00:18:10,046
Relevant Shortcut 的数据


700
00:18:10,046 --> 00:18:11,596
并给我们提供一套全新的


701
00:18:11,596 --> 00:18:12,576
Relevant Shortcut 了


702
00:18:13,896 --> 00:18:15,976
顺便一提 当支持


703
00:18:15,976 --> 00:18:17,136
后台运行的 Intent 运行时


704
00:18:17,136 --> 00:18:19,376
它执行在你的 Intent 扩展程序的内部


705
00:18:19,846 --> 00:18:20,796
这意味着如果你更新


706
00:18:20,796 --> 00:18:22,126
你的数据库存储


707
00:18:22,126 --> 00:18:22,966
有可能是因为你的 UI


708
00:18:23,046 --> 00:18:24,416
和 App 已经老化


709
00:18:25,526 --> 00:18:26,796
所以 在 5 中


710
00:18:26,796 --> 00:18:28,416
我们还创建了


711
00:18:28,416 --> 00:18:30,056
WKIntentDidRunRefresh


712
00:18:30,086 --> 00:18:30,776
BackgroundTask


713
00:18:31,126 --> 00:18:32,086
并且 我们将把它同


714
00:18:32,086 --> 00:18:33,606
一些运行时间


715
00:18:33,606 --> 00:18:35,396
在 Intent 扩展程序执行完


716
00:18:35,396 --> 00:18:35,926
捷径之后一同传递给你


717
00:18:37,076 --> 00:18:38,326
这样你就可以确认


718
00:18:38,326 --> 00:18:39,646
你的 UI 是否是最新版本


719
00:18:40,326 --> 00:18:41,526
是否需要更新


720
00:18:41,526 --> 00:18:43,806
Snapshot 或者重装以及


721
00:18:43,806 --> 00:18:44,866
扩展你的并行时间线


722
00:18:45,236 --> 00:18:48,916
下面让我们来看看


723
00:18:48,916 --> 00:18:50,926
如何利用 iOS 里的这些 API


724
00:18:51,456 --> 00:18:53,686
好消息是 除了那些


725
00:18:53,686 --> 00:18:55,666
WKRefreshBackgroundTasks


726
00:18:55,666 --> 00:18:57,646
我们可以在 iOS App 内


727
00:18:57,876 --> 00:18:58,996
使用完全一样的 API


728
00:19:00,056 --> 00:19:01,086
我们在 iOS App 里


729
00:19:01,086 --> 00:19:02,656
提供的 Relevant Shortcut


730
00:19:02,656 --> 00:19:03,716
会定期从手机


731
00:19:03,716 --> 00:19:04,426
同步到 Watch


732
00:19:04,496 --> 00:19:05,896
而且考虑到


733
00:19:05,896 --> 00:19:06,766
在表盘上显示


734
00:19:06,766 --> 00:19:08,866
它会结合一些本地的 Relevant Shortcut


735
00:19:09,916 --> 00:19:12,656
你拥有所有相同的 UI 自定义选项


736
00:19:12,996 --> 00:19:14,286
唯一的区别就在于


737
00:19:14,286 --> 00:19:15,446
如果你的 Relevant Shortcut 需要


738
00:19:15,446 --> 00:19:16,726
回到手机上执行 我们会显示


739
00:19:16,726 --> 00:19:18,096
你的 iOS App 的图像


740
00:19:18,096 --> 00:19:19,706
而不是你的 App 的图像


741
00:19:20,556 --> 00:19:23,146
既然我们可以显示


742
00:19:23,146 --> 00:19:24,146
在手机或 Watch 上


743
00:19:24,146 --> 00:19:25,026
运行的 Relevant Shortcut


744
00:19:25,026 --> 00:19:26,276
让我们来看一下


745
00:19:26,276 --> 00:19:27,156
当用户轻点时


746
00:19:27,156 --> 00:19:28,316
它会在什么地方执行指令


747
00:19:29,596 --> 00:19:31,246
如果一个 Relevant Shortcut 可以由


748
00:19:31,246 --> 00:19:32,406
你的 Watch 在本地安装的


749
00:19:32,406 --> 00:19:33,796
App 处理


750
00:19:34,056 --> 00:19:35,046
不论它从哪里来


751
00:19:35,046 --> 00:19:36,916
我们都会在 


752
00:19:36,956 --> 00:19:38,166
App 内执行它


753
00:19:38,836 --> 00:19:40,116
这可以给予用户


754
00:19:40,116 --> 00:19:41,726
最佳的体验和最少的延迟


755
00:19:43,056 --> 00:19:44,386
你可以通过确认


756
00:19:44,386 --> 00:19:45,956
用户活动的活动类型是否在


757
00:19:45,956 --> 00:19:47,336
info.plist NSUserActivityTyped 序列里


758
00:19:47,336 --> 00:19:48,986
来确保你的 App


759
00:19:48,986 --> 00:19:51,766
支持某个捷径的执行指令


760
00:19:52,616 --> 00:19:53,816
或者 你的 Intent


761
00:19:53,816 --> 00:19:55,656
在你的 Intent 扩展程序列表上


762
00:19:56,226 --> 00:19:58,736
如果除了 iOS 上


763
00:19:58,736 --> 00:19:59,826
没有其他已安装的 App


764
00:19:59,826 --> 00:20:01,956
能处理你的捷径


765
00:20:01,956 --> 00:20:03,316
我们将把它返回手机运行


766
00:20:03,316 --> 00:20:04,366
即使你的手机


767
00:20:04,366 --> 00:20:05,786
不在用户附近


768
00:20:06,916 --> 00:20:08,556
鉴于我们现在可以把内容


769
00:20:08,556 --> 00:20:09,846
返回到手机上执行


770
00:20:09,846 --> 00:20:10,766
我们想确保用户


771
00:20:10,766 --> 00:20:12,116
不会轻点卡片 然后


772
00:20:12,116 --> 00:20:13,676
被立即告知去拿自己的手机


773
00:20:13,676 --> 00:20:15,286
所以 我们有一些关于


774
00:20:15,286 --> 00:20:16,536
我们愿意在手机上执行的


775
00:20:16,536 --> 00:20:18,516
捷径类型的相关规则


776
00:20:19,276 --> 00:20:21,126
要求就是它们是


777
00:20:21,126 --> 00:20:21,756
基于 Intent 构建的


778
00:20:22,386 --> 00:20:23,796
它们会处理后台运行的执行指令


779
00:20:24,236 --> 00:20:25,316
而且 它们不需要


780
00:20:25,316 --> 00:20:26,076
保护数据准入


781
00:20:26,246 --> 00:20:27,266
即手机锁屏时


782
00:20:27,266 --> 00:20:29,116
你要加密的数据


783
00:20:30,446 --> 00:20:31,496
确认你的内容是否


784
00:20:31,496 --> 00:20:33,316
符合要求的方法就是


785
00:20:33,316 --> 00:20:34,256
查看你自定义 Intent


786
00:20:34,256 --> 00:20:35,276
里的参数组合


787
00:20:35,276 --> 00:20:38,576
并确保它支持后台运行


788
00:20:39,056 --> 00:20:40,796
查看你所有的


789
00:20:40,876 --> 00:20:42,246
自定义 Intent 看看你采用的


790
00:20:42,246 --> 00:20:43,576
方式有没有什么


791
00:20:43,576 --> 00:20:44,466
验证限制


792
00:20:45,406 --> 00:20:46,306
这里有三个选项


793
00:20:46,306 --> 00:20:47,336
我们支持前两种


794
00:20:47,786 --> 00:20:48,636
第一种里面没有


795
00:20:48,636 --> 00:20:49,316
任何限制


796
00:20:49,936 --> 00:20:51,626
第二种显示当你的设备锁住时


797
00:20:51,626 --> 00:20:52,786
你被限制住了


798
00:20:52,786 --> 00:20:53,926
这意味着至少要


799
00:20:53,926 --> 00:20:54,886
解锁 Watch


800
00:20:54,886 --> 00:20:55,956
我们才能执行它


801
00:20:56,306 --> 00:20:58,276
最后一种是


802
00:20:58,276 --> 00:20:59,826
锁定时限制 或者


803
00:20:59,826 --> 00:21:00,486
保护数据不可用


804
00:21:01,916 --> 00:21:03,996
现在各位已经了解了所有


805
00:21:03,996 --> 00:21:05,026
在 Watch 和手机上


806
00:21:05,026 --> 00:21:05,976
创建优秀的捷径


807
00:21:05,976 --> 00:21:06,276
需要的信息


808
00:21:06,616 --> 00:21:07,516
下面 我将会把场地交给 Josh


809
00:21:07,516 --> 00:21:08,766
他将为大家介绍


810
00:21:08,766 --> 00:21:09,766
更多关于预测引擎的内容


811
00:21:09,766 --> 00:21:09,966
谢谢大家


812
00:21:10,516 --> 00:21:17,416
[ 掌声 ]


813
00:21:17,916 --> 00:21:18,406
>> 感谢 Paul


814
00:21:19,686 --> 00:21:20,166
早上好


815
00:21:20,686 --> 00:21:22,176
我叫 Josh


816
00:21:22,176 --> 00:21:23,516
我是团队的一名工程师


817
00:21:23,816 --> 00:21:25,236
我们很开心能制作出多种


818
00:21:25,236 --> 00:21:26,536
呈现在用户的


819
00:21:26,536 --> 00:21:28,766
Siri 表盘上的 Relevant Shortcut


820
00:21:29,256 --> 00:21:31,186
Paul 刚刚为大家介绍了


821
00:21:31,186 --> 00:21:32,616
一些 API 的内容


822
00:21:32,616 --> 00:21:34,456
以及向系统提供你的


823
00:21:34,456 --> 00:21:35,866
Relevant Shortcut 的不同方式


824
00:21:36,576 --> 00:21:37,916
现在 我想介绍下系统


825
00:21:37,916 --> 00:21:38,926
是如何预测你的


826
00:21:38,926 --> 00:21:40,336
Relevant Shortcut 的


827
00:21:40,336 --> 00:21:42,166
以及你可以做些什么


828
00:21:42,166 --> 00:21:43,946
来确保系统能在


829
00:21:44,056 --> 00:21:45,426
最恰当的时候向用户呈现你的内容


830
00:21:48,096 --> 00:21:49,136
正如 Paul 刚刚谈到的


831
00:21:49,136 --> 00:21:50,946
Siri 表盘上的内容


832
00:21:50,946 --> 00:21:52,116
是根据其对用户的


833
00:21:52,116 --> 00:21:53,316
相关性来排序的


834
00:21:53,936 --> 00:21:55,586
每当用户抬起手臂时


835
00:21:55,586 --> 00:21:57,196
我们想给他们呈现


836
00:21:57,196 --> 00:21:58,366
他们最关心的内容


837
00:21:58,666 --> 00:21:59,506
不论是根据当前的


838
00:21:59,506 --> 00:22:01,726
时间 地点 还是整个


839
00:22:01,726 --> 00:22:03,006
系统内的其他因素而产生的


840
00:22:03,526 --> 00:22:06,646
为了解用户


841
00:22:06,646 --> 00:22:07,676
最关心什么内容


842
00:22:07,676 --> 00:22:09,276
我们需要看一下他们在


843
00:22:09,566 --> 00:22:10,786
Siri 表盘上是如何


844
00:22:10,786 --> 00:22:11,716
与不同卡片进行互动的


845
00:22:12,176 --> 00:22:13,306
他们在轻点什么内容呢


846
00:22:13,426 --> 00:22:14,196
他们花费大量时间


847
00:22:14,196 --> 00:22:15,246
观看的是什么呢


848
00:22:15,476 --> 00:22:15,996
他们为寻找其他内容


849
00:22:15,996 --> 00:22:18,166
而滑过的又是些什么呢


850
00:22:18,696 --> 00:22:20,296
我们用所有的这些信息


851
00:22:20,296 --> 00:22:22,326
来了解用户抬起手臂时


852
00:22:22,326 --> 00:22:23,436
想要立刻看到


853
00:22:23,436 --> 00:22:25,066
不同的卡片是什么


854
00:22:26,016 --> 00:22:30,866
由于我们试着再次显示


855
00:22:30,866 --> 00:22:32,726
用户最关心的内容


856
00:22:32,726 --> 00:22:33,246
你需要确保你提供在


857
00:22:33,246 --> 00:22:34,846
Siri 表盘上的内容


858
00:22:34,846 --> 00:22:36,246
是相关的


859
00:22:36,246 --> 00:22:36,976
并且足够吸引人


860
00:22:40,796 --> 00:22:42,026
下面 让我们进一步谈谈


861
00:22:42,026 --> 00:22:43,846
如何把你的


862
00:22:43,846 --> 00:22:45,526
Relevant Shortcut 显示在 Siri 表盘上


863
00:22:45,846 --> 00:22:47,346
正如 Paul 之前提到的


864
00:22:47,406 --> 00:22:48,416
第一步 你需要给系统


865
00:22:48,416 --> 00:22:49,596
提供你的 Relevant Shortcut


866
00:22:49,596 --> 00:22:50,916
你需要提供到


867
00:22:50,916 --> 00:22:52,806
默认的 Relevant Shortcuts Store


868
00:22:54,006 --> 00:22:54,986
一旦你提供了你的


869
00:22:54,986 --> 00:22:56,946
Relevant Shortcut 我们就可以


870
00:22:56,946 --> 00:22:57,816
通过我们的


871
00:22:57,816 --> 00:22:58,846
机器学习模型来弄清


872
00:22:58,926 --> 00:23:00,136
向用户呈现


873
00:23:00,136 --> 00:23:01,556
Relevant Shortcut 的


874
00:23:01,556 --> 00:23:02,466
最佳方式是什么


875
00:23:03,076 --> 00:23:04,236
那么 让我们来看看我们在这个


876
00:23:04,236 --> 00:23:05,866
模式里都考虑到了什么因素


877
00:23:07,126 --> 00:23:08,546
我们看到的第一个就是


878
00:23:08,546 --> 00:23:10,116
你的 Relevance Provider


879
00:23:10,776 --> 00:23:12,496
这是你向系统提供


880
00:23:12,496 --> 00:23:14,356
我们没有的


881
00:23:14,626 --> 00:23:15,786
附加语境的方式


882
00:23:16,066 --> 00:23:17,506
可能是一个具体的时间


883
00:23:17,766 --> 00:23:19,696
位置或其他语境


884
00:23:21,286 --> 00:23:22,756
我们也会查看用户过去的行为


885
00:23:22,826 --> 00:23:24,416
那么 用户之前是如何


886
00:23:24,416 --> 00:23:25,936
与这个 Relevant Shortcut 互动的呢


887
00:23:26,356 --> 00:23:27,176
它是用户花费大量时间


888
00:23:27,176 --> 00:23:28,496
在表盘上轻点


889
00:23:28,496 --> 00:23:29,626
并浏览的那个吗


890
00:23:29,936 --> 00:23:30,436
或者 是他们为寻找


891
00:23:30,436 --> 00:23:32,666
更有趣内容而滑过的那个


892
00:23:34,506 --> 00:23:36,076
我们在众多其他因素中


893
00:23:36,076 --> 00:23:37,166
还看了系统内的


894
00:23:37,196 --> 00:23:38,536
许多不同的因素 比如说


895
00:23:38,536 --> 00:23:41,666
当前的时间 星期几


896
00:23:41,666 --> 00:23:43,646
当前的位置


897
00:23:43,646 --> 00:23:44,456
用户的日常活动


898
00:23:44,516 --> 00:23:46,126
将这些都考虑到


899
00:23:46,366 --> 00:23:48,146
可以更好的了解


900
00:23:48,146 --> 00:23:49,746
当用户想要和特定的


901
00:23:49,746 --> 00:23:51,096
捷径互动时


902
00:23:51,096 --> 00:23:52,116
的语境应该是什么


903
00:23:52,626 --> 00:23:57,296
还值得注意的一点是


904
00:23:57,296 --> 00:23:59,406
这个模型对每个用户都很安全


905
00:23:59,406 --> 00:24:00,676
并且可以自定义的


906
00:24:01,066 --> 00:24:02,526
我们所有的学习都是


907
00:24:02,636 --> 00:24:05,496
在设备上进行的 并且我们正在制作


908
00:24:05,496 --> 00:24:07,306
一个可以针对每一个用户


909
00:24:07,306 --> 00:24:08,806
和 Siri 表盘的模型


910
00:24:08,876 --> 00:24:10,126
你和表盘互动的方式


911
00:24:10,126 --> 00:24:11,226
也许和我与表盘


912
00:24:11,226 --> 00:24:12,646
互动的方式有所不同


913
00:24:14,146 --> 00:24:15,546
一旦我们有了这个已训练模型


914
00:24:15,546 --> 00:24:17,436
我们就可以运行你的


915
00:24:17,436 --> 00:24:19,326
Relevant Shortcut


916
00:24:19,406 --> 00:24:20,586
并且根据它们对用户的


917
00:24:20,586 --> 00:24:21,976
相关性把它们再次显示在 Siri 表盘上


918
00:24:26,416 --> 00:24:27,376
如果你之前听过一些


919
00:24:27,376 --> 00:24:29,136
关于捷径的讲座


920
00:24:29,136 --> 00:24:30,396
那你可能听说过捐赠


921
00:24:31,126 --> 00:24:32,726
这是你给系统指示的方式


922
00:24:32,726 --> 00:24:34,606
来让它知道用户在你的


923
00:24:34,606 --> 00:24:35,266
App 内做什么


924
00:24:36,846 --> 00:24:37,926
尽管实际上它们不会在


925
00:24:37,926 --> 00:24:39,186
Siri 表盘的 UI 里


926
00:24:39,186 --> 00:24:41,816
显示出来 当我们想要


927
00:24:41,816 --> 00:24:43,176
了解用户过去的行为时


928
00:24:43,176 --> 00:24:44,886
我们还是会将其考虑进去


929
00:24:47,416 --> 00:24:49,556
再次强调


930
00:24:49,556 --> 00:24:51,406
捐赠是指示重要任务


931
00:24:51,746 --> 00:24:53,186
或其他关于用户


932
00:24:53,186 --> 00:24:54,816
在你的 App 内的活动信息


933
00:24:54,816 --> 00:24:56,936
并将其提供给系统的重要方式


934
00:24:58,546 --> 00:25:00,006
通过向系统提供这一信息


935
00:25:00,006 --> 00:25:01,996
我们可以明白并学会


936
00:25:01,996 --> 00:25:03,836
用户行为当中存在的模式


937
00:25:03,836 --> 00:25:06,646
例如 如果用户


938
00:25:06,646 --> 00:25:07,766
每天都在同一个时间观看


939
00:25:07,766 --> 00:25:08,996
或在相似的位置


940
00:25:08,996 --> 00:25:10,966
做出相同的动作


941
00:25:10,966 --> 00:25:12,746
系统就会挑出这些模式


942
00:25:12,746 --> 00:25:14,186
然后在最合适的时候


943
00:25:14,186 --> 00:25:15,526
让它们出现在


944
00:25:15,556 --> 00:25:17,456
Relevant Shortcut 中


945
00:25:19,236 --> 00:25:21,886
所以 如果你在用


946
00:25:21,886 --> 00:25:23,426
NSUserActivities 来显示


947
00:25:23,566 --> 00:25:25,286
你的捐赠


948
00:25:25,286 --> 00:25:26,416
为了向系统提供你的捐赠


949
00:25:26,536 --> 00:25:27,576
你需要了解


950
00:25:27,576 --> 00:25:28,066
以下的内容


951
00:25:28,706 --> 00:25:30,056
首先你需要把


952
00:25:30,106 --> 00:25:31,296
这些属性在你的 NSUserActivity


953
00:25:31,296 --> 00:25:32,856
eligibleForPrediction


954
00:25:32,856 --> 00:25:34,096
和 eligibleForSearch 中


955
00:25:34,096 --> 00:25:35,066
设置为 "true"


956
00:25:37,056 --> 00:25:38,156
接下来 你需要在你的


957
00:25:38,156 --> 00:25:39,436
info.plist 内指示


958
00:25:39,436 --> 00:25:40,936
来确保有一个 App


959
00:25:40,936 --> 00:25:42,206
支持你的用户活动


960
00:25:43,936 --> 00:25:44,926
最后 你想要确认


961
00:25:44,926 --> 00:25:46,056
无论用户在何时


962
00:25:46,056 --> 00:25:47,196
看到了这条内容


963
00:25:47,236 --> 00:25:48,636
你都可以捐赠这些


964
00:25:48,636 --> 00:25:50,966
用户活动 这样一来 系统就可以


965
00:25:50,966 --> 00:25:51,566
开始挑选模式


966
00:25:51,966 --> 00:25:54,696
为了能够进行捐赠


967
00:25:54,696 --> 00:25:56,166
在 NSUserActivity 上


968
00:25:56,216 --> 00:25:57,756
有一个方法叫做 becomeCurrent


969
00:25:58,006 --> 00:25:59,546
它允许你向系统进行捐赠


970
00:26:01,216 --> 00:26:03,166
不过 在新的 5 中


971
00:26:03,166 --> 00:26:03,906
还有一个方法是


972
00:26:04,246 --> 00:26:05,816
updateUserActivity


973
00:26:05,816 --> 00:26:07,706
它存在于 WKInterfaceController 上


974
00:26:07,706 --> 00:26:09,596
你可以在这上面将你的用户活动


975
00:26:09,596 --> 00:26:11,226
附加到一个 interfaceController 上


976
00:26:11,226 --> 00:26:13,036
每当用户见到这个 interfaceController


977
00:26:13,116 --> 00:26:14,336
系统就会自动


978
00:26:14,336 --> 00:26:17,166
代你捐赠用户活动


979
00:26:17,916 --> 00:26:19,416
这和我们在 iOS 上


980
00:26:19,416 --> 00:26:21,116
UIViewController 中的 API


981
00:26:21,116 --> 00:26:22,036
以及 UIResponder 上的 API 相似


982
00:26:22,036 --> 00:26:23,536
你可以在这些上面


983
00:26:23,536 --> 00:26:26,116
给你的 UI 附加


984
00:26:26,116 --> 00:26:26,796
NSUserActivity


985
00:26:28,066 --> 00:26:29,166
那么 这就是


986
00:26:29,166 --> 00:26:30,846
我们推荐的在  上进行


987
00:26:31,026 --> 00:26:32,966
NSUserActivity 捐赠的方式


988
00:26:34,416 --> 00:26:37,436
如果有一个 Intent 支持你的捷径


989
00:26:37,436 --> 00:26:39,786
你可以通过使用


990
00:26:39,886 --> 00:26:41,726
INInteraction API


991
00:26:41,826 --> 00:26:42,786
来进行 Intent 捐赠


992
00:26:43,186 --> 00:26:45,096
所以 如果你之前参加过


993
00:26:45,096 --> 00:26:46,166
别的有关捷径的讲座


994
00:26:46,166 --> 00:26:47,286
你可能会对这个很熟悉


995
00:26:47,286 --> 00:26:49,696
不过 要想进行这个捐赠


996
00:26:49,696 --> 00:26:50,786
首先你要创建你的 Intent


997
00:26:51,196 --> 00:26:52,656
并且调整每一个参数


998
00:26:52,656 --> 00:26:53,576
因为它们对用户在你的 App 内


999
00:26:53,576 --> 00:26:54,636
进行的活动而言十分重要


1000
00:26:55,506 --> 00:26:56,596
接下来 你要用 Intent


1001
00:26:56,596 --> 00:26:58,476
创建你的 INInteraction


1002
00:26:58,476 --> 00:27:00,276
并且在用户做出这一


1003
00:27:00,276 --> 00:27:01,916
特定互动时 调用捐赠方法


1004
00:27:02,496 --> 00:27:05,556
另一个值得注意的是


1005
00:27:05,886 --> 00:27:07,526
这个主要的捷径类型


1006
00:27:07,526 --> 00:27:09,936
我们在作出预测时要用到它


1007
00:27:10,036 --> 00:27:12,716
那么 让我们来看一下这一内容


1008
00:27:13,396 --> 00:27:15,216
在 Xcode Intent editor 中


1009
00:27:15,216 --> 00:27:16,466
你会发现


1010
00:27:16,466 --> 00:27:18,326
有一栏可以选择


1011
00:27:18,326 --> 00:27:19,446
主要的捷径类型


1012
00:27:20,276 --> 00:27:21,666
它允许你向系统发出指示


1013
00:27:21,666 --> 00:27:24,296
例如 你的 App 最关键的


1014
00:27:24,296 --> 00:27:24,646
使用案例


1015
00:27:25,106 --> 00:27:26,616
下面让我们来进一步看看


1016
00:27:26,616 --> 00:27:29,366
这是什么意思


1017
00:27:30,456 --> 00:27:31,786
通过指定主要的捷径类型


1018
00:27:31,786 --> 00:27:33,086
你就像是在


1019
00:27:33,086 --> 00:27:34,696
告诉系统 你所认为


1020
00:27:34,696 --> 00:27:36,206
用户最关心的


1021
00:27:36,206 --> 00:27:37,426
使用案例是什么


1022
00:27:37,426 --> 00:27:38,906
这可以帮我们的


1023
00:27:38,906 --> 00:27:39,766
学习模型加速


1024
00:27:41,366 --> 00:27:42,616
你可以指示任意一个这些你已经


1025
00:27:42,686 --> 00:27:43,866
定义的 Intent


1026
00:27:45,616 --> 00:27:46,986
为达到最佳性能


1027
00:27:47,246 --> 00:27:48,846
参数组合


1028
00:27:48,846 --> 00:27:50,436
和选择 都会有一个


1029
00:27:50,436 --> 00:27:51,526
你在 Relevant Shortcut


1030
00:27:51,526 --> 00:27:52,536
提供的参数的子集


1031
00:27:52,776 --> 00:27:53,786
接下来 我们将展示几个例子


1032
00:27:53,786 --> 00:27:54,796
来让大家理解


1033
00:27:54,796 --> 00:27:58,066
这是什么意思


1034
00:27:58,476 --> 00:27:59,746
不过 通过向系统传递这一信息


1035
00:27:59,746 --> 00:28:01,436
我们可以在用户行为中


1036
00:28:01,436 --> 00:28:03,296
更快地挑出相应模式


1037
00:28:03,296 --> 00:28:04,866
更快地知道


1038
00:28:04,866 --> 00:28:06,176
用户最想要的


1039
00:28:06,176 --> 00:28:08,236
Relevant Shortcut 是什么


1040
00:28:10,476 --> 00:28:11,836
首先 我们有一个


1041
00:28:11,836 --> 00:28:12,446
叫 Messaging 的 App


1042
00:28:12,736 --> 00:28:13,766
我和 Paul 已经


1043
00:28:13,766 --> 00:28:14,806
用了一阵这个软件


1044
00:28:14,806 --> 00:28:16,046
每天早上


1045
00:28:16,046 --> 00:28:17,386
我们都会反复地发短信


1046
00:28:17,776 --> 00:28:19,086
有时候它会准备好


1047
00:28:19,086 --> 00:28:20,666
开始这样的对话


1048
00:28:20,666 --> 00:28:22,316
而有时候则是关于我们午饭要吃


1049
00:28:23,176 --> 00:28:24,686
哪一种曲奇饼


1050
00:28:24,846 --> 00:28:26,396
这个 App 已经采用了


1051
00:28:26,396 --> 00:28:28,006
Siri 捷径


1052
00:28:28,006 --> 00:28:29,096
并且 他们定义了一些


1053
00:28:29,096 --> 00:28:30,316
他们 App 支持的


1054
00:28:30,316 --> 00:28:30,996
不同的参数


1055
00:28:31,256 --> 00:28:32,566
第一个是接受者


1056
00:28:32,886 --> 00:28:34,326
我的信息是发给谁的呢


1057
00:28:34,376 --> 00:28:36,796
第二个是信息


1058
00:28:37,016 --> 00:28:38,126
那么 我想发送的


1059
00:28:38,126 --> 00:28:39,156
信息内容是什么呢


1060
00:28:40,416 --> 00:28:41,946
正如我前面提到的


1061
00:28:41,946 --> 00:28:43,206
不错 我和 Paul 每一天的早晨


1062
00:28:43,206 --> 00:28:45,026
都在使用这个 App


1063
00:28:45,026 --> 00:28:46,266
但是我们发送的


1064
00:28:46,266 --> 00:28:47,396
实际内容


1065
00:28:47,476 --> 00:28:48,406
每天都不一样


1066
00:28:49,366 --> 00:28:50,886
所以 由于这一原因


1067
00:28:50,886 --> 00:28:52,166
这可能不是主要的捷径类型


1068
00:28:52,166 --> 00:28:53,326
的最佳选择


1069
00:28:53,326 --> 00:28:54,836
系统会需要更长的时间


1070
00:28:54,926 --> 00:28:56,126
才能明白


1071
00:28:56,126 --> 00:28:57,806
我想要的


1072
00:28:57,806 --> 00:28:59,026
捷径是什么


1073
00:28:59,516 --> 00:29:02,356
鉴于我和 Paul


1074
00:29:02,356 --> 00:29:03,706
经常联系


1075
00:29:03,706 --> 00:29:05,056
所以系统可以十分迅速地


1076
00:29:05,056 --> 00:29:06,296
挑出这一模式


1077
00:29:06,296 --> 00:29:07,206
即我每天早上都


1078
00:29:07,206 --> 00:29:10,486
给 Paul 发短信


1079
00:29:10,896 --> 00:29:12,176
有一个更有趣的例子


1080
00:29:12,176 --> 00:29:13,626
就是我每天早晨我用来


1081
00:29:13,626 --> 00:29:14,736
点咖啡的这个 App


1082
00:29:15,846 --> 00:29:17,166
这个 App 同样


1083
00:29:17,166 --> 00:29:18,356
采用了 Siri 捷径


1084
00:29:18,746 --> 00:29:20,176
他们支持几个


1085
00:29:20,176 --> 00:29:21,116
不同的参数


1086
00:29:21,346 --> 00:29:22,656
第一个是我想买的


1087
00:29:22,656 --> 00:29:23,546
咖啡种类


1088
00:29:24,026 --> 00:29:25,606
下一个是调味品


1089
00:29:25,606 --> 00:29:26,786
我想加奶油还是加糖呢


1090
00:29:27,556 --> 00:29:29,146
最后一个是


1091
00:29:29,146 --> 00:29:30,376
我想去哪里取我的咖啡


1092
00:29:31,986 --> 00:29:33,546
所以 我每天都用这个 App


1093
00:29:33,546 --> 00:29:34,936
去一个地方点我的


1094
00:29:34,936 --> 00:29:35,606
早间咖啡


1095
00:29:36,126 --> 00:29:37,076
但是 这要视我在哪里


1096
00:29:37,076 --> 00:29:38,426
开会而定


1097
00:29:38,426 --> 00:29:39,676
我想取咖啡的位置


1098
00:29:39,676 --> 00:29:40,656
会逐日改变


1099
00:29:41,046 --> 00:29:42,206
可能我会去 Infinite Loop


1100
00:29:42,206 --> 00:29:43,726
或者 Apple Park


1101
00:29:43,726 --> 00:29:45,556
或者洛杉矶


1102
00:29:45,556 --> 00:29:46,616
而且我想要在最近的店里


1103
00:29:46,616 --> 00:29:47,416
取我的咖啡


1104
00:29:48,236 --> 00:29:50,496
所以 由于位置变动的


1105
00:29:50,496 --> 00:29:52,056
可能性很大


1106
00:29:52,496 --> 00:29:53,436
这可能并不是


1107
00:29:53,436 --> 00:29:54,906
主要捷径类型的最佳选择


1108
00:29:54,906 --> 00:29:56,366
系统可能也需要


1109
00:29:56,366 --> 00:29:57,276
更长的时间来


1110
00:29:57,276 --> 00:29:58,776
了解我行为


1111
00:29:58,776 --> 00:29:59,296
中的模式


1112
00:30:00,066 --> 00:30:02,146
然而 我每一次


1113
00:30:02,146 --> 00:30:03,506
下单的内容


1114
00:30:03,506 --> 00:30:04,056
都是相同的


1115
00:30:04,156 --> 00:30:05,316
我总是点一杯加等量


1116
00:30:05,316 --> 00:30:06,876
奶油和糖的拿铁


1117
00:30:07,266 --> 00:30:08,306
这可以是主要的


1118
00:30:08,306 --> 00:30:09,516
捷径类型的


1119
00:30:09,516 --> 00:30:12,616
一个最佳选择


1120
00:30:13,056 --> 00:30:14,586
而且 咖啡本身


1121
00:30:14,666 --> 00:30:16,206
可能太普通了 对吧


1122
00:30:16,206 --> 00:30:18,166
加点调味品的咖啡


1123
00:30:18,466 --> 00:30:20,646
可能是更好的主要捷径类型


1124
00:30:22,046 --> 00:30:23,956
这就是你如何


1125
00:30:23,956 --> 00:30:25,866
在 App 内提供


1126
00:30:25,866 --> 00:30:27,666
用户在做什么这一信息的方式


1127
00:30:28,006 --> 00:30:29,566
现在 让我们来谈谈我们将如何


1128
00:30:29,566 --> 00:30:31,026
预测你的 Relevant Shortcut


1129
00:30:32,046 --> 00:30:33,746
谈到这个内容


1130
00:30:33,746 --> 00:30:34,656
我们将看下几个


1131
00:30:34,656 --> 00:30:36,806
不同的 App


1132
00:30:36,996 --> 00:30:38,586
第一个是这个叫 Recipes 的 App


1133
00:30:38,586 --> 00:30:41,396
我每一天都用这个 App


1134
00:30:41,396 --> 00:30:42,706
来为我提供我可能


1135
00:30:42,706 --> 00:30:43,906
想尝试的食谱推荐


1136
00:30:46,076 --> 00:30:47,226
下一个是这个叫


1137
00:30:47,226 --> 00:30:48,726
Fitness Trainer 的 App


1138
00:30:48,726 --> 00:30:49,936
它会提醒我外出


1139
00:30:49,936 --> 00:30:51,446
在晚上跑跑步


1140
00:30:52,186 --> 00:30:54,396
最后是这个叫


1141
00:30:54,396 --> 00:30:56,396
Travel Guide 的 App


1142
00:30:56,396 --> 00:30:57,486
它会在我外出时 或我出现在


1143
00:30:57,486 --> 00:30:58,586
有趣的地点附近时


1144
00:30:58,586 --> 00:30:59,466
出现在屏幕上 这样我就可以去到


1145
00:30:59,506 --> 00:30:59,796
那些地方


1146
00:31:00,886 --> 00:31:02,416
这三个 App 中的每一个


1147
00:31:02,416 --> 00:31:04,286
都会属于


1148
00:31:04,286 --> 00:31:05,566
我们的三种分类里的


1149
00:31:05,566 --> 00:31:08,526
其中一个我们把第一个称之为


1150
00:31:08,526 --> 00:31:09,056
"Downtime"


1151
00:31:09,666 --> 00:31:10,556
它没有与其相关的


1152
00:31:10,556 --> 00:31:11,886
具体的时间


1153
00:31:11,886 --> 00:31:13,996
或具体的位置


1154
00:31:14,206 --> 00:31:15,786
我想和这个


1155
00:31:15,786 --> 00:31:17,266
Recipes App 


1156
00:31:17,266 --> 00:31:18,266
互动的时间


1157
00:31:18,266 --> 00:31:19,036
并不固定


1158
00:31:19,876 --> 00:31:21,026
然而 这个 Fitness Trainer 


1159
00:31:21,026 --> 00:31:22,756
App 有一个非常


1160
00:31:22,756 --> 00:31:23,676
具体的时间 对吧


1161
00:31:24,036 --> 00:31:25,716
我已经将晚上八点


1162
00:31:25,756 --> 00:31:27,036
设置为在表盘上


1163
00:31:27,036 --> 00:31:28,806
提醒我的最佳时间了


1164
00:31:29,756 --> 00:31:31,016
通过传给系统这一信息


1165
00:31:31,016 --> 00:31:33,186
我们可以更精确地将


1166
00:31:33,186 --> 00:31:34,936
这一特定的 Relevant Shortcut


1167
00:31:34,936 --> 00:31:35,996
与我们需要考虑的


1168
00:31:35,996 --> 00:31:37,436
其他因素进行排序


1169
00:31:39,246 --> 00:31:40,706
同样 这个 Travel Guide App


1170
00:31:40,816 --> 00:31:42,616
也知道它该何时


1171
00:31:42,616 --> 00:31:44,176
显示其相应的


1172
00:31:44,176 --> 00:31:45,066
Relevant Shortcut 对吧


1173
00:31:45,066 --> 00:31:46,456
它知道用户感兴趣的所有位置


1174
00:31:46,456 --> 00:31:47,566
在这个例子中


1175
00:31:47,566 --> 00:31:48,296
即金门公园


1176
00:31:48,916 --> 00:31:50,126
再次 通过传递给系统


1177
00:31:50,126 --> 00:31:51,746
这一信息


1178
00:31:51,746 --> 00:31:54,026
我们可以预测特定的


1179
00:31:54,096 --> 00:31:55,776
捷径的相关性


1180
00:31:58,576 --> 00:31:59,736
要向系统提供


1181
00:31:59,736 --> 00:32:01,016
这样的附加语境


1182
00:32:01,016 --> 00:32:02,286
不论是具体的时间


1183
00:32:02,286 --> 00:32:03,796
地点 或是其他的信息


1184
00:32:04,516 --> 00:32:06,316
你都可以通过


1185
00:32:06,316 --> 00:32:07,346
RelevanceProvider API 来提供


1186
00:32:07,346 --> 00:32:08,926
这就允许你


1187
00:32:08,926 --> 00:32:10,736
在你的内容对用户


1188
00:32:10,736 --> 00:32:12,086
最具重要性时


1189
00:32:12,086 --> 00:32:13,226
向系统发出指示


1190
00:32:15,896 --> 00:32:17,156
它也允许你向用户显示


1191
00:32:17,156 --> 00:32:18,586
他们之前可能没见过的


1192
00:32:18,586 --> 00:32:19,296
一些新内容


1193
00:32:20,166 --> 00:32:21,306
既然你向系统提供了


1194
00:32:21,306 --> 00:32:22,646
这些附加提示


1195
00:32:23,466 --> 00:32:24,556
在系统确信这是用户


1196
00:32:24,556 --> 00:32:27,616
最感兴趣的事情之前


1197
00:32:27,616 --> 00:32:28,986
我们无需看到过多


1198
00:32:28,986 --> 00:32:30,466
用户过去的行为与连贯性


1199
00:32:33,056 --> 00:32:34,826
不过 我们一定要记住


1200
00:32:34,826 --> 00:32:36,816
在每一个过程都要


1201
00:32:36,816 --> 00:32:39,256
考虑用户的参与度


1202
00:32:39,646 --> 00:32:40,626
不论你是否提供了


1203
00:32:40,626 --> 00:32:42,026
Relevance Provider


1204
00:32:42,026 --> 00:32:43,036
我们都想确定


1205
00:32:43,036 --> 00:32:44,416
我们所显示的内容


1206
00:32:44,416 --> 00:32:44,976
正是用户最关心的内容


1207
00:32:49,156 --> 00:32:51,266
下面 让我们再来看一下


1208
00:32:51,266 --> 00:32:52,016
这个 Recipes App


1209
00:32:52,416 --> 00:32:53,376
就像我们之前提到的


1210
00:32:53,376 --> 00:32:54,926
它没有一个


1211
00:32:54,926 --> 00:32:56,626
与之相关的具体的


1212
00:32:56,626 --> 00:32:58,536
时间或位置 对吧


1213
00:32:58,536 --> 00:32:59,676
我想和这个 App


1214
00:32:59,676 --> 00:33:01,346
互动的时间可能是


1215
00:33:01,346 --> 00:33:02,446
做晚饭的时候 然而对你而言可能是


1216
00:33:02,446 --> 00:33:03,326
做午饭的时候


1217
00:33:04,876 --> 00:33:06,336
那这样一来


1218
00:33:06,556 --> 00:33:08,526
我们可能实际上在指示


1219
00:33:08,526 --> 00:33:09,566
Relevance Provider 的一个空集


1220
00:33:12,146 --> 00:33:13,496
这样 系统将基于


1221
00:33:13,496 --> 00:33:15,166
用户之前与这个捷径


1222
00:33:15,166 --> 00:33:17,016
互动的情况


1223
00:33:17,016 --> 00:33:18,216
来确定这一特定捷径


1224
00:33:18,216 --> 00:33:19,046
的相关性


1225
00:33:19,346 --> 00:33:20,736
于我而言 我经常在


1226
00:33:20,736 --> 00:33:22,096
晚上七点左右使用它


1227
00:33:22,096 --> 00:33:23,436
因为我在这个时间做晚饭


1228
00:33:23,436 --> 00:33:24,496
所以这也是系统把这个


1229
00:33:24,756 --> 00:33:27,126
Relevant Shortcut 显示在表盘上的时间


1230
00:33:29,046 --> 00:33:30,086
然而 如果我们看一下


1231
00:33:30,086 --> 00:33:31,446
这个 Fitness Trainer App


1232
00:33:31,746 --> 00:33:33,006
它有与之相关的具体时间


1233
00:33:33,006 --> 00:33:34,626
你可以通过


1234
00:33:34,626 --> 00:33:36,156
创建一个 dateRelevanceProvider


1235
00:33:36,156 --> 00:33:37,846
来提供这个时间


1236
00:33:37,846 --> 00:33:39,406
在这里即把晚上八点


1237
00:33:39,406 --> 00:33:39,926
作为显示时间


1238
00:33:42,606 --> 00:33:43,906
通过向系统传递这一信息


1239
00:33:43,906 --> 00:33:45,846
我们会在一天当中的


1240
00:33:45,846 --> 00:33:47,496
某个特定时间附近


1241
00:33:47,496 --> 00:33:48,146
显示这个内容


1242
00:33:49,596 --> 00:33:50,776
当时间越来越接近


1243
00:33:50,776 --> 00:33:52,256
晚上八点


1244
00:33:52,346 --> 00:33:53,596
这一内容对用户的相关性


1245
00:33:53,596 --> 00:33:54,656
也就越来越高


1246
00:33:55,006 --> 00:33:56,506
那么让我们来看一下


1247
00:33:57,726 --> 00:34:00,116
这是我的 Siri 表盘上


1248
00:34:00,336 --> 00:34:01,786
可能会有的几张卡片


1249
00:34:01,856 --> 00:34:03,316
第一个是日历 它提醒我


1250
00:34:03,316 --> 00:34:06,946
要为这个讲座进行一个预备会议


1251
00:34:06,946 --> 00:34:08,206
下一个是我使用的一个 App


1252
00:34:08,206 --> 00:34:10,775
它会给我一些太空新闻的趣闻


1253
00:34:11,786 --> 00:34:13,065
最后 来看一下这个


1254
00:34:13,065 --> 00:34:14,076
Fitness Trainer App


1255
00:34:14,076 --> 00:34:15,330
让我们来详细了解一下它


1256
00:34:20,036 --> 00:34:21,656
当我醒来


1257
00:34:21,656 --> 00:34:22,616
准备开始新的一天


1258
00:34:22,616 --> 00:34:24,016
时间大概是早上八点


1259
00:34:24,536 --> 00:34:25,815
你可以看到这个


1260
00:34:25,815 --> 00:34:26,946
Fitness Trainer App 实际上


1261
00:34:26,946 --> 00:34:29,216
已经显示在 Siri 表盘上了


1262
00:34:29,686 --> 00:34:30,896
我们想确保用户知道


1263
00:34:30,896 --> 00:34:31,916
他们在这一整天中


1264
00:34:31,916 --> 00:34:33,085
都需要做哪些事情


1265
00:34:33,085 --> 00:34:34,746
不过它会显示在


1266
00:34:34,746 --> 00:34:36,726
相对下面一点的位置


1267
00:34:36,726 --> 00:34:37,815
对于用户而言 这件事


1268
00:34:37,815 --> 00:34:38,686
目前并不是最紧要的


1269
00:34:39,795 --> 00:34:41,096
但是 当我们已经


1270
00:34:41,096 --> 00:34:42,896
在进行一天的活动时


1271
00:34:42,896 --> 00:34:44,166
日历上的事件


1272
00:34:44,166 --> 00:34:45,146
对我而言就不再相关了


1273
00:34:45,516 --> 00:34:46,505
那么 Fitness Trainer


1274
00:34:46,505 --> 00:34:47,696
的建议就会在表盘


1275
00:34:47,696 --> 00:34:48,456
上方出现 对吧


1276
00:34:48,706 --> 00:34:49,876
随着我们离晚上八点


1277
00:34:49,876 --> 00:34:51,246
越来越近 这个内容对我也就


1278
00:34:51,246 --> 00:34:53,226
越来越重要


1279
00:34:54,246 --> 00:34:55,556
当时间终于来到晚上八点


1280
00:34:55,556 --> 00:34:56,985
它也就成了


1281
00:34:56,985 --> 00:34:57,996
对我最重要的事情


1282
00:34:58,176 --> 00:34:59,186
它想确保我没有忘记


1283
00:34:59,186 --> 00:35:00,026
要去跑步这件事


1284
00:35:00,026 --> 00:35:02,136
所以 它就会在 Siri


1285
00:35:02,136 --> 00:35:05,926
表盘的顶部显示


1286
00:35:06,056 --> 00:35:07,026
现在 让我们来看一下


1287
00:35:07,026 --> 00:35:08,436
Travel Guide App


1288
00:35:08,436 --> 00:35:10,236
它也是要在用户出现在感兴趣的


1289
00:35:10,306 --> 00:35:11,396
有趣位置附近时


1290
00:35:11,396 --> 00:35:12,316
显示内容


1291
00:35:14,706 --> 00:35:15,896
各位可能已经猜到


1292
00:35:15,896 --> 00:35:17,096
你可以用一个


1293
00:35:17,096 --> 00:35:18,086
locationRelevanceProvider


1294
00:35:18,086 --> 00:35:19,466
向系统提供信息


1295
00:35:19,796 --> 00:35:21,646
在这个例子中就是


1296
00:35:21,696 --> 00:35:22,006
金门公园


1297
00:35:24,176 --> 00:35:26,006
通过向系统


1298
00:35:26,006 --> 00:35:27,616
提供这一信息


1299
00:35:27,616 --> 00:35:29,226
当用户开始向


1300
00:35:29,226 --> 00:35:30,746
金门公园靠近时


1301
00:35:30,936 --> 00:35:31,896
我们就会自动显示


1302
00:35:31,896 --> 00:35:32,366
这一内容


1303
00:35:33,376 --> 00:35:34,376
当用户离金门公园


1304
00:35:34,376 --> 00:35:35,606
越来越近


1305
00:35:35,606 --> 00:35:37,046
这一内容对用户来说


1306
00:35:37,046 --> 00:35:38,216
也就越来越相关


1307
00:35:40,276 --> 00:35:42,216
所以 假如我刚到洛杉矶


1308
00:35:42,216 --> 00:35:43,606
你可以看到


1309
00:35:43,606 --> 00:35:44,516
我们已经开始显示


1310
00:35:44,516 --> 00:35:45,986
建议用户去


1311
00:35:45,986 --> 00:35:47,006
金门公园的内容了


1312
00:35:47,606 --> 00:35:48,726
该内容会在表盘下方显示


1313
00:35:48,726 --> 00:35:49,796
因为现在对我来说


1314
00:35:49,796 --> 00:35:50,966
这并不是最要紧的事


1315
00:35:50,966 --> 00:35:52,586
但我们想确保用户


1316
00:35:52,586 --> 00:35:54,166
了解到这一内容


1317
00:35:55,256 --> 00:35:57,466
而且 随着我越来越靠近


1318
00:35:57,466 --> 00:35:58,756
金门公园


1319
00:35:58,756 --> 00:36:00,156
直到我最终到达金门公园


1320
00:36:00,156 --> 00:36:01,806
这一内容呈现与我越来越相关的趋势


1321
00:36:01,806 --> 00:36:03,296
我可以很容易地轻点


1322
00:36:03,296 --> 00:36:04,986
这个内容来了解更多详细内容


1323
00:36:05,236 --> 00:36:06,986
并查看我在金门公园都可以


1324
00:36:06,986 --> 00:36:07,656
做些什么


1325
00:36:10,036 --> 00:36:11,076
当你在创建你的


1326
00:36:11,076 --> 00:36:12,696
locationRelevanceProviders 时


1327
00:36:12,696 --> 00:36:14,616
你要给系统提供一个 CLRegion


1328
00:36:15,226 --> 00:36:16,036
这样 你就可以


1329
00:36:16,036 --> 00:36:17,856
指明两个重要的属性


1330
00:36:18,346 --> 00:36:21,666
第一个是实际坐标


1331
00:36:21,666 --> 00:36:22,636
你想在显示你的内容


1332
00:36:22,636 --> 00:36:24,806
的同时显示半径


1333
00:36:25,156 --> 00:36:26,536
那么 用户到底需要


1334
00:36:26,536 --> 00:36:27,946
离这些位置多近才能获得


1335
00:36:27,946 --> 00:36:30,946
相关的内容呢


1336
00:36:31,476 --> 00:36:32,746
CLRegion 里还有几个参数


1337
00:36:32,746 --> 00:36:34,626
你可以用它们


1338
00:36:34,626 --> 00:36:36,546
调整系统理解你的


1339
00:36:36,576 --> 00:36:37,486
区域的方式


1340
00:36:38,546 --> 00:36:40,106
第一个是 notifyOnEntry


1341
00:36:40,686 --> 00:36:42,036
所以 顾名思义


1342
00:36:42,466 --> 00:36:43,806
在这条内容与用户产生相关性之前


1343
00:36:43,806 --> 00:36:45,186
系统会一直等待


1344
00:36:45,186 --> 00:36:46,496
直到用户进入


1345
00:36:46,496 --> 00:36:47,656
这一区域


1346
00:36:49,726 --> 00:36:51,076
同样 你也可以设置


1347
00:36:51,076 --> 00:36:52,766
notifyOnExit 属性


1348
00:36:52,766 --> 00:36:54,516
在这个属性里


1349
00:36:54,516 --> 00:36:55,986
在该内容与用户关联之前


1350
00:36:56,056 --> 00:36:57,286
系统会一直等待


1351
00:36:57,286 --> 00:36:58,556
直到用户离开这个区域


1352
00:36:59,566 --> 00:37:01,376
实际上 我们将这两个属性


1353
00:37:01,436 --> 00:37:02,696
与现有的基于 Siri 表盘的


1354
00:37:02,696 --> 00:37:04,266
位置提醒一起使用


1355
00:37:04,266 --> 00:37:06,036
以获得一种类似于


1356
00:37:06,036 --> 00:37:07,686
地理围栏的特性


1357
00:37:10,146 --> 00:37:12,106
CLRegion 上默认将


1358
00:37:12,106 --> 00:37:13,476
这些属性都设定为 "true"


1359
00:37:14,016 --> 00:37:15,386
这样一来 我们就可以


1360
00:37:15,706 --> 00:37:17,226
根据用户离


1361
00:37:17,226 --> 00:37:18,766
某一特定地点的距离


1362
00:37:18,766 --> 00:37:20,346
顺利地把相关性内插进来


1363
00:37:21,716 --> 00:37:24,506
这样 制作 CLRegion


1364
00:37:24,556 --> 00:37:25,306
就十分简单了


1365
00:37:26,516 --> 00:37:27,866
在这个例子中 我们是在


1366
00:37:27,866 --> 00:37:29,396
Apple Park 附近制作


1367
00:37:29,486 --> 00:37:30,386
所以我同时置入了


1368
00:37:30,386 --> 00:37:33,026
Apple Park 的坐标和它的半径


1369
00:37:33,026 --> 00:37:34,256
那么 我需要离这里多近呢


1370
00:37:34,526 --> 00:37:35,826
在这个例子中是两公里


1371
00:37:36,276 --> 00:37:39,366
下一步 我将调整 notifyOnEntry


1372
00:37:39,366 --> 00:37:40,926
因为 notifyOnExit 属性


1373
00:37:40,956 --> 00:37:42,836
对我的用例有很大帮助


1374
00:37:43,476 --> 00:37:44,836
一旦我把我的区域全部


1375
00:37:44,836 --> 00:37:46,846
配置完毕 我就可以十分轻松地


1376
00:37:46,846 --> 00:37:47,266
创建一个


1377
00:37:47,266 --> 00:37:48,436
locationRelevanceProvider


1378
00:37:50,696 --> 00:37:52,276
我有几条关于


1379
00:37:52,276 --> 00:37:53,616
locationRelevanceProvider 的提示


1380
00:37:54,696 --> 00:37:56,086
为了使用它


1381
00:37:56,086 --> 00:37:57,596
你的 App 需要位置授权


1382
00:37:57,736 --> 00:37:58,796
否则我们会忽略


1383
00:37:58,796 --> 00:37:59,326
这一特殊的


1384
00:37:59,326 --> 00:38:00,606
locationRelevanceProvider


1385
00:38:01,316 --> 00:38:03,366
而且 为延长用户的电池寿命


1386
00:38:03,366 --> 00:38:04,706
一小时内我们获取的


1387
00:38:04,706 --> 00:38:05,906
位置更新数量


1388
00:38:05,906 --> 00:38:07,206
是有限的


1389
00:38:07,206 --> 00:38:09,306
请记住这一点


1390
00:38:10,666 --> 00:38:12,026
所以 这些是你可以向系统


1391
00:38:12,026 --> 00:38:13,816
提供具体时间


1392
00:38:13,816 --> 00:38:15,116
和位置的一些方式


1393
00:38:15,736 --> 00:38:16,796
下面让我们来看看


1394
00:38:16,796 --> 00:38:17,796
该如何向用户提供


1395
00:38:17,856 --> 00:38:18,566
个性化服务


1396
00:38:19,586 --> 00:38:20,596
我们有这个


1397
00:38:20,646 --> 00:38:22,136
dailyRoutineRelevanceProvider


1398
00:38:22,366 --> 00:38:23,586
那么 正如 Paul 之前提到的


1399
00:38:23,586 --> 00:38:25,406
它允许你在有意义的


1400
00:38:25,406 --> 00:38:26,886
时间或位置为用户


1401
00:38:26,886 --> 00:38:28,606
呈现相关内容


1402
00:38:30,456 --> 00:38:32,376
这些时间和位置


1403
00:38:32,376 --> 00:38:33,906
对每一位 Siri 表盘的


1404
00:38:33,906 --> 00:38:37,666
的用户都是个性化定制的


1405
00:38:38,356 --> 00:38:39,266
那么 我们第一个


1406
00:38:39,266 --> 00:38:40,996
要讨论的情景是早晨


1407
00:38:42,566 --> 00:38:43,536
这一情景允许你


1408
00:38:43,596 --> 00:38:44,796
在用户早晨醒来时


1409
00:38:44,796 --> 00:38:45,596
正确显示内容


1410
00:38:46,406 --> 00:38:47,746
实际上我们已经将其用于


1411
00:38:47,746 --> 00:38:49,386
Siri 表盘上现有的


1412
00:38:49,606 --> 00:38:51,556
第一方天气数据源上了


1413
00:38:51,556 --> 00:38:53,246
因此 我们可以在一天的


1414
00:38:53,246 --> 00:38:54,486
开始之际给用户提供


1415
00:38:54,486 --> 00:38:55,946
一份天气预报


1416
00:38:55,946 --> 00:38:57,796
之后它会很快消失


1417
00:38:57,796 --> 00:38:59,266
来为用户可能感兴趣的


1418
00:38:59,266 --> 00:39:02,216
其他内容腾出空间


1419
00:39:02,516 --> 00:39:04,136
我们也有夜晚的情景


1420
00:39:04,706 --> 00:39:05,726
这一情景允许我们在


1421
00:39:05,726 --> 00:39:07,136
用户上床睡觉前


1422
00:39:07,136 --> 00:39:07,706
显示相关内容


1423
00:39:08,586 --> 00:39:10,386
我们将其用在了 5 的


1424
00:39:10,726 --> 00:39:12,956
新版心率卡中


1425
00:39:12,956 --> 00:39:14,046
以便我们能全天为用户


1426
00:39:14,046 --> 00:39:15,246
提供他们心率活动


1427
00:39:15,246 --> 00:39:18,296
的整体情况


1428
00:39:18,446 --> 00:39:20,406
而且 创建 dailyRoutineRelevanceProvider


1429
00:39:20,406 --> 00:39:20,956
变得非常简单


1430
00:39:20,956 --> 00:39:22,436
你只需指定


1431
00:39:22,436 --> 00:39:23,566
你最感兴趣的情景


1432
00:39:23,566 --> 00:39:25,296
那么这样一来


1433
00:39:25,296 --> 00:39:26,306
我们就可以轻松地创建一个


1434
00:39:26,306 --> 00:39:27,676
dailyRoutineRelevanceProvider


1435
00:39:27,676 --> 00:39:28,796
在用户醒来时


1436
00:39:28,796 --> 00:39:31,286
正确地显示内容


1437
00:39:32,206 --> 00:39:33,566
这两种情景的特性


1438
00:39:33,566 --> 00:39:35,226
都和 dateLocation


1439
00:39:35,226 --> 00:39:36,936
或者说 dateRelevanceProvider


1440
00:39:36,936 --> 00:39:37,876
特别相似


1441
00:39:38,706 --> 00:39:39,936
除了系统是


1442
00:39:39,936 --> 00:39:41,706
自动计算出我们应该


1443
00:39:41,706 --> 00:39:42,616
在何时显示


1444
00:39:42,616 --> 00:39:43,606
这一内容之外


1445
00:39:46,526 --> 00:39:47,816
我们还提供了一些


1446
00:39:47,816 --> 00:39:49,236
允许你在重要的位置


1447
00:39:49,236 --> 00:39:50,536
向用户显示相关内容


1448
00:39:50,536 --> 00:39:52,186
的情景 无论是


1449
00:39:52,186 --> 00:39:57,086
家 工作地点 学校


1450
00:39:57,086 --> 00:39:58,256
或是当用户到达健身房


1451
00:40:00,046 --> 00:40:01,056
创建一个


1452
00:40:01,056 --> 00:40:02,436
dailyRoutineRelevanceProviders


1453
00:40:02,436 --> 00:40:03,206
非常简单


1454
00:40:03,266 --> 00:40:04,426
你只需指定


1455
00:40:04,426 --> 00:40:05,556
你感兴趣的情景


1456
00:40:08,396 --> 00:40:09,646
对于所有的这些情景


1457
00:40:09,646 --> 00:40:12,826
这个 relevanceProvider 的特性


1458
00:40:12,826 --> 00:40:14,636
还是和 locationRelevanceProvider 一样


1459
00:40:14,936 --> 00:40:15,866
除了系统是代你


1460
00:40:15,866 --> 00:40:17,176
自动计算出位置


1461
00:40:17,176 --> 00:40:18,186
这一点的


1462
00:40:19,296 --> 00:40:20,346
所以 随着用户


1463
00:40:20,346 --> 00:40:22,046
靠近这些位置 你的内容


1464
00:40:22,046 --> 00:40:23,616
对用户来说


1465
00:40:23,746 --> 00:40:24,436
也愈加相关


1466
00:40:26,086 --> 00:40:28,626
所以 这就是我们关于


1467
00:40:28,626 --> 00:40:30,006
如何预测你 Siri 表盘上的


1468
00:40:30,006 --> 00:40:31,656
Relevant Shortcut 的一些见解


1469
00:40:31,906 --> 00:40:33,016
你还可以通过这些


1470
00:40:33,016 --> 00:40:34,606
来向系统提供


1471
00:40:34,606 --> 00:40:36,446
附加语境 以便我们能在


1472
00:40:36,446 --> 00:40:37,836
最恰当的时间


1473
00:40:37,836 --> 00:40:38,666
显示你的内容


1474
00:40:39,296 --> 00:40:41,556
现在 让我们来看看


1475
00:40:41,556 --> 00:40:42,886
该如何在 Siri 表盘上


1476
00:40:42,886 --> 00:40:43,756
提供绝佳的体验


1477
00:40:44,796 --> 00:40:46,076
我们已经对 Siri 表盘


1478
00:40:46,076 --> 00:40:47,516
进行了很长时间的研究


1479
00:40:47,616 --> 00:40:48,576
这一路以来


1480
00:40:48,576 --> 00:40:49,286
我们学到了很多


1481
00:40:51,556 --> 00:40:52,956
首先就是 我们认为


1482
00:40:52,956 --> 00:40:54,426
Siri 表盘上


1483
00:40:54,426 --> 00:40:56,306
有两个高级内容分类


1484
00:40:56,306 --> 00:40:58,326
特别方便使用


1485
00:40:59,736 --> 00:41:00,616
其一就是可以


1486
00:41:00,616 --> 00:41:01,716
可快速查看的信息


1487
00:41:02,346 --> 00:41:03,856
我们可以在


1488
00:41:03,856 --> 00:41:05,456
抬起手腕时 轻松获得自己


1489
00:41:05,456 --> 00:41:06,586
最想要的一条信息


1490
00:41:06,586 --> 00:41:08,346
并且可以在合适的时间


1491
00:41:08,346 --> 00:41:09,436
轻点以了解


1492
00:41:09,436 --> 00:41:10,316
更多细节


1493
00:41:11,796 --> 00:41:13,596
第二个是轻点动作


1494
00:41:14,096 --> 00:41:15,396
我们可以在


1495
00:41:15,396 --> 00:41:16,966
表盘上轻点某个卡片


1496
00:41:16,966 --> 00:41:18,996
来执行一个复杂活动


1497
00:41:18,996 --> 00:41:20,506
然后立刻反馈给我


1498
00:41:21,606 --> 00:41:23,166
下面 让我们来看一下


1499
00:41:23,166 --> 00:41:24,206
可快速查看的信息


1500
00:41:24,686 --> 00:41:25,746
你可以看到 我们再次


1501
00:41:25,746 --> 00:41:26,586
使用到了 Recipes App


1502
00:41:27,576 --> 00:41:28,576
在这一整天中


1503
00:41:28,576 --> 00:41:30,736
当我扫视手腕部位时


1504
00:41:30,736 --> 00:41:31,596
我可以得到一条


1505
00:41:31,596 --> 00:41:32,306
信息 对吧


1506
00:41:32,306 --> 00:41:33,906
我可以看到我今天晚些时候


1507
00:41:33,906 --> 00:41:35,026
可能会烹饪的食谱


1508
00:41:35,386 --> 00:41:36,656
并且我可以轻松地决定


1509
00:41:36,836 --> 00:41:37,656
我想不想做这道菜


1510
00:41:37,746 --> 00:41:38,876
或我今晚是否想外出


1511
00:41:39,926 --> 00:41:41,186
当我晚上准备好


1512
00:41:41,186 --> 00:41:42,626
要回家时 我可以


1513
00:41:42,626 --> 00:41:45,296
轻松地轻点它


1514
00:41:45,296 --> 00:41:46,836
来深入浏览这个 App


1515
00:41:46,836 --> 00:41:47,706
看看我是否需要在回家路上


1516
00:41:47,706 --> 00:41:47,976
去一趟杂货店


1517
00:41:53,316 --> 00:41:54,526
因此 如果你想为用户


1518
00:41:54,526 --> 00:41:55,646
提供可快速浏览的信息


1519
00:41:55,646 --> 00:41:57,016
那么你需要记住


1520
00:41:57,016 --> 00:41:57,956
以下这些内容


1521
00:41:58,946 --> 00:42:00,046
确保你在你的


1522
00:42:00,046 --> 00:42:02,216
Relevant Shortcut 中显示的


1523
00:42:02,216 --> 00:42:03,376
是最关键的内容


1524
00:42:04,546 --> 00:42:05,826
因为这是用户每天


1525
00:42:05,826 --> 00:42:06,886
在抬起手腕时


1526
00:42:06,886 --> 00:42:07,956
将看到的内容


1527
00:42:07,956 --> 00:42:09,716
这是他们想


1528
00:42:09,716 --> 00:42:10,626
立刻在表盘上


1529
00:42:10,626 --> 00:42:11,346
看到的内容


1530
00:42:12,636 --> 00:42:15,296
当用户轻点你的


1531
00:42:15,296 --> 00:42:16,786
Relevant Shortcut


1532
00:42:16,786 --> 00:42:18,076
就应该打开你的 App 内的


1533
00:42:18,076 --> 00:42:19,166
一个位置 并为他们提供


1534
00:42:19,166 --> 00:42:20,276
额外的信息


1535
00:42:21,166 --> 00:42:22,616
也的确有不小心轻点了


1536
00:42:22,616 --> 00:42:23,946
Siri 表盘的情况


1537
00:42:23,946 --> 00:42:24,956
在这种情况下 你一定想确认你没有


1538
00:42:24,956 --> 00:42:26,246
开始任何用户不知情的


1539
00:42:26,246 --> 00:42:27,716
长时间运行的


1540
00:42:27,716 --> 00:42:29,266
后台任务


1541
00:42:30,836 --> 00:42:32,306
正如 Paul 之前提到的


1542
00:42:32,306 --> 00:42:33,726
系统会自动给你


1543
00:42:33,726 --> 00:42:35,216
一个附加的


1544
00:42:35,216 --> 00:42:36,416
后台刷新任务


1545
00:42:36,416 --> 00:42:38,376
让你提供新的内容


1546
00:42:38,856 --> 00:42:40,186
请利用好这一性能


1547
00:42:40,186 --> 00:42:41,796
这样你就能确保


1548
00:42:41,796 --> 00:42:43,166
可以在 Siri 表盘上


1549
00:42:43,166 --> 00:42:44,086
显示相关的有趣内容


1550
00:42:44,626 --> 00:42:48,216
而且 每当你得到新数据


1551
00:42:48,216 --> 00:42:49,456
不论它是否


1552
00:42:49,456 --> 00:42:51,206
经过后台刷新


1553
00:42:51,206 --> 00:42:52,426
因为你已经联网


1554
00:42:52,426 --> 00:42:53,996
并下载了新的数据


1555
00:42:53,996 --> 00:42:55,156
或者由于用户已经开始使用你的 App


1556
00:42:55,156 --> 00:42:56,876
确保你提供的


1557
00:42:56,876 --> 00:42:58,156
新的 Relevant Shortcut


1558
00:42:58,156 --> 00:42:59,826
总能在用户抬起手腕时


1559
00:43:00,126 --> 00:43:01,316
让系统显示


1560
00:43:01,316 --> 00:43:02,636
最有趣的内容


1561
00:43:04,966 --> 00:43:07,126
最后 如果你想要


1562
00:43:07,126 --> 00:43:08,246
及时显示信息


1563
00:43:08,246 --> 00:43:10,606
请通过 Relevance Provider


1564
00:43:10,776 --> 00:43:12,086
向我们发送指示


1565
00:43:12,416 --> 00:43:13,846
以便系统可以


1566
00:43:13,846 --> 00:43:15,596
在最合适的时间显示你的内容


1567
00:43:15,896 --> 00:43:20,426
这就是快速可浏览信息


1568
00:43:20,846 --> 00:43:21,716
现在 让我们再谈一下


1569
00:43:21,716 --> 00:43:23,936
Siri 表盘上的轻点动作


1570
00:43:25,896 --> 00:43:27,326
大家可以看到我们再次


1571
00:43:27,356 --> 00:43:28,356
使用了这个 Fitness Trainer App


1572
00:43:28,676 --> 00:43:30,006
在我的手腕上


1573
00:43:30,006 --> 00:43:31,426
我可以轻松得到


1574
00:43:31,426 --> 00:43:32,586
我需要出去跑步的提醒


1575
00:43:34,656 --> 00:43:36,156
轻点它 我就会得到


1576
00:43:36,246 --> 00:43:37,636
确认 来确定这就是


1577
00:43:37,636 --> 00:43:39,886
我想要执行的实际指令


1578
00:43:41,226 --> 00:43:42,816
轻点两下 我就可以开始


1579
00:43:42,816 --> 00:43:43,376
体能训练了


1580
00:43:43,576 --> 00:43:44,676
我不用花费时间


1581
00:43:44,676 --> 00:43:46,426
去众多 App 里


1582
00:43:46,426 --> 00:43:47,736
寻找这个 Fitness Trainer App


1583
00:43:47,736 --> 00:43:49,776
就可以开始进行我的体能训练


1584
00:43:49,776 --> 00:43:51,346
我可以在我的表盘上


1585
00:43:51,346 --> 00:43:53,126
轻松地轻点两下


1586
00:43:53,126 --> 00:43:54,196
就开始体能训练


1587
00:43:57,256 --> 00:43:58,706
如果你提供了轻点指令


1588
00:43:58,706 --> 00:44:00,246
请记住以下几点


1589
00:44:01,856 --> 00:44:03,606
你的 Intent 是在你的


1590
00:44:03,606 --> 00:44:04,806
Siri 扩展程序内运行的


1591
00:44:05,376 --> 00:44:06,956
这就允许系统在后台


1592
00:44:06,956 --> 00:44:09,046
自动运行你的 Intent


1593
00:44:09,156 --> 00:44:10,476
这样用户就再也不用


1594
00:44:10,476 --> 00:44:11,776
离开 Siri 表盘


1595
00:44:11,776 --> 00:44:13,626
来运行你的指令了


1596
00:44:16,066 --> 00:44:17,486
我们只展示标准的


1597
00:44:17,486 --> 00:44:19,146
系统确认 UI


1598
00:44:19,146 --> 00:44:21,086
这样用户就知道他们要


1599
00:44:21,086 --> 00:44:22,096
运行的指令是什么


1600
00:44:22,096 --> 00:44:23,226
我们可以确定这就是他们


1601
00:44:23,226 --> 00:44:24,000
想做的


1602
00:44:27,046 --> 00:44:28,076
你也想确认


1603
00:44:28,076 --> 00:44:29,176
你创建的捷径


1604
00:44:29,176 --> 00:44:30,156
是被完全指定的


1605
00:44:30,156 --> 00:44:32,536
这样你的


1606
00:44:32,536 --> 00:44:33,956
Intent 扩展程序就可以


1607
00:44:33,956 --> 00:44:35,166
在无需任何其他用户确认的情况下


1608
00:44:35,166 --> 00:44:35,886
处理它


1609
00:44:37,186 --> 00:44:38,896
因此当用户轻点


1610
00:44:38,896 --> 00:44:39,956
Siri 表盘上的这些


1611
00:44:39,956 --> 00:44:41,146
Relevant Shortcut 时


1612
00:44:41,146 --> 00:44:42,596
我们无需打开你的 App


1613
00:44:42,596 --> 00:44:43,676
来从用户处


1614
00:44:43,676 --> 00:44:45,066
继续获取附加信息


1615
00:44:45,446 --> 00:44:47,136
我们可以开始运行你的


1616
00:44:47,136 --> 00:44:48,516
SiriKit 扩展程序


1617
00:44:48,516 --> 00:44:49,786
在后台运行它


1618
00:44:49,786 --> 00:44:51,856
用户就可以在当天获取它


1619
00:44:52,946 --> 00:44:55,456
你肯定也想在你的 App 内


1620
00:44:55,636 --> 00:44:57,596
提供像 Relevant Shortcut 一样的


1621
00:44:57,596 --> 00:44:58,986
日常使用任务


1622
00:44:59,436 --> 00:45:00,636
这些是用户经常使用


1623
00:45:00,636 --> 00:45:01,866
你的 App 的原因


1624
00:45:01,866 --> 00:45:03,436
也是为什么他们想要


1625
00:45:03,436 --> 00:45:04,746
从表盘上轻松快速地


1626
00:45:04,746 --> 00:45:06,986
获取信息的原因


1627
00:45:07,796 --> 00:45:09,456
你也想要确认


1628
00:45:09,456 --> 00:45:10,456
你能够经常提供


1629
00:45:10,456 --> 00:45:11,276
Relevant Shortcut


1630
00:45:11,846 --> 00:45:13,136
你可能不知道


1631
00:45:13,136 --> 00:45:14,156
你上次向系统提供


1632
00:45:14,156 --> 00:45:16,146
Relevant Shortcut 是什么时候


1633
00:45:16,146 --> 00:45:16,886
而且你想要确认


1634
00:45:16,886 --> 00:45:18,806
你的用户总能从


1635
00:45:18,806 --> 00:45:19,826
Siri 表盘上得到


1636
00:45:19,826 --> 00:45:20,436
你的指令


1637
00:45:21,376 --> 00:45:22,626
如果你要在 App 开始运行时


1638
00:45:22,626 --> 00:45:23,826
提供这些内容


1639
00:45:24,166 --> 00:45:25,576
请在后台线程操作


1640
00:45:25,576 --> 00:45:27,396
这样你就不会降低 App 的运行速度


1641
00:45:28,026 --> 00:45:31,356
我们讨论了很多关于


1642
00:45:31,566 --> 00:45:33,186
Relevant Shortcut 的内容


1643
00:45:33,186 --> 00:45:34,416
以及很多你可以在


1644
00:45:34,416 --> 00:45:36,286
Siri 表盘上显示


1645
00:45:36,286 --> 00:45:37,166
正确内容的方式


1646
00:45:37,166 --> 00:45:40,456
你需要确认你提供的


1647
00:45:40,456 --> 00:45:42,286
内容是相关的


1648
00:45:42,286 --> 00:45:43,406
并且吸引人的


1649
00:45:43,726 --> 00:45:44,846
这是用户想要在


1650
00:45:44,846 --> 00:45:45,926
抬起手腕时立刻看到的内容


1651
00:45:45,926 --> 00:45:47,146
是我们想在 Siri 表盘上


1652
00:45:47,226 --> 00:45:49,566
显示的内容


1653
00:45:49,566 --> 00:45:50,646
也是我们想要


1654
00:45:50,646 --> 00:45:52,066
放在顶部的内容


1655
00:45:53,876 --> 00:45:55,946
当你有了 App


1656
00:45:55,986 --> 00:45:57,256
你会得到最为丰富的体验


1657
00:45:57,906 --> 00:45:59,206
系统可以给你


1658
00:45:59,206 --> 00:46:00,396
附加后台刷新任务


1659
00:46:00,396 --> 00:46:01,886
并且从用户轻点任意一个


1660
00:46:01,886 --> 00:46:03,516
Relevant Shortcut


1661
00:46:03,516 --> 00:46:04,336
到我们开始执行指令之前


1662
00:46:04,336 --> 00:46:06,266
不会有任何的延迟


1663
00:46:08,356 --> 00:46:09,856
如果大家有什么疑问


1664
00:46:09,856 --> 00:46:11,006
我们今晚还有一个实验室活动


1665
00:46:11,006 --> 00:46:12,386
我们很乐意和各位谈谈


1666
00:46:12,386 --> 00:46:13,486
有关 Relevant Shortcut


1667
00:46:13,486 --> 00:46:14,426
和 Siri 表盘的内容


1668
00:46:15,116 --> 00:46:16,796
我们很期待看到


1669
00:46:16,796 --> 00:46:17,876
各位在表盘上创造出


1670
00:46:17,916 --> 00:46:20,036
多种多样的体验


1671
00:46:20,716 --> 00:46:20,956
谢谢大家


1672
00:46:21,516 --> 00:46:24,500
[ 掌声 ]

