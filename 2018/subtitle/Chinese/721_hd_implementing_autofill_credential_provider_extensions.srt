1
00:00:07,516 --> 00:00:15,500
［ 音乐 ］


2
00:00:18,046 --> 00:00:19,216
>> 大家好 欢迎来到


3
00:00:19,216 --> 00:00:22,386
有关于自动填充凭证提供商扩展的会议


4
00:00:23,846 --> 00:00:25,246
在这一视频中 我将首先给出


5
00:00:25,246 --> 00:00:26,506
一个关于


6
00:00:26,506 --> 00:00:28,006
密码自动填充功能的概览


7
00:00:28,006 --> 00:00:29,186
以及该功能是如何在 iOS 12 中被进一步改进的


8
00:00:30,386 --> 00:00:31,986
之后 我会深入讲解有关于


9
00:00:31,986 --> 00:00:33,546
密码管理 App 


10
00:00:33,606 --> 00:00:34,786
现在如何将密码自动填充


11
00:00:34,786 --> 00:00:37,326
通过 iOS 12 中的新 API 进行整合


12
00:00:38,846 --> 00:00:39,886
同时 我会推荐一些


13
00:00:39,886 --> 00:00:41,256
最佳做法


14
00:00:41,256 --> 00:00:43,866
供你们在采用这些新 API 的时候使用


15
00:00:45,556 --> 00:00:47,906
首先 我们来谈一谈密码自动填充


16
00:00:50,696 --> 00:00:52,596
iOS 11 带来了两项


17
00:00:52,596 --> 00:00:53,946
关于密码自动填充的重大改进


18
00:00:54,776 --> 00:00:56,186
第一 相关成度最高的凭证


19
00:00:56,186 --> 00:00:57,266
会直接显示在


20
00:00:57,266 --> 00:00:58,416
快速输入栏中


21
00:00:58,706 --> 00:00:59,876
所以只需要轻点一下就可以


22
00:01:00,786 --> 00:01:02,466
第二 iOS 11 带来了


23
00:01:02,466 --> 00:01:04,025
App 内的密码自动填充功能


24
00:01:04,506 --> 00:01:05,836
这使得


25
00:01:05,916 --> 00:01:07,166
使用 iCloud 钥匙串中的凭证变得极为方便


26
00:01:07,166 --> 00:01:08,826
无论是在


27
00:01:08,826 --> 00:01:10,846
网页内还是在 App 中


28
00:01:10,846 --> 00:01:12,006
比如你们刚才看到的 那个闪闪发光的 App


29
00:01:13,996 --> 00:01:17,046
在 iOS 和 tvOS 12 中 你还可以在


30
00:01:17,046 --> 00:01:18,426
Apple TV 的 App 中使用密码自动填充


31
00:01:18,526 --> 00:01:20,306
通过在一台 iOS 设备上


32
00:01:20,306 --> 00:01:23,476
来选择需要输入的凭证即可


33
00:01:23,476 --> 00:01:24,456
这些功能对于


34
00:01:24,456 --> 00:01:26,006
iCloud 钥匙串的用户来说棒极了


35
00:01:26,006 --> 00:01:27,186
但也有些用户依赖于其它的


36
00:01:27,186 --> 00:01:28,406
密码管理 App 来存储


37
00:01:28,406 --> 00:01:29,116
他们的安全凭证


38
00:01:30,656 --> 00:01:32,136
为了让这些用户在使用他们的安全凭证


39
00:01:32,136 --> 00:01:33,346
的时候 也能变得同样便捷


40
00:01:33,346 --> 00:01:38,446
iOS 12 允许密码管理 App 整合自动填充功能


41
00:01:38,446 --> 00:01:39,656
以便于提供如同 iCloud 钥匙串


42
00:01:39,656 --> 00:01:40,046
一样的体验


43
00:01:41,736 --> 00:01:44,346
在 iOS 12 中 密码自动填充设置


44
00:01:44,346 --> 00:01:45,676
有了一个全新的 UI


45
00:01:45,926 --> 00:01:47,476
允许用户自己选择


46
00:01:47,476 --> 00:01:48,776
向自动填充功能中


47
00:01:48,776 --> 00:01:51,126
提供凭证的 App 


48
00:01:51,126 --> 00:01:52,406
来作为对于 iCloud 钥匙串的补充或替代


49
00:01:52,586 --> 00:01:56,006
通过使用快速输入栏


50
00:01:56,936 --> 00:01:58,146
用户能够以列表形式浏览


51
00:01:58,146 --> 00:02:00,036
他们存储在密码管理 App 中的凭证


52
00:02:00,876 --> 00:02:03,296
这一 UI 是由与密码管理 App 


53
00:02:03,296 --> 00:02:04,146
捆绑的扩展所支持的


54
00:02:04,146 --> 00:02:06,656
当一个凭证被选中


55
00:02:06,976 --> 00:02:07,986
该扩展会将其送回自动填充中


56
00:02:07,986 --> 00:02:10,515
随后用户名和密码


57
00:02:10,515 --> 00:02:11,686
就会被填入 App 中


58
00:02:12,326 --> 00:02:16,356
当然 快速输入栏预测


59
00:02:16,356 --> 00:02:16,626
也能够如此工作


60
00:02:17,186 --> 00:02:18,386
现在 自动填充能够显示出


61
00:02:18,386 --> 00:02:19,796
由 App 指定的最佳凭证


62
00:02:19,796 --> 00:02:21,396
所以 要访问


63
00:02:21,646 --> 00:02:22,416
只需轻点一下就够了


64
00:02:23,956 --> 00:02:25,486
当使用这些凭证的时候


65
00:02:25,606 --> 00:02:27,016
App 扩展可以选择性地


66
00:02:27,016 --> 00:02:28,596
显示出它的原有 UI 


67
00:02:28,596 --> 00:02:29,666
以便在输入凭证之前


68
00:02:29,666 --> 00:02:30,106
验证用户


69
00:02:33,116 --> 00:02:34,796
这一整合使得


70
00:02:34,796 --> 00:02:36,506
使用密码管理 App 的用户


71
00:02:36,506 --> 00:02:38,076
在登录 App 的时候更加便捷


72
00:02:38,076 --> 00:02:39,066
因为他们不再需要


73
00:02:39,066 --> 00:02:40,436
切换 App 来拷贝他们的凭证


74
00:02:41,846 --> 00:02:43,216
它也让密码自动填充


75
00:02:43,216 --> 00:02:44,426
能够在更多的 App 中使用


76
00:02:44,836 --> 00:02:46,346
任何支持 iCloud 钥匙串自动填充的 App


77
00:02:46,346 --> 00:02:47,826
现在都能够与


78
00:02:47,826 --> 00:02:49,336
密码管理 App 协同工作


79
00:02:49,336 --> 00:02:50,346
且不需要任何额外操作


80
00:02:50,826 --> 00:02:54,726
看过这一概览之后 


81
00:02:54,726 --> 00:02:55,926
我们来深入看一看 


82
00:02:55,926 --> 00:02:57,336
如何将这些功能


83
00:02:57,336 --> 00:02:57,926
在你的 App 中执行


84
00:02:58,576 --> 00:02:59,946
主要有四步需要讲解


85
00:03:02,336 --> 00:03:04,006
首先 你需要配置


86
00:03:04,006 --> 00:03:05,426
你的项目来使用这些


87
00:03:05,426 --> 00:03:06,536
全新的 API


88
00:03:07,226 --> 00:03:08,106
这其中包括


89
00:03:08,106 --> 00:03:09,706
向你的 App 中添加新功能


90
00:03:09,706 --> 00:03:11,006
以及向你的项目中添加扩展


91
00:03:11,526 --> 00:03:13,116
自动填充将会使用这一扩展


92
00:03:13,116 --> 00:03:14,136
当它需要访问你的 App 


93
00:03:14,136 --> 00:03:16,636
或者需要在系统中


94
00:03:17,696 --> 00:03:18,006
显示它的 UI 的时候


95
00:03:18,036 --> 00:03:19,566
其次 你的扩展需要


96
00:03:19,566 --> 00:03:20,786
能够支持以列表显示出


97
00:03:20,786 --> 00:03:21,896
用户可选择的凭证


98
00:03:21,896 --> 00:03:23,256
当他们通过 


99
00:03:23,256 --> 00:03:24,346
快速输入栏


100
00:03:24,346 --> 00:03:24,536
打开你的扩展的时候


101
00:03:26,736 --> 00:03:28,626
然后 如果你想要自动填充


102
00:03:28,626 --> 00:03:29,746
在快速输入栏内


103
00:03:29,746 --> 00:03:31,226
显示出你的 App 的凭证


104
00:03:31,226 --> 00:03:32,466
你需要为此添加支持


105
00:03:32,466 --> 00:03:33,566
通过告知系统


106
00:03:33,566 --> 00:03:34,656
你想要显示出的凭证


107
00:03:35,116 --> 00:03:36,536
并在你的扩展中


108
00:03:36,536 --> 00:03:38,746
执行另一个 API 来回应


109
00:03:38,746 --> 00:03:39,326
用户对于凭证的选择


110
00:03:40,856 --> 00:03:43,536
最后 你也许想要使用一个允许你显示出


111
00:03:43,536 --> 00:03:44,886
你的扩展的 UI 的 API 


112
00:03:44,886 --> 00:03:47,876
当用户在设置中


113
00:03:47,876 --> 00:03:48,356
选择了你的密码管理 App 时


114
00:03:49,096 --> 00:03:50,096
我们来更细致地


115
00:03:50,096 --> 00:03:50,546
了解一下这些步骤


116
00:03:53,016 --> 00:03:54,646
首先 你需要对你的项目


117
00:03:54,646 --> 00:03:55,826
做一些改动


118
00:03:56,456 --> 00:03:57,506
以在你的 App 功能中启用 


119
00:03:57,506 --> 00:04:00,556
自动填充凭证提供商为首


120
00:04:01,316 --> 00:04:02,716
这将为你的 App 


121
00:04:02,716 --> 00:04:04,116
添加所必需的权限


122
00:04:04,116 --> 00:04:05,696
并将其连接到新的认证服务框架


123
00:04:05,696 --> 00:04:07,716
它可以提供


124
00:04:07,716 --> 00:04:08,936
为整合密码自动填充


125
00:04:08,936 --> 00:04:09,416
所需要的 API


126
00:04:09,826 --> 00:04:13,936
随后 你需要添加一个


127
00:04:13,936 --> 00:04:15,316
自动填充凭证提供商扩展目标


128
00:04:15,316 --> 00:04:16,946
到你的项目中


129
00:04:17,676 --> 00:04:19,296
Xcode 10 包含了


130
00:04:19,296 --> 00:04:20,116
该扩展的全新模版


131
00:04:20,656 --> 00:04:23,666
该模版会为你创建一个新的


132
00:04:23,666 --> 00:04:24,706
视图控制器层级 一个 ASCredential


133
00:04:25,136 --> 00:04:27,986
ProviderViewController 的子层级


134
00:04:29,076 --> 00:04:30,326
当自动填充需要唤醒你的扩展时


135
00:04:30,326 --> 00:04:31,766
它会创建一个


136
00:04:31,766 --> 00:04:33,336
该层级的实例


137
00:04:33,336 --> 00:04:34,366
并对指定模式做出请求


138
00:04:34,766 --> 00:04:35,606
你的子层级


139
00:04:35,606 --> 00:04:36,026
将会覆盖它


140
00:04:37,756 --> 00:04:38,996
那么一旦 你已经配置好了你的项目


141
00:04:38,996 --> 00:04:41,146
在你的扩展里


142
00:04:41,146 --> 00:04:42,626
需要添加的第一样东西


143
00:04:42,626 --> 00:04:43,756
就是用户可以


144
00:04:43,756 --> 00:04:44,726
通过快速输入栏


145
00:04:44,726 --> 00:04:45,286
来浏览的凭证列表


146
00:04:45,566 --> 00:04:46,866
它是这样运作的


147
00:04:47,446 --> 00:04:50,616
当用户在登录某一 App 时


148
00:04:50,736 --> 00:04:51,926
他们可以使用快速输入栏


149
00:04:51,926 --> 00:04:53,376
来打开你的凭证列表


150
00:04:54,026 --> 00:04:56,306
此时自动填充将会


151
00:04:56,306 --> 00:04:57,776
启动你的 App 扩展


152
00:04:57,776 --> 00:04:58,946
并告知它用户在何处登录


153
00:04:58,946 --> 00:05:00,566
这样你就可以给出


154
00:05:00,566 --> 00:05:01,926
相关程度最高的凭证建议


155
00:05:03,816 --> 00:05:05,436
自动填充是通过


156
00:05:05,436 --> 00:05:06,736
准备好一系列 


157
00:05:06,736 --> 00:05:08,086
ASCredentialServiceIdentifier


158
00:05:08,086 --> 00:05:10,716
代表着用户当前正在使用的服务


159
00:05:10,716 --> 00:05:11,146
来做到这一点的


160
00:05:11,976 --> 00:05:12,956
你的扩展可能会收到


161
00:05:12,956 --> 00:05:14,636
多个服务标识符


162
00:05:14,636 --> 00:05:16,086
如果自动填充能够识别多个


163
00:05:16,086 --> 00:05:17,386
更好更合适的 


164
00:05:17,386 --> 00:05:18,236
以便在当前环境下使用


165
00:05:19,956 --> 00:05:21,866
在 App 内 服务标识符


166
00:05:21,866 --> 00:05:23,836
是基于该 App 所相关域名的


167
00:05:24,406 --> 00:05:25,976
采用了通用链接 接力


168
00:05:25,976 --> 00:05:27,876
或者共享网页凭证的 App


169
00:05:27,876 --> 00:05:29,856
将会有相关联的域名


170
00:05:31,006 --> 00:05:32,606
例如 这个闪闪发光的 App 


171
00:05:32,606 --> 00:05:33,456
与 shiny.example.com 相关联


172
00:05:33,456 --> 00:05:36,386
那么自动填充


173
00:05:36,386 --> 00:05:37,586
将会为你的扩展提供


174
00:05:37,586 --> 00:05:39,086
一个服务标识符


175
00:05:39,086 --> 00:05:41,436
它的类型是域名 shiny.example.com


176
00:05:42,866 --> 00:05:44,286
在 Safari 浏览器中


177
00:05:44,286 --> 00:05:46,056
服务标识符是基于


178
00:05:46,086 --> 00:05:47,966
用户当前正在登录的页面 URL


179
00:05:51,316 --> 00:05:52,976
自动填充会将服务标识符


180
00:05:52,976 --> 00:05:54,786
通过请求


181
00:05:54,786 --> 00:05:56,186
已准备好的


182
00:05:56,186 --> 00:05:57,796
服务标识符模式凭证列表


183
00:05:57,796 --> 00:05:59,266
在你的视图控制器中


184
00:06:00,286 --> 00:06:02,066
在这里 你的扩展应该


185
00:06:02,066 --> 00:06:03,526
建立起它的 UI 来显示


186
00:06:03,526 --> 00:06:05,466
用户的凭证信息


187
00:06:05,466 --> 00:06:06,546
且它应该能够通过所提供的服务标识符


188
00:06:06,546 --> 00:06:08,156
为相关度最高的那些


189
00:06:08,156 --> 00:06:09,166
给出高优先级


190
00:06:09,926 --> 00:06:11,636
在这一步 有两件事会发生


191
00:06:12,196 --> 00:06:15,286
如果用户选择忽略你的扩展


192
00:06:15,286 --> 00:06:16,656
你可以通过调用


193
00:06:16,656 --> 00:06:18,306
出错取消请求


194
00:06:18,436 --> 00:06:20,456
来告知系统


195
00:06:20,456 --> 00:06:21,586
在你的视图控制器扩展环境中


196
00:06:21,586 --> 00:06:23,906
自动填充就会


197
00:06:23,906 --> 00:06:24,886
忽略你的扩展


198
00:06:28,976 --> 00:06:30,886
如果用户选择了


199
00:06:30,886 --> 00:06:32,086
一个他们想要使用的凭证


200
00:06:32,506 --> 00:06:33,976
你的扩展就会建立一个


201
00:06:33,976 --> 00:06:35,736
基于用户选择的


202
00:06:35,736 --> 00:06:37,596
ASPasswordCredential


203
00:06:37,596 --> 00:06:39,286
然后通过调用


204
00:06:39,286 --> 00:06:40,596
完成请求和所选凭证模式


205
00:06:40,596 --> 00:06:42,106
来把它交给自动填充


206
00:06:42,106 --> 00:06:43,206
在扩展环境中进行


207
00:06:44,046 --> 00:06:45,526
那么自动填充就会使用


208
00:06:45,526 --> 00:06:47,236
那个凭证来填充


209
00:06:47,316 --> 00:06:49,126
App 中的用户名和密码


210
00:06:51,656 --> 00:06:53,036
这里有一些非常棒的实例


211
00:06:53,036 --> 00:06:53,986
是凭证列表所应该遵循的


212
00:06:53,986 --> 00:06:55,926
为了最好的用户体验


213
00:06:56,946 --> 00:06:58,426
首先 要确保


214
00:06:58,426 --> 00:06:59,856
在你的 UI 中添加一个按钮


215
00:06:59,856 --> 00:07:00,456
来取消请求


216
00:07:01,446 --> 00:07:02,616
用户可能会随时改变主意


217
00:07:02,616 --> 00:07:03,986
是否登录他们的服务


218
00:07:03,986 --> 00:07:05,136
亦或是意识到 他们没有保存好的凭证


219
00:07:05,136 --> 00:07:06,746
所以你应该


220
00:07:06,746 --> 00:07:08,096
允许用户忽略你的扩展


221
00:07:08,096 --> 00:07:09,956
不需要选择任何凭证


222
00:07:12,856 --> 00:07:14,746
同样你的凭证列表 UI 


223
00:07:14,746 --> 00:07:16,006
应该让所有凭证都可见


224
00:07:16,006 --> 00:07:17,646
不论他们是不是


225
00:07:17,676 --> 00:07:19,216
与服务标识符相符


226
00:07:19,896 --> 00:07:21,486
在某些情况下


227
00:07:21,486 --> 00:07:22,526
用户可能需要从一个不同的域名下


228
00:07:22,526 --> 00:07:23,246
选择一个凭证


229
00:07:24,226 --> 00:07:25,516
允许用户


230
00:07:25,516 --> 00:07:26,776
从列表中访问整套凭证


231
00:07:26,776 --> 00:07:28,256
以确保你的扩展


232
00:07:28,256 --> 00:07:29,696
时刻都能派上用场


233
00:07:31,916 --> 00:07:33,576
用户认证


234
00:07:33,576 --> 00:07:35,096
是完全取决于你的扩展的


235
00:07:35,406 --> 00:07:36,796
如果你需要认证用户


236
00:07:36,796 --> 00:07:38,236
那么当凭证列表出现的时候


237
00:07:38,236 --> 00:07:39,426
你就应该执行认证


238
00:07:39,856 --> 00:07:43,396
以上就是你如何


239
00:07:43,396 --> 00:07:44,596
在你的扩展中操作凭证列表


240
00:07:44,596 --> 00:07:45,936
以保证你的 App 中的凭证


241
00:07:45,936 --> 00:07:47,576
无论在何地


242
00:07:47,576 --> 00:07:48,466
只需要登录 都是可用的


243
00:07:49,076 --> 00:07:51,566
现在我们要将它变得更加方便


244
00:07:51,566 --> 00:07:53,206
通过允许自动填充


245
00:07:53,206 --> 00:07:54,396
将这些凭证


246
00:07:54,486 --> 00:07:55,566
直接显示在快速输入栏上


247
00:07:56,116 --> 00:07:58,346
我将以一个概览开始


248
00:07:58,346 --> 00:07:59,516
关于这些操作如何进行


249
00:07:59,776 --> 00:08:01,116
描述一下你的代码所扮演的角色


250
00:08:01,116 --> 00:08:05,123
系统 以及用户正在登录的 App


251
00:08:07,376 --> 00:08:09,186
首先 你的 App 需要


252
00:08:09,186 --> 00:08:10,876
让自动填充提前知道


253
00:08:11,126 --> 00:08:12,356
它想要将什么凭证


254
00:08:12,356 --> 00:08:13,816
显示在快速输入栏上


255
00:08:15,126 --> 00:08:16,266
你的 App 需要提供给自动填充


256
00:08:16,266 --> 00:08:17,996
一份凭证身份列表


257
00:08:18,336 --> 00:08:19,846
凭证身份包含


258
00:08:19,846 --> 00:08:21,106
凭证相关信息


259
00:08:21,406 --> 00:08:22,746
例如用户名和服务


260
00:08:22,746 --> 00:08:24,616
但没有密码


261
00:08:25,106 --> 00:08:28,116
当用户开始登录 App 时


262
00:08:28,116 --> 00:08:29,886
App 会与自动填充对话


263
00:08:29,886 --> 00:08:31,356
并让它知道


264
00:08:31,356 --> 00:08:32,756
何时用户名栏或者密码栏


265
00:08:32,756 --> 00:08:33,356
被选中


266
00:08:34,645 --> 00:08:35,946
随后自动填充就会寻找


267
00:08:35,946 --> 00:08:36,796
合适的凭证身份


268
00:08:36,796 --> 00:08:38,265
来为 App 提供建议


269
00:08:38,905 --> 00:08:39,866
这一操作是通过


270
00:08:39,866 --> 00:08:40,616
搜索由你的 App 提供的


271
00:08:40,616 --> 00:08:43,076
凭证身份来进行的


272
00:08:43,076 --> 00:08:44,706
所以你的扩展 暂时还不需要启动


273
00:08:45,996 --> 00:08:46,856
如果有任何匹配的


274
00:08:46,856 --> 00:08:47,726
凭证身份


275
00:08:47,726 --> 00:08:49,886
自动填充会将它们显示在


276
00:08:49,886 --> 00:08:50,616
快速输入栏内


277
00:08:51,726 --> 00:08:53,096
这些建议是


278
00:08:53,096 --> 00:08:54,666
系统私密提供的


279
00:08:54,666 --> 00:08:56,246
所以 App 还不能确定


280
00:08:56,246 --> 00:08:57,466
用户为 App


281
00:08:57,466 --> 00:08:58,946
保存了什么凭证


282
00:09:01,356 --> 00:09:02,746
当用户选择了其中一条建议


283
00:09:02,746 --> 00:09:05,106
自动填充就会启动你的扩展


284
00:09:05,106 --> 00:09:06,496
来向它询问


285
00:09:06,496 --> 00:09:07,846
完整凭证


286
00:09:07,846 --> 00:09:08,346
包括密码


287
00:09:08,836 --> 00:09:11,516
它会告知你的扩展


288
00:09:11,596 --> 00:09:12,736
用户选择了哪个


289
00:09:12,736 --> 00:09:16,216
凭证身份


290
00:09:16,216 --> 00:09:17,556
随后你的扩展会寻找


291
00:09:17,556 --> 00:09:18,926
属于所选凭证的密码


292
00:09:18,926 --> 00:09:20,316
在你的 App 的数据库中


293
00:09:21,256 --> 00:09:22,736
在此时 扩展可以选择


294
00:09:22,736 --> 00:09:24,426
在返回密码之前


295
00:09:24,546 --> 00:09:25,806
显示它自己的 UI 


296
00:09:26,726 --> 00:09:27,826
对于密码管理 App 来说


297
00:09:27,826 --> 00:09:29,246
请求用户输入


298
00:09:29,246 --> 00:09:31,126
一个主管密码


299
00:09:31,126 --> 00:09:32,016
或者执行其它形式的


300
00:09:32,016 --> 00:09:36,626
针对 App 的认证是非常有用的


301
00:09:36,886 --> 00:09:37,976
一旦你的扩展掌握了密码


302
00:09:37,976 --> 00:09:39,906
它会将其打包进


303
00:09:39,906 --> 00:09:41,536
一个 ASPasswordCredential


304
00:09:41,536 --> 00:09:42,796
通过完成扩展请求


305
00:09:42,796 --> 00:09:43,736
来传递给自动填充


306
00:09:44,226 --> 00:09:47,426
如果扩展没有显示出自己的 UI


307
00:09:47,426 --> 00:09:49,476
自动填充会


308
00:09:49,476 --> 00:09:50,826
为用户执行


309
00:09:50,826 --> 00:09:51,296
适当的认证


310
00:09:52,116 --> 00:09:53,346
根据设备和用户偏好的不同


311
00:09:53,346 --> 00:09:55,116
这一认证可能是


312
00:09:55,116 --> 00:09:57,356
面容 ID 触控 ID 


313
00:09:57,356 --> 00:09:58,666
设备密码或者什么都没有


314
00:09:59,236 --> 00:10:02,726
如果认证成功


315
00:10:02,726 --> 00:10:05,976
自动填充就会填充 App 中的用户名和密码


316
00:10:06,336 --> 00:10:08,676
这之中发生了非常多的事


317
00:10:08,806 --> 00:10:09,596
所以我要梳理一遍


318
00:10:09,596 --> 00:10:10,666
作为一个开发人员


319
00:10:10,666 --> 00:10:11,856
你需要为这一工作流程


320
00:10:11,856 --> 00:10:12,286
所做的支持


321
00:10:12,816 --> 00:10:16,096
你需要做的三件事是


322
00:10:16,346 --> 00:10:17,656
向自动填充提供


323
00:10:17,656 --> 00:10:18,866
你想向用户建议的


324
00:10:18,866 --> 00:10:19,966
凭证身份


325
00:10:20,926 --> 00:10:21,836
在你的扩展中执行支持


326
00:10:21,836 --> 00:10:22,736
以便建议被选中后


327
00:10:22,736 --> 00:10:24,196
提供密码


328
00:10:24,196 --> 00:10:27,666
并在扩展中显示定制 UI


329
00:10:27,666 --> 00:10:28,866
目的是在返回凭证前


330
00:10:28,866 --> 00:10:30,446
认证用户


331
00:10:30,446 --> 00:10:31,546
如果你的 UX 需要的话


332
00:10:32,546 --> 00:10:33,736
重申一下


333
00:10:33,736 --> 00:10:34,196
这一步不是必需的


334
00:10:34,776 --> 00:10:36,036
如果你不显示出定制 UI


335
00:10:36,036 --> 00:10:37,716
来执行验证


336
00:10:37,716 --> 00:10:38,646
自动填充会为你


337
00:10:38,646 --> 00:10:39,746
执行适当的验证


338
00:10:42,936 --> 00:10:44,296
凭证身份


339
00:10:44,296 --> 00:10:46,246
是由 ASPasswordCredentialIdentity 实例


340
00:10:46,246 --> 00:10:47,606
来表现的


341
00:10:48,336 --> 00:10:49,526
这一层级包含所有


342
00:10:49,526 --> 00:10:52,126
自动填充所需要知道的凭证信息


343
00:10:52,126 --> 00:10:53,746
以便确定在何处提供它们


344
00:10:54,676 --> 00:10:55,636
其中包含了一个服务标识符


345
00:10:55,636 --> 00:10:57,526
它会告诉自动填充


346
00:10:57,526 --> 00:10:59,036
在哪一个 App 或是网页上


347
00:10:59,036 --> 00:11:00,336
提供凭证建议


348
00:11:01,496 --> 00:11:03,086
凭证中的用户名


349
00:11:03,626 --> 00:11:06,646
以及可选记录身份字符串


350
00:11:06,646 --> 00:11:07,906
你可以使用它们


351
00:11:07,906 --> 00:11:09,086
来连接这一身份


352
00:11:09,086 --> 00:11:10,176
到你的 App 自身数据库中的一项记录


353
00:11:10,176 --> 00:11:13,446
以及一项等级参数


354
00:11:14,336 --> 00:11:15,776
如果用户有多个凭证


355
00:11:15,776 --> 00:11:17,166
对应一项服务


356
00:11:17,166 --> 00:11:19,006
且快速输入栏无法显示


357
00:11:19,006 --> 00:11:20,196
你可以使用等级参数


358
00:11:20,196 --> 00:11:21,156
来标记特定的凭证身份


359
00:11:21,156 --> 00:11:23,206
来给它们更高或更低的优先级


360
00:11:24,436 --> 00:11:25,556
有更高等级的凭证身份


361
00:11:25,656 --> 00:11:26,826
会优先于


362
00:11:26,826 --> 00:11:29,466
低等级的凭证身份被给出


363
00:11:32,476 --> 00:11:34,316
这些凭证身份


364
00:11:34,316 --> 00:11:35,696
会被保存在凭证身份库中


365
00:11:35,696 --> 00:11:38,896
也就是你 App 中的数据库


366
00:11:38,896 --> 00:11:40,606
你可以使用 ASCredentialIdentityStore 级


367
00:11:40,606 --> 00:11:42,296
来对其进行修改


368
00:11:43,356 --> 00:11:44,846
自动填充为用户提供建议凭证


369
00:11:44,846 --> 00:11:46,276
是通过搜索


370
00:11:46,276 --> 00:11:47,736
你 App 中的凭证身份库


371
00:11:48,316 --> 00:11:51,836
凭证身份库


372
00:11:51,836 --> 00:11:53,196
有完整的数据保护


373
00:11:53,196 --> 00:11:55,026
除了开放数据


374
00:11:55,026 --> 00:11:56,446
所以没有任何操作


375
00:11:56,446 --> 00:11:57,266
能在设备锁定的时候执行


376
00:11:58,246 --> 00:11:59,416
系统永远不会


377
00:11:59,416 --> 00:12:00,616
将凭证身份库与云服务同步


378
00:12:00,616 --> 00:12:02,516
或将其包含在备份中


379
00:12:02,736 --> 00:12:04,746
所以这些信息


380
00:12:05,276 --> 00:12:06,000
永远不会离开设备


381
00:12:07,826 --> 00:12:09,246
每一个 App 都有独立的


382
00:12:09,246 --> 00:12:11,216
凭证身份库 并且只有 App 本身或者


383
00:12:11,216 --> 00:12:13,436
相应扩展 才能对其进行修改


384
00:12:14,066 --> 00:12:15,336
这一库只会被自动填充读取


385
00:12:15,336 --> 00:12:17,246
用于决定


386
00:12:17,246 --> 00:12:19,286
向用户建议什么凭证


387
00:12:19,836 --> 00:12:23,316
并且凭证身份库


388
00:12:23,316 --> 00:12:26,226
只有在 App 扩展被用户启用后


389
00:12:26,226 --> 00:12:27,296
才能被修改


390
00:12:28,506 --> 00:12:29,716
如果你的扩展未启用


391
00:12:29,866 --> 00:12:31,616
对于库的更新的任何尝试将会失败


392
00:12:32,106 --> 00:12:33,386
如果用户禁用了你的扩展


393
00:12:33,386 --> 00:12:34,806
或者删除了你的 App


394
00:12:35,146 --> 00:12:36,296
整个凭证身份库


395
00:12:36,296 --> 00:12:37,026
将会被删除


396
00:12:37,476 --> 00:12:42,706
你的 App 需要更新其凭证身份库


397
00:12:42,706 --> 00:12:43,856
当对于它所能提供的凭证


398
00:12:43,856 --> 00:12:45,076
有新的信息变动的时候


399
00:12:46,316 --> 00:12:47,896
举例来说 


400
00:12:47,896 --> 00:12:49,616
你的 App 使用线上服务


401
00:12:49,616 --> 00:12:50,916
来保存用户的凭证


402
00:12:51,456 --> 00:12:54,156
当用户登录时


403
00:12:54,156 --> 00:12:55,006
你的 App 会开始获取


404
00:12:55,006 --> 00:12:56,026
用户的凭证


405
00:12:56,486 --> 00:12:59,186
这时你应该在库中


406
00:12:59,186 --> 00:13:00,796
更新凭证身份列表


407
00:13:00,796 --> 00:13:02,066
以便于新添加的凭证


408
00:13:02,066 --> 00:13:03,406
能够显示在快速输入栏上


409
00:13:03,926 --> 00:13:08,506
如果用户添加 删除


410
00:13:08,506 --> 00:13:10,326
或修改他们的凭证


411
00:13:10,326 --> 00:13:11,446
你的 App 要更新


412
00:13:11,446 --> 00:13:13,556
凭证身份库


413
00:13:13,556 --> 00:13:15,006
以保证能一直准确地反馈出


414
00:13:15,006 --> 00:13:16,716
这一组凭证 这是由你的 App 所提供的


415
00:13:18,516 --> 00:13:20,046
这些更新可能是由于


416
00:13:20,046 --> 00:13:21,466
在 App 内 用户在


417
00:13:21,536 --> 00:13:23,426
本定做出了修改


418
00:13:23,426 --> 00:13:25,566
或者可能是因为你的 App 同步了


419
00:13:25,566 --> 00:13:27,606
来自其它登录了线上服务的设备中的变更


420
00:13:29,746 --> 00:13:31,616
然后 如果用户要


421
00:13:31,616 --> 00:13:34,926
在当前设备上 登出线上服务


422
00:13:34,926 --> 00:13:36,016
你的 App 要


423
00:13:36,016 --> 00:13:37,696
从库中移除所有的凭证身份


424
00:13:37,696 --> 00:13:39,136
用户不会再看到


425
00:13:39,136 --> 00:13:40,606
关于这些凭证的建议


426
00:13:44,086 --> 00:13:46,136
在你的代码中 你要使用


427
00:13:46,136 --> 00:13:47,826
ASCredentialIdentityStore 级


428
00:13:47,826 --> 00:13:51,686
来与凭证身份库互动


429
00:13:51,686 --> 00:13:53,246
通过使用替代凭证身份


430
00:13:53,246 --> 00:13:55,286
并移除所有的


431
00:13:55,286 --> 00:13:56,946
凭证身份模式


432
00:13:57,716 --> 00:13:59,116
你可以替代或者清除


433
00:13:59,116 --> 00:14:00,516
被自动填充


434
00:14:00,516 --> 00:14:01,676
纳入考虑建议范畴内的


435
00:14:01,676 --> 00:14:02,246
凭证身份


436
00:14:04,556 --> 00:14:06,026
当出现个人修改时


437
00:14:06,026 --> 00:14:07,826
这些已保存的凭证身份


438
00:14:07,826 --> 00:14:09,496
或已移除的凭证身份模式


439
00:14:09,496 --> 00:14:11,666
会允许你


440
00:14:11,666 --> 00:14:15,386
添加 更新或移除凭证身份


441
00:14:15,386 --> 00:14:16,906
而不需要完全替代库中的内容


442
00:14:20,426 --> 00:14:21,486
关于系统


443
00:14:21,486 --> 00:14:23,426
需要了解的一个重要方面


444
00:14:23,426 --> 00:14:25,036
就是凭证身份库


445
00:14:25,036 --> 00:14:26,506
有时会被删除


446
00:14:26,506 --> 00:14:27,516
但你的 App 无法预见这一点


447
00:14:28,076 --> 00:14:31,276
例如 如果用户


448
00:14:31,276 --> 00:14:32,596
在自动填充中禁用了你的扩展


449
00:14:32,596 --> 00:14:34,336
而随后又重新启用了它


450
00:14:34,336 --> 00:14:36,386
但系统已经清空了库


451
00:14:37,296 --> 00:14:38,696
如果系统认为


452
00:14:38,696 --> 00:14:39,996
你的 App 提供凭证身份


453
00:14:39,996 --> 00:14:41,546
但一直不能


454
00:14:41,546 --> 00:14:43,076
提供密码


455
00:14:43,076 --> 00:14:44,276
当用户选择这些凭证的时候


456
00:14:44,276 --> 00:14:46,076
那么凭证身份库


457
00:14:46,076 --> 00:14:47,976
就会被删除


458
00:14:47,976 --> 00:14:49,116
以防用户再看到这些


459
00:14:49,116 --> 00:14:50,646
陈旧无用的凭证建议


460
00:14:51,076 --> 00:14:56,176
如果用户从备份中恢复了他们的设备


461
00:14:56,176 --> 00:14:57,116
并且有使用你的


462
00:14:57,116 --> 00:14:59,056
凭证提供扩展


463
00:14:59,056 --> 00:15:00,306
但是库中不会存在


464
00:15:00,306 --> 00:15:01,736
任何凭证身份


465
00:15:01,736 --> 00:15:02,596
因为它没有被包含在备份中


466
00:15:02,596 --> 00:15:04,546
你的 App 要能够


467
00:15:04,546 --> 00:15:06,516
处理这些情况


468
00:15:06,596 --> 00:15:08,316
ASCredentialIdentityStore


469
00:15:08,316 --> 00:15:09,576
能够帮助你检测这些情况


470
00:15:09,706 --> 00:15:10,726
你就能够采取合适的操作


471
00:15:10,726 --> 00:15:12,376
当你需要更新库的时候


472
00:15:15,776 --> 00:15:17,336
你可以使用状态获取模式


473
00:15:17,446 --> 00:15:18,666
来询问系统


474
00:15:18,666 --> 00:15:20,006
关于你的 App 的


475
00:15:20,006 --> 00:15:21,846
凭证身份库的情况


476
00:15:21,846 --> 00:15:23,356
将其返回为一个


477
00:15:23,356 --> 00:15:24,176
ASCredentialIdentityStoreState 项目


478
00:15:25,876 --> 00:15:27,566
它会告知你的第一件事


479
00:15:27,566 --> 00:15:28,926
是用户是否


480
00:15:28,926 --> 00:15:30,016
启用了你的扩展


481
00:15:30,726 --> 00:15:31,816
你应该在试图更新


482
00:15:31,816 --> 00:15:32,686
凭证身份库之前


483
00:15:32,686 --> 00:15:33,746
检查这一点


484
00:15:34,256 --> 00:15:35,606
如果你的扩展被禁用了


485
00:15:35,736 --> 00:15:36,816
那么保存或移除


486
00:15:36,816 --> 00:15:38,716
凭证身份是没有意义的


487
00:15:42,116 --> 00:15:44,306
它同样支持


488
00:15:44,306 --> 00:15:45,606
增量更新属性


489
00:15:46,026 --> 00:15:47,136
你可以用它来判断


490
00:15:47,136 --> 00:15:48,626
你的身份库是否有改动


491
00:15:48,626 --> 00:15:49,576
自从上一次


492
00:15:49,576 --> 00:15:51,636
更新之后


493
00:15:51,636 --> 00:15:52,746
如果你之前保存了


494
00:15:52,746 --> 00:15:53,756
凭证身份到库中


495
00:15:53,756 --> 00:15:55,826
就会返回 true 值


496
00:15:56,436 --> 00:15:57,646
提示你应该使用


497
00:15:57,646 --> 00:15:59,146
增量保存凭证身份


498
00:15:59,146 --> 00:16:03,386
并移除凭证身份模式


499
00:16:03,386 --> 00:16:04,916
如果库还没有被写入


500
00:16:04,916 --> 00:16:07,746
也许是因为你的 App 被禁用后


501
00:16:07,786 --> 00:16:08,996
又重新启用了


502
00:16:10,026 --> 00:16:11,446
那么增量更新


503
00:16:11,446 --> 00:16:12,546
就会返回 false 值


504
00:16:12,736 --> 00:16:13,706
你就应该


505
00:16:13,706 --> 00:16:15,176
向身份库中加入凭证身份的


506
00:16:15,176 --> 00:16:16,176
完整列表


507
00:16:16,176 --> 00:16:19,996
通过使用替代凭证身份的方法


508
00:16:22,306 --> 00:16:23,466
一旦你的 App 开始保存


509
00:16:23,466 --> 00:16:24,626
凭证身份到库中


510
00:16:24,626 --> 00:16:26,716
自动填充就可以开始


511
00:16:26,716 --> 00:16:27,546
给出你的 App 中的凭证


512
00:16:27,546 --> 00:16:28,776
显示在快速输入栏内


513
00:16:29,916 --> 00:16:31,556
接下来 你需要在你的扩展中


514
00:16:31,556 --> 00:16:32,816
添加支持来提供密码


515
00:16:32,816 --> 00:16:33,976
当其中的


516
00:16:33,976 --> 00:16:35,756
某一个凭证建议被选取


517
00:16:37,836 --> 00:16:39,846
此时 自动填充


518
00:16:39,846 --> 00:16:41,376
会首先启动你的扩展


519
00:16:41,376 --> 00:16:42,866
并向它请求密码


520
00:16:42,866 --> 00:16:44,166
但不在屏幕上显示你的 UI


521
00:16:44,346 --> 00:16:46,886
自动填充在执行这一步时


522
00:16:46,886 --> 00:16:48,596
在你的视图控制器中 


523
00:16:48,626 --> 00:16:50,306
会调用无需用户


524
00:16:50,536 --> 00:16:51,896
交互凭证提供的方法


525
00:16:52,616 --> 00:16:53,846
然后提供出一个


526
00:16:53,846 --> 00:16:54,776
ASPasswordCredentialIdentity


527
00:16:55,026 --> 00:16:56,026
代表着该凭证


528
00:16:56,026 --> 00:16:59,766
已被填充在这一方法中


529
00:16:59,766 --> 00:17:00,956
你需要查找


530
00:17:00,956 --> 00:17:01,786
属于给定凭证的相关密码


531
00:17:01,786 --> 00:17:03,346
并将其交还给


532
00:17:03,346 --> 00:17:05,106
自动填充


533
00:17:05,106 --> 00:17:07,026
通过使用所选凭证 完成请求的方法


534
00:17:07,536 --> 00:17:11,016
如果你的扩展


535
00:17:11,016 --> 00:17:12,526
想要显示出自己的 UI


536
00:17:13,195 --> 00:17:14,546
就取消扩展请求


537
00:17:14,705 --> 00:17:15,986
通过使用


538
00:17:15,986 --> 00:17:18,016
需要用户交互错误代码


539
00:17:18,016 --> 00:17:20,236
在 ASExtensionErrorDomin 内


540
00:17:22,116 --> 00:17:23,836
系统就会在你的视图控制器中


541
00:17:23,836 --> 00:17:25,746
调用准备接口


542
00:17:25,746 --> 00:17:28,966
以提供凭证模式


543
00:17:28,966 --> 00:17:29,286
并显示它的 UI


544
00:17:30,436 --> 00:17:31,966
在这一方法中 


545
00:17:31,966 --> 00:17:33,786
你的扩展会为工作流程建立它的 UI 


546
00:17:33,786 --> 00:17:34,726
来提供密码


547
00:17:35,796 --> 00:17:37,236
当密码最后准备好


548
00:17:37,236 --> 00:17:40,916
你将凭证返回给自动填充


549
00:17:40,916 --> 00:17:43,586
通过使用所选凭证 完成请求方法


550
00:17:44,806 --> 00:17:48,746
再一次 如果你的 UI 显示出来了


551
00:17:48,746 --> 00:17:50,076
自动填充就不会执行任何认证


552
00:17:50,076 --> 00:17:51,676
在它填入返回的凭证之前


553
00:17:52,266 --> 00:17:53,486
是由你的扩展来决定


554
00:17:53,486 --> 00:17:54,236
什么类型的认证


555
00:17:54,236 --> 00:17:55,546
是它所需要的


556
00:17:59,016 --> 00:18:00,436
在执行这一功能时


557
00:18:00,436 --> 00:18:01,526
要牢记一点


558
00:18:01,526 --> 00:18:02,896
你的扩展


559
00:18:02,896 --> 00:18:04,346
需要快速回应


560
00:18:04,346 --> 00:18:05,846
最开始无 UI 的请求


561
00:18:05,846 --> 00:18:07,896
无论结果是什么


562
00:18:09,316 --> 00:18:11,066
你的 UI 显示出来


563
00:18:11,066 --> 00:18:12,816
所以对用户来说


564
00:18:12,816 --> 00:18:14,086
你的扩展在后台运行


565
00:18:14,086 --> 00:18:15,056
并不会被他们察觉


566
00:18:16,076 --> 00:18:18,776
返回密码需要很长时间


567
00:18:18,776 --> 00:18:20,676
用户可能会感知到系统 你的 App


568
00:18:20,676 --> 00:18:23,846
或者他们正在使用的服务无响应


569
00:18:24,796 --> 00:18:25,786
这对于用户体验来说


570
00:18:25,786 --> 00:18:26,426
是非常糟糕的


571
00:18:26,946 --> 00:18:29,436
并且这是非常重要的


572
00:18:29,776 --> 00:18:31,396
如果几秒钟过去之后


573
00:18:31,396 --> 00:18:32,556
你的扩展还没有


574
00:18:32,556 --> 00:18:34,586
返回密码 被请求显示 UI


575
00:18:34,586 --> 00:18:36,356
或由于别的错误被取消


576
00:18:36,356 --> 00:18:38,116
自动填充会


577
00:18:38,116 --> 00:18:39,776
取消扩展且不填充凭证


578
00:18:41,616 --> 00:18:43,486
然而 这一超时问题


579
00:18:43,486 --> 00:18:45,376
不会发生在排错测试版中


580
00:18:45,376 --> 00:18:47,066
也不会发生在模拟器中


581
00:18:47,066 --> 00:18:48,226
所以你有大把时间


582
00:18:48,226 --> 00:18:49,996
来排查错误 并且不受系统影响


583
00:18:54,236 --> 00:18:55,746
当你在添加支持


584
00:18:55,746 --> 00:18:56,736
让凭证显示在


585
00:18:56,736 --> 00:18:57,726
快速输入栏时


586
00:18:57,726 --> 00:18:59,346
保持凭证身份库


587
00:18:59,346 --> 00:19:02,226
是最新版本尤为重要


588
00:19:02,226 --> 00:19:03,756
并且要与你的 App 所了解的凭证同步


589
00:19:04,856 --> 00:19:07,996
如果库不能与你的 App 数据同步


590
00:19:07,996 --> 00:19:09,166
用户就看不到新添加的凭证


591
00:19:09,166 --> 00:19:10,156
在快速输入栏内


592
00:19:10,156 --> 00:19:13,436
或者可能会在快速输入栏上 一直看到某个凭证


593
00:19:13,606 --> 00:19:14,816
即便他们已经从你的 App 中


594
00:19:14,816 --> 00:19:15,286
删除了这一凭证


595
00:19:16,686 --> 00:19:18,046
你应该好好利用


596
00:19:18,046 --> 00:19:19,416
ASCredentialIdentityStore 的


597
00:19:19,616 --> 00:19:21,186
增量更新 API


598
00:19:21,906 --> 00:19:23,346
每当有凭证改变时


599
00:19:23,346 --> 00:19:26,986
就替换整个凭证身份列表


600
00:19:26,986 --> 00:19:28,286
会十分费力费时 特别是


601
00:19:28,286 --> 00:19:29,966
当你有多个凭证身份要更新


602
00:19:31,016 --> 00:19:32,506
这样做对表现而言更有好处


603
00:19:32,506 --> 00:19:33,666
增量保存


604
00:19:33,666 --> 00:19:35,396
新的凭证身份


605
00:19:35,396 --> 00:19:36,986
或者当有变动时移除那些被删除的凭证


606
00:19:36,986 --> 00:19:39,866
而不要覆盖整个库


607
00:19:42,316 --> 00:19:43,916
请记住 


608
00:19:43,916 --> 00:19:45,266
当你的扩展被调用


609
00:19:45,336 --> 00:19:46,496
说明用户正在使用


610
00:19:46,496 --> 00:19:47,106
其它的 App


611
00:19:47,816 --> 00:19:50,886
将互动和 UI 减少到最小


612
00:19:50,886 --> 00:19:52,306
并且只添加


613
00:19:52,306 --> 00:19:53,546
为了用户获取密码所必需的部分


614
00:19:56,496 --> 00:19:57,666
如果加载你的密码数据库


615
00:19:57,666 --> 00:19:59,086
包含了非常复杂的步骤


616
00:19:59,086 --> 00:20:02,676
请避免在视图加载方法中 重做这一步骤


617
00:20:02,676 --> 00:20:04,016
在你的视图控制器中


618
00:20:04,016 --> 00:20:04,596
并稍后再将其解散


619
00:20:05,416 --> 00:20:06,836
系统可能会重复使用


620
00:20:06,836 --> 00:20:08,446
你的 App 扩展


621
00:20:08,446 --> 00:20:09,806
如果用户顺序登录多个服务


622
00:20:09,806 --> 00:20:11,386
需要使用你的扩展


623
00:20:12,686 --> 00:20:13,886
请考虑使用单一模式


624
00:20:13,886 --> 00:20:15,766
那么任何在一次扩展请求内


625
00:20:15,766 --> 00:20:17,596
完成的工作


626
00:20:17,596 --> 00:20:19,276
都可以被重复使用


627
00:20:19,276 --> 00:20:20,296
只要不是必须重复执行


628
00:20:20,836 --> 00:20:24,836
以上就概括了


629
00:20:24,836 --> 00:20:26,096
如何将你的凭证


630
00:20:26,096 --> 00:20:29,206
显示在快速输入栏上


631
00:20:29,376 --> 00:20:31,056
最后 我再来谈一个 API


632
00:20:31,056 --> 00:20:33,056
它可能对你的扩展会有帮助


633
00:20:34,106 --> 00:20:35,426
当用户为密码自动填充


634
00:20:35,426 --> 00:20:37,006
而启用了你的扩展


635
00:20:38,296 --> 00:20:39,796
你可能需要做一些设置


636
00:20:39,796 --> 00:20:41,096
为了让用户得到最佳体验


637
00:20:41,676 --> 00:20:43,186
首先 如果你支持


638
00:20:43,186 --> 00:20:44,046
在快速输入栏内


639
00:20:44,046 --> 00:20:45,726
显示凭证


640
00:20:45,726 --> 00:20:47,026
你的扩展需要先提供


641
00:20:47,026 --> 00:20:48,126
凭证身份


642
00:20:48,126 --> 00:20:49,086
给自动填充


643
00:20:50,116 --> 00:20:52,296
但此时 显示其它设置可能也是有用的


644
00:20:52,296 --> 00:20:54,226
比如让用户可以


645
00:20:54,226 --> 00:20:55,416
通过登录


646
00:20:55,416 --> 00:20:56,736
一项线上服务


647
00:20:56,736 --> 00:20:58,016
来取回密码


648
00:20:58,016 --> 00:20:58,396
如果他们还没有登录的话


649
00:21:00,286 --> 00:21:02,156
认证服务提供


650
00:21:02,156 --> 00:21:03,816
一个 API 来支持这些工作流程


651
00:21:04,476 --> 00:21:05,516
当这些都在你的扩展上启用


652
00:21:05,516 --> 00:21:07,396
设置可以启动


653
00:21:07,396 --> 00:21:08,726
你的扩展并显示出它的 UI


654
00:21:08,726 --> 00:21:11,386
你就可以让用户来配置它


655
00:21:13,096 --> 00:21:15,646
要进行这一操作


656
00:21:15,646 --> 00:21:17,076
为你的扩展打开


657
00:21:17,076 --> 00:21:19,176
信息特性列表 


658
00:21:19,276 --> 00:21:21,096
并在 NSExtensionAttributes 下添加一个


659
00:21:21,156 --> 00:21:23,716
新的键 ASCredentialProviderExtension


660
00:21:23,716 --> 00:21:26,186
ShowsConfigurationUI 


661
00:21:26,186 --> 00:21:27,496
且布尔值为 yes


662
00:21:28,426 --> 00:21:29,666
这就是系统能够如何知道


663
00:21:29,666 --> 00:21:30,956
当你的扩展被启用后


664
00:21:30,956 --> 00:21:31,496
要去使用它


665
00:21:33,896 --> 00:21:37,546
然后执行 为扩展配置准备接口方法


666
00:21:37,546 --> 00:21:38,906
在你的视图控制器中


667
00:21:41,776 --> 00:21:43,026
当你的扩展被首次启用时


668
00:21:43,606 --> 00:21:47,146
当你的扩展设置完毕


669
00:21:47,726 --> 00:21:49,076
在你的扩展环境下调用


670
00:21:49,076 --> 00:21:52,616
完成扩展配置请求模式


671
00:21:52,616 --> 00:21:54,256
设置就会关闭你的 UI


672
00:21:54,336 --> 00:21:57,456
此时 你的扩展就被启动了


673
00:21:57,906 --> 00:22:00,236
它此时为自动填充提供了凭证身份


674
00:22:00,236 --> 00:22:01,486
以便在快速输入栏上显示建议


675
00:22:02,136 --> 00:22:03,356
它可以提供密码


676
00:22:03,356 --> 00:22:04,326
当这些建议被选中时


677
00:22:04,326 --> 00:22:06,316
并且它也能显示给用户


678
00:22:06,316 --> 00:22:07,666
所有凭证的列表


679
00:22:08,236 --> 00:22:09,496
你现在已经完成了


680
00:22:09,496 --> 00:22:10,926
将密码自动填充整合进你的 App 中这件事


681
00:22:10,926 --> 00:22:11,906
用户可以开始享受


682
00:22:11,906 --> 00:22:13,166
将密码保存在你的 App 中


683
00:22:13,166 --> 00:22:14,576
所带来的便捷


684
00:22:14,806 --> 00:22:15,646
无论何时何地


685
00:22:18,276 --> 00:22:20,906
还有更多非常棒的实例


686
00:22:20,906 --> 00:22:22,706
你可以在开发你的扩展时 进行参考


687
00:22:23,256 --> 00:22:27,496
正如我们之前所谈的


688
00:22:27,496 --> 00:22:28,856
主视图控制器是负责


689
00:22:28,856 --> 00:22:32,076
显示 UI 为不同的功能


690
00:22:32,866 --> 00:22:34,156
要做到这一点


691
00:22:34,156 --> 00:22:35,536
我们建议使用独立的视图控制器


692
00:22:35,536 --> 00:22:36,876
且它们是由主视图控制器


693
00:22:36,876 --> 00:22:37,376
所管理的


694
00:22:38,596 --> 00:22:40,286
比如说 你可能想要


695
00:22:40,286 --> 00:22:42,786
用一个视图控制器层级来显示


696
00:22:42,786 --> 00:22:43,146
凭证身份列表


697
00:22:43,456 --> 00:22:44,896
另一个用来


698
00:22:44,896 --> 00:22:45,886
在填充凭证时


699
00:22:45,886 --> 00:22:46,546
认证用户


700
00:22:47,056 --> 00:22:50,066
你可以将这些视图控制器


701
00:22:50,066 --> 00:22:51,826
显示在主视图控制器中


702
00:22:51,826 --> 00:22:53,306
或者使用视图控制器控制面板


703
00:22:53,376 --> 00:22:54,366
来嵌入它们的视图


704
00:22:54,506 --> 00:22:56,496
如果你通过


705
00:22:56,496 --> 00:22:57,746
显示视图控制器来准备接口


706
00:22:57,746 --> 00:22:59,366
这一显示过程


707
00:22:59,366 --> 00:23:00,206
是需要无动画的


708
00:23:00,206 --> 00:23:03,086
因为主视图控制器的显示


709
00:23:03,086 --> 00:23:04,766
已经有了动画


710
00:23:05,356 --> 00:23:09,766
总而言之 扩展需要是


711
00:23:09,766 --> 00:23:10,826
轻量化的 


712
00:23:10,826 --> 00:23:12,416
且能够随时终止的


713
00:23:12,416 --> 00:23:13,396
这也包括


714
00:23:13,396 --> 00:23:14,896
自动填充凭证提供扩展


715
00:23:16,046 --> 00:23:17,226
你的扩展是会被唤醒


716
00:23:17,226 --> 00:23:18,846
来执行一件指定的任务


717
00:23:18,996 --> 00:23:20,126
所以你不应该添加任何


718
00:23:20,126 --> 00:23:21,966
不必要的工作流程


719
00:23:21,966 --> 00:23:23,536
或者多余的交互


720
00:23:25,116 --> 00:23:26,666
请注意 系统可能会


721
00:23:26,666 --> 00:23:27,866
在任何时候


722
00:23:27,866 --> 00:23:29,526
出于各类原因


723
00:23:29,526 --> 00:23:30,026
终止或暂定你的扩展


724
00:23:30,026 --> 00:23:33,566
比如说 系统会终止


725
00:23:33,566 --> 00:23:34,866
凭证提供扩展


726
00:23:34,866 --> 00:23:36,166
当用户切换 App 


727
00:23:36,166 --> 00:23:37,016
而它们处于使用状态时


728
00:23:38,656 --> 00:23:39,936
你的扩展将会得到一个


729
00:23:39,936 --> 00:23:41,206
独立的标记盒 它来自于主要 App


730
00:23:41,206 --> 00:23:42,616
但它仍然需要共享数据


731
00:23:42,616 --> 00:23:44,726
比如用户的凭证


732
00:23:45,586 --> 00:23:47,106
使用 App 组或共享钥匙串


733
00:23:47,106 --> 00:23:48,746
以便在扩展和 App 之间


734
00:23:48,746 --> 00:23:50,146
共享数据


735
00:23:51,316 --> 00:23:52,616
关于扩展开发的回顾


736
00:23:52,616 --> 00:23:54,596
请参考


737
00:23:54,596 --> 00:23:56,426
为 iOS 和 OS X 建立扩展


738
00:23:56,506 --> 00:23:58,856
会议的第二部分


739
00:23:58,856 --> 00:24:00,436
来自于 WWDC 2014


740
00:24:03,036 --> 00:24:05,246
最后 你可以使用 Safari 浏览器


741
00:24:05,246 --> 00:24:06,046
如果你需要为你的


742
00:24:06,046 --> 00:24:07,386
凭证提供扩展排查错误


743
00:24:07,576 --> 00:24:08,456
当你测试


744
00:24:08,456 --> 00:24:09,096
凭证填充的时候


745
00:24:10,396 --> 00:24:12,416
要执行这一步 


746
00:24:12,416 --> 00:24:13,966
首先激活扩展方案流程


747
00:24:13,966 --> 00:24:15,476
选择目标 然后选择运行


748
00:24:17,556 --> 00:24:19,526
当你执行这一操作时 Xcode 会询问


749
00:24:19,526 --> 00:24:20,896
让你选择一个 App 来承载


750
00:24:20,896 --> 00:24:21,476
这一扩展


751
00:24:22,136 --> 00:24:23,886
在列表中选择 Safari 浏览器


752
00:24:23,886 --> 00:24:25,266
然后单击运行按钮


753
00:24:26,766 --> 00:24:28,386
Safari 浏览器会启动


754
00:24:28,386 --> 00:24:29,946
你就可以定位到


755
00:24:29,946 --> 00:24:30,926
你想要测试你的扩展的


756
00:24:30,926 --> 00:24:31,496
登录页面


757
00:24:32,376 --> 00:24:33,496
当你打开你的凭证列表


758
00:24:33,496 --> 00:24:36,416
或者在快速输入栏中 选择一个凭证


759
00:24:36,546 --> 00:24:38,076
扩展就会启动


760
00:24:38,076 --> 00:24:39,376
Xcode 会附上排错程序


761
00:24:39,376 --> 00:24:40,916
这样你就可以开始


762
00:24:40,916 --> 00:24:41,576
你的排错过程了


763
00:24:44,506 --> 00:24:46,106
要在其它情况下


764
00:24:46,106 --> 00:24:48,316
为你的扩展排错


765
00:24:48,316 --> 00:24:50,436
使用 Attach to Process Item 选项


766
00:24:50,436 --> 00:24:51,806
在 Xcode 的排错菜单中


767
00:24:51,806 --> 00:24:52,206
来附加排错程序


768
00:24:53,426 --> 00:24:54,626
如果你想要测试设置 UI


769
00:24:54,626 --> 00:24:56,746
你可以手动打开设置


770
00:24:56,746 --> 00:24:58,806
来启用你的扩展


771
00:24:58,806 --> 00:25:00,326
或者你也可以打开任何 App 的登录页面


772
00:25:00,326 --> 00:25:01,636
如果你想在那里为自动填充排错


773
00:25:05,376 --> 00:25:07,686
总结一下 iOS 12 


774
00:25:07,686 --> 00:25:08,836
允许密码管理 App 


775
00:25:08,836 --> 00:25:10,056
整合密码自动填充功能


776
00:25:11,146 --> 00:25:13,736
使用全新的认证服务框架中的 API


777
00:25:13,736 --> 00:25:15,426
你的凭证提供扩展


778
00:25:15,426 --> 00:25:16,896
可以展示给用户


779
00:25:16,896 --> 00:25:18,296
一张完整的凭证列表


780
00:25:18,916 --> 00:25:19,746
将凭证显示在


781
00:25:19,746 --> 00:25:21,696
快速输入栏上 


782
00:25:21,696 --> 00:25:22,976
并在设置中 有选择地


783
00:25:22,976 --> 00:25:24,856
为用户提供配置扩展的方式


784
00:25:27,416 --> 00:25:30,486
更多信息 请参考有关这一会议的


785
00:25:30,486 --> 00:25:31,006
Apple 开发人员页面


786
00:25:32,066 --> 00:25:32,996
要了解更多关于


787
00:25:32,996 --> 00:25:33,916
iOS 12 中的密码管理改进


788
00:25:33,916 --> 00:25:37,796
请查看 自动强密码和安全码


789
00:25:37,796 --> 00:25:39,276
自动填充会议


790
00:25:40,156 --> 00:25:41,226
如果你想进一步了解


791
00:25:41,226 --> 00:25:42,216
密码自动填充功能


792
00:25:42,216 --> 00:25:44,276
和相关领域


793
00:25:44,736 --> 00:25:46,156
请查看介绍 App 


794
00:25:46,156 --> 00:25:48,166
的密码自动填充会议


795
00:25:48,166 --> 00:25:49,866
来自于 WWDC 2017

