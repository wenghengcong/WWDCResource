1
00:00:07,516 --> 00:00:14,500
[ 音乐 ]


2
00:00:20,516 --> 00:00:26,936
[ 掌声 ]


3
00:00:27,436 --> 00:00:29,726
>> 大家好 我叫 Neil Desai


4
00:00:29,726 --> 00:00:31,456
是 watchOS 框架工程师  


5
00:00:31,456 --> 00:00:33,116
我很激动能在这里


6
00:00:33,116 --> 00:00:34,216
探讨如何为


7
00:00:34,216 --> 00:00:36,116
watchOS 创建一些杰出的音频 App  


8
00:00:36,616 --> 00:00:38,276
说实话  我已经等待了


9
00:00:38,276 --> 00:00:39,336
超过一年才轮到我跟大家


10
00:00:39,336 --> 00:00:40,566
探讨这些  我真十分开心


11
00:00:40,566 --> 00:00:42,626
能站在这里 让我们直截了当


12
00:00:42,626 --> 00:00:43,616
进入正题吧  


13
00:00:44,576 --> 00:00:46,596
在 watchOS 4 中 我们展示了一个


14
00:00:46,596 --> 00:00:48,906
修订版的音乐和广播 App


15
00:00:48,906 --> 00:00:51,016
在 watchOS 5 中 我们展示了一个


16
00:00:51,016 --> 00:00:52,386
全新的播客 App 


17
00:00:52,486 --> 00:00:53,906
我们发现用户


18
00:00:53,986 --> 00:00:56,156
十分喜欢


19
00:00:56,156 --> 00:00:58,366
在路上或者


20
00:00:58,366 --> 00:00:59,286
在锻炼的时候播放音乐  


21
00:01:02,046 --> 00:01:02,686
我们也发现了


22
00:01:02,686 --> 00:01:04,275
用户真的特别喜欢能够


23
00:01:04,275 --> 00:01:05,696
远程控制


24
00:01:05,696 --> 00:01:06,776
在另一个设备上


25
00:01:06,776 --> 00:01:07,316
播放的音乐


26
00:01:07,766 --> 00:01:09,956
比如你的 iPhone 或者 HomePod  


27
00:01:10,296 --> 00:01:12,016
我也特别喜欢这一项功能  


28
00:01:12,016 --> 00:01:13,636
我很喜欢能够


29
00:01:13,636 --> 00:01:15,916
在 iPhone 上播放音乐


30
00:01:15,916 --> 00:01:17,196
于此同时也可以


31
00:01:17,196 --> 00:01:18,716
通过我的手表


32
00:01:18,716 --> 00:01:19,456
直接控制播放的设置 比如音量  


33
00:01:19,916 --> 00:01:20,996
这是个伟大的功能  


34
00:01:21,756 --> 00:01:23,426
今天 在 watchOS 5 上


35
00:01:23,426 --> 00:01:25,086
我们将展示如何创造


36
00:01:25,086 --> 00:01:27,016
美好的体验 如同


37
00:01:27,016 --> 00:01:28,396
在 Keynote 上看到的一样


38
00:01:28,396 --> 00:01:30,466
在 Audible 中和在


39
00:01:30,536 --> 00:01:31,626
Pandora 中能做到的一样 


40
00:01:32,496 --> 00:01:34,516
并且他们可以使用


41
00:01:34,516 --> 00:01:36,756
一些 watchOS 5 提供的


42
00:01:36,756 --> 00:01:37,726
新的功能


43
00:01:37,766 --> 00:01:39,526
今天我要介绍


44
00:01:39,526 --> 00:01:41,436
我们是如何做到这些同样的事情的


45
00:01:42,216 --> 00:01:43,156
为了达成这个目标 我们先要


46
00:01:43,156 --> 00:01:44,686
讲一下四个今天的主要主题  


47
00:01:44,966 --> 00:01:46,736
我们将要介绍


48
00:01:46,736 --> 00:01:48,276
原生的控制 以及如何


49
00:01:48,276 --> 00:01:49,926
把我们的系统控制


50
00:01:50,266 --> 00:01:51,926
直接嵌入你的 App


51
00:01:52,826 --> 00:01:53,856
我们要介绍如何


52
00:01:53,856 --> 00:01:55,846
把信息内容推送到手表上  


53
00:01:56,196 --> 00:01:57,496
在我们获得了信息内容之后


54
00:01:57,496 --> 00:01:59,186
如何为用户播放


55
00:01:59,186 --> 00:02:00,416
一些东西  


56
00:02:01,716 --> 00:02:02,766
最后我们会再


57
00:02:02,766 --> 00:02:04,296
梳理一遍整体的音频体验


58
00:02:04,296 --> 00:02:05,656
以及如何给我们的用户们


59
00:02:05,656 --> 00:02:07,296
提供丰富的体验  


60
00:02:07,296 --> 00:02:08,536
并且这些体验要始终良好地


61
00:02:08,536 --> 00:02:09,356
集成在整个系统里  


62
00:02:11,276 --> 00:02:13,326
首先让我们先探讨原生的控制吧  


63
00:02:15,776 --> 00:02:17,736
在 watchOS 5 中 我们展示了两种


64
00:02:17,736 --> 00:02:19,046
新的控制并且它们


65
00:02:19,046 --> 00:02:20,936
都可以直接植入在你的 App 之中  


66
00:02:21,926 --> 00:02:23,756
第一个是 Now Playing


67
00:02:23,756 --> 00:02:25,696
视图 它可以被嵌入到你的


68
00:02:25,696 --> 00:02:26,746
watchOS App 之中  


69
00:02:27,136 --> 00:02:29,306
这个很适合用于


70
00:02:29,306 --> 00:02:31,966
播放那些也许不属于你的内容  


71
00:02:32,456 --> 00:02:34,876
你还可以嵌入一个音量


72
00:02:34,876 --> 00:02:36,286
控制 这样你可以做一个


73
00:02:36,286 --> 00:02:38,166
自己定制的 UI 来方便用户


74
00:02:38,166 --> 00:02:40,016
控制音量  


75
00:02:41,146 --> 00:02:42,306
你也许会在想


76
00:02:42,306 --> 00:02:45,686
这个 Now Playing 界面 到底什么时候才会


77
00:02:45,686 --> 00:02:47,446
允许用户


78
00:02:47,526 --> 00:02:49,646
控制那些音频内容却不属于


79
00:02:49,646 --> 00:02:50,986
我的音频播放呢


80
00:02:52,086 --> 00:02:53,676
让我来举个例子  


81
00:02:53,676 --> 00:02:54,756
我自己在使用健身 App 的时候


82
00:02:54,756 --> 00:02:55,406
就是这么做的  


83
00:02:55,846 --> 00:02:57,606
我正在做 HIIT 健身  


84
00:02:57,606 --> 00:02:58,636
我向左划一下  


85
00:02:58,636 --> 00:03:00,426
我需要一个健身背景音乐 “Eye of the


86
00:03:00,426 --> 00:03:02,096
Tiger” 我有一点点


87
00:03:02,096 --> 00:03:03,376
无趣 但是我实际上


88
00:03:03,376 --> 00:03:05,016
真的有时候在健身时候


89
00:03:05,016 --> 00:03:05,956
听这首歌 我很喜欢这首歌  


90
00:03:06,406 --> 00:03:07,596
并且这是一个很棒的体验


91
00:03:07,596 --> 00:03:08,896
只要这么划过来


92
00:03:08,896 --> 00:03:11,546
就可以让用户控制播放  


93
00:03:12,236 --> 00:03:15,066
所以如果你在制作一个健身 App 


94
00:03:15,066 --> 00:03:16,736
你也可以做出同样的


95
00:03:16,736 --> 00:03:18,006
用户体验 只要你


96
00:03:18,006 --> 00:03:19,856
把 Now Playing 直接嵌入到


97
00:03:19,856 --> 00:03:20,656
你的 App 里  


98
00:03:22,036 --> 00:03:22,826
让我们探讨一下


99
00:03:22,826 --> 00:03:24,846
Now Playing 的一些特性  


100
00:03:24,846 --> 00:03:26,796
第一个我要说的是


101
00:03:26,796 --> 00:03:28,346
Digital Crown


102
00:03:28,346 --> 00:03:29,426
它控制了音量


103
00:03:30,006 --> 00:03:31,396
正因为如此


104
00:03:31,396 --> 00:03:32,536
你要把这个视图


105
00:03:32,536 --> 00:03:34,026
放在不可滚动的控制器里  


106
00:03:34,526 --> 00:03:36,326
比如在我的这个 App 里


107
00:03:36,326 --> 00:03:38,686
我实际上仅仅把


108
00:03:38,686 --> 00:03:40,126
Now Playing 直接塞进了


109
00:03:40,126 --> 00:03:41,886
控制器里  


110
00:03:41,886 --> 00:03:43,746
或者你可以重新加载一个


111
00:03:43,746 --> 00:03:45,726
包含这个控制器的页面  


112
00:03:45,726 --> 00:03:47,486
或者把他放到一个类似健身 App


113
00:03:47,806 --> 00:03:48,966
的接口之中  


114
00:03:49,436 --> 00:03:52,366
之后这个视图


115
00:03:52,366 --> 00:03:54,646
就可以自动控制他所代表的内容  


116
00:03:54,736 --> 00:03:56,606
这意味着无论是提供播放


117
00:03:56,606 --> 00:03:58,256
的原始数据的 iPhone 


118
00:03:58,256 --> 00:03:59,766
还是手表也好


119
00:04:00,236 --> 00:04:01,356
这个视图将会


120
00:04:01,356 --> 00:04:01,966
为你把其他事情都处理好  


121
00:04:01,966 --> 00:04:03,846
你完全不必担心这个问题  


122
00:04:04,916 --> 00:04:06,466
最后 Now Playing


123
00:04:06,466 --> 00:04:07,696
可以自动获取你


124
00:04:07,696 --> 00:04:09,426
App 色调 所以


125
00:04:09,426 --> 00:04:10,956
它能跟你的 App 的外观与感觉


126
00:04:10,956 --> 00:04:11,846
匹配起来  


127
00:04:13,076 --> 00:04:15,616
现在 我们在 Interface Builder


128
00:04:15,616 --> 00:04:17,336
使用一下它  


129
00:04:17,726 --> 00:04:19,446
我们现打开了 Xcode  


130
00:04:19,446 --> 00:04:20,916
选定了 Object Library  


131
00:04:21,016 --> 00:04:22,696
之后我们可以拖动


132
00:04:22,696 --> 00:04:24,866
Now Playing 到控制器里  


133
00:04:25,176 --> 00:04:26,496
一旦我的用户点进来  


134
00:04:26,496 --> 00:04:28,496
所有的事情都为你做好了


135
00:04:28,496 --> 00:04:29,816
这个系统会把其他工作都处理好  


136
00:04:30,196 --> 00:04:32,096
就是如此简单  


137
00:04:33,536 --> 00:04:35,046
这就是我们的 Now Playing 视图  


138
00:04:35,746 --> 00:04:37,386
我们现在说说音量控制


139
00:04:38,176 --> 00:04:39,606
这个音量控制


140
00:04:39,606 --> 00:04:41,616
可以设置成控制


141
00:04:41,616 --> 00:04:43,936
iPhone 的音量或本地手表的音量  


142
00:04:44,616 --> 00:04:46,216
跟 Now Playing 一样


143
00:04:46,216 --> 00:04:47,606
我们会获取


144
00:04:47,606 --> 00:04:48,946
App 的色调


145
00:04:48,946 --> 00:04:51,896
并且在使用这个控制的时候调整好它  


146
00:04:54,636 --> 00:04:58,426
当用户在在转动


147
00:04:58,426 --> 00:05:00,126
Digital Crown 的时候


148
00:05:00,126 --> 00:05:01,646
音量控制的色调


149
00:05:01,956 --> 00:05:04,026
将会调整到系统绿色


150
00:05:04,026 --> 00:05:05,746
以匹配其他的部分  


151
00:05:06,276 --> 00:05:09,796
至于用这个音量控制调整


152
00:05:09,796 --> 00:05:12,376
本地播放的音量


153
00:05:12,626 --> 00:05:14,596
还是 iPhone 的音量


154
00:05:14,596 --> 00:05:18,506
在 Attributes Inspector 有个选择框


155
00:05:18,506 --> 00:05:19,746
可以控制本地音量  


156
00:05:20,486 --> 00:05:21,696
如果你没有选中它  


157
00:05:21,926 --> 00:05:22,866
这个音量控制


158
00:05:22,866 --> 00:05:24,316
将默认控制 iPhone 上的音量 


159
00:05:25,086 --> 00:05:27,056
如果你选中了它


160
00:05:27,166 --> 00:05:28,676
音量控制将控制


161
00:05:28,676 --> 00:05:29,676
手表上的音量 


162
00:05:30,216 --> 00:05:32,656
如果你的 App


163
00:05:32,656 --> 00:05:34,366
有多个应用场景  


164
00:05:34,366 --> 00:05:35,506
分别要远程控制播放内容


165
00:05:35,506 --> 00:05:37,466
或者要控制本地播放内容  


166
00:05:37,466 --> 00:05:39,236
这样的话  


167
00:05:39,236 --> 00:05:40,446
你可能需要多个控制器


168
00:05:40,446 --> 00:05:41,616
来控制着不同的音量


169
00:05:41,616 --> 00:05:43,136
你需要在设计的时候


170
00:05:43,136 --> 00:05:44,436
就要做好这些相关的决定


171
00:05:45,516 --> 00:05:47,176
好的 这些就是


172
00:05:47,176 --> 00:05:49,276
我们的系统控制的内容 


173
00:05:49,276 --> 00:05:50,466
接下来让我们介绍一下


174
00:05:50,466 --> 00:05:51,996
如何在实际操作中将


175
00:05:51,996 --> 00:05:53,266
内容数据传递给设备


176
00:05:55,096 --> 00:05:57,606
我做了一个


177
00:05:57,606 --> 00:05:59,306
博物馆导览的 App 


178
00:05:59,466 --> 00:06:01,166
我希望我的用户


179
00:06:01,456 --> 00:06:03,336
直接点一下就可以在博物馆里


180
00:06:03,336 --> 00:06:04,836
听导览并且


181
00:06:04,836 --> 00:06:06,116
这是一个在手表上很棒的应用体验是  


182
00:06:06,116 --> 00:06:09,496
因为我们可以把手机放到一边  


183
00:06:09,496 --> 00:06:10,716
我们可以在


184
00:06:10,716 --> 00:06:12,666
手腕之上得到完整的体验并且


185
00:06:12,666 --> 00:06:14,656
可以欣赏身边的艺术  


186
00:06:15,046 --> 00:06:17,936
比如说我做了一个


187
00:06:17,936 --> 00:06:19,706
缓冲区让用户


188
00:06:19,816 --> 00:06:23,446
在去博物馆的路上下载内容  


189
00:06:24,236 --> 00:06:25,616
这样的话 我需要


190
00:06:25,616 --> 00:06:27,926
使用 URLSession 然后


191
00:06:27,926 --> 00:06:29,726
直接从服务器获取数据


192
00:06:29,726 --> 00:06:31,906
让手表自己把数据下载下来  


193
00:06:33,326 --> 00:06:35,546
让我们看一眼代码


194
00:06:35,546 --> 00:06:38,026
是如何实现的  


195
00:06:38,226 --> 00:06:39,256
请看这里  


196
00:06:39,256 --> 00:06:41,626
我有一个 IBAction 绑定到了


197
00:06:41,626 --> 00:06:43,206
我的 WK Interface 按钮  


198
00:06:43,446 --> 00:06:44,246
首先你需要


199
00:06:44,246 --> 00:06:46,776
注意的就是 isFrontmostTimeoutExtended


200
00:06:46,816 --> 00:06:48,776
的属性设置成了 true  


201
00:06:50,006 --> 00:06:51,096
我们等下还要再讨论


202
00:06:51,096 --> 00:06:52,546
一下这件事情  


203
00:06:52,686 --> 00:06:53,586
但是我想说的是


204
00:06:53,586 --> 00:06:55,416
我们的用户


205
00:06:55,416 --> 00:06:57,526
和设备进行了交互 


206
00:06:57,616 --> 00:07:00,526
可以说当用户再一次抬起手时


207
00:07:00,526 --> 00:07:01,356
他们希望看到


208
00:07:01,356 --> 00:07:02,076
我们的 App  


209
00:07:02,586 --> 00:07:04,476
因为我们延长了


210
00:07:04,476 --> 00:07:05,946
最前超时 我们从


211
00:07:05,946 --> 00:07:07,266
系统得到了更多的优先级


212
00:07:07,266 --> 00:07:09,256
来帮助我们使用的 URLSessions  


213
00:07:09,636 --> 00:07:10,766
同样的 这个我们


214
00:07:10,766 --> 00:07:11,776
等一下再说


215
00:07:12,186 --> 00:07:15,656
当然了 用户在任何时候


216
00:07:15,656 --> 00:07:16,926
都可以把手垂下


217
00:07:17,176 --> 00:07:18,476
所以我使用


218
00:07:18,476 --> 00:07:19,416
backgroundSession 来保证这一点


219
00:07:19,826 --> 00:07:21,276
这样的话当我的 App


220
00:07:21,276 --> 00:07:22,516
进入后台


221
00:07:22,516 --> 00:07:23,886
下载还在继续


222
00:07:24,566 --> 00:07:26,186
然后 我们可以直接启动


223
00:07:26,186 --> 00:07:27,706
下载任务然后


224
00:07:27,906 --> 00:07:28,816
将它忽略 


225
00:07:29,686 --> 00:07:30,926
当你在构建这样的


226
00:07:30,926 --> 00:07:32,886
用户体验时候 你希望


227
00:07:32,886 --> 00:07:34,556
显示下载进度


228
00:07:34,626 --> 00:07:36,216
并且当然要处理各种错误


229
00:07:36,586 --> 00:07:40,406
让我们看看这是如何实现的  


230
00:07:40,406 --> 00:07:41,926
看一下这里我建造了一个类


231
00:07:41,926 --> 00:07:43,796
DownloadManager 它是我的


232
00:07:44,026 --> 00:07:45,536
SessionTaskDelegate 也是


233
00:07:45,566 --> 00:07:47,176
URLSessionDownload Delegate  


234
00:07:47,666 --> 00:07:49,886
在第一个函数里


235
00:07:49,886 --> 00:07:51,296
我可以获取总共下载了的


236
00:07:51,296 --> 00:07:52,646
数据大小并把它除以


237
00:07:52,646 --> 00:07:54,076
要写入的总字节数  


238
00:07:54,356 --> 00:07:55,366
这样 我们可以获得


239
00:07:55,366 --> 00:07:56,676
某个下载任务的进度  


240
00:07:56,676 --> 00:07:58,606
在 URLSession


241
00:07:59,006 --> 00:08:00,796
提醒我并且给我发出相关


242
00:08:00,796 --> 00:08:01,436
信息的时候


243
00:08:01,926 --> 00:08:04,086
这样一来 我可以在


244
00:08:04,086 --> 00:08:07,026
UI 上更新下载进度  


245
00:08:07,726 --> 00:08:10,266
之后当下载完成时


246
00:08:10,266 --> 00:08:12,316
我当然可以


247
00:08:12,316 --> 00:08:13,686
操作文件 我也许


248
00:08:13,686 --> 00:08:15,426
想要发送一个通知


249
00:08:15,426 --> 00:08:17,156
提醒用户


250
00:08:17,156 --> 00:08:18,246
文件已经准备好播放了  


251
00:08:18,766 --> 00:08:21,976
当然了 我的程序


252
00:08:21,976 --> 00:08:22,936
也会调用 didCompleteWithError   


253
00:08:22,936 --> 00:08:24,946
用于适当地清理


254
00:08:24,946 --> 00:08:26,266
并处理该点


255
00:08:26,496 --> 00:08:28,066
任何存在的


256
00:08:28,066 --> 00:08:28,916
任何错误


257
00:08:29,946 --> 00:08:31,466
这非常棒  


258
00:08:31,466 --> 00:08:32,976
使用 URLSession 我们可以


259
00:08:32,976 --> 00:08:34,265
直接把数据下载到手表上 


260
00:08:34,816 --> 00:08:36,416
但有时 iPhone


261
00:08:36,416 --> 00:08:38,056
上已经有了数据了


262
00:08:39,106 --> 00:08:40,576
这样的话我们可以用


263
00:08:40,576 --> 00:08:44,416
WatchConnectivity 直接传送


264
00:08:42,135 --> 00:08:44,416
文件到手表上


265
00:08:48,536 --> 00:08:50,336
为了完成这个 我们可以使用


266
00:08:50,336 --> 00:08:51,426
transfer file 的 API  


267
00:08:51,426 --> 00:08:53,946
watchOS 5 有个可以


268
00:08:53,946 --> 00:08:56,256
获取传输进度的新功能  


269
00:08:57,376 --> 00:08:58,306
让我们来看一眼  


270
00:08:58,956 --> 00:09:00,546
在代码里 我们可以看到


271
00:09:00,546 --> 00:09:02,236
WCSession FileTransfer 的 App


272
00:09:02,596 --> 00:09:03,996
正如新功能


273
00:09:03,996 --> 00:09:05,526
进度属性已经可以在


274
00:09:05,526 --> 00:09:08,166
watchOS 5 and iOS 12 查看了  


275
00:09:12,996 --> 00:09:14,666
我可以在我的 iOS 界面上


276
00:09:14,666 --> 00:09:16,186
获得 fileTransfer 


277
00:09:16,186 --> 00:09:18,966
获取进度 更新数据  


278
00:09:20,566 --> 00:09:21,476
如果你希望了解更多


279
00:09:21,476 --> 00:09:22,766
WatchConnectivity 相关内容


280
00:09:23,156 --> 00:09:24,346
网上有完备的


281
00:09:24,346 --> 00:09:25,596
示例代码 


282
00:09:25,936 --> 00:09:27,056
强烈推荐你去看一看


283
00:09:27,056 --> 00:09:28,196
simple WatchConnectivity


284
00:09:28,196 --> 00:09:29,426
的实例代码


285
00:09:29,906 --> 00:09:33,196
你可能会思考


286
00:09:33,776 --> 00:09:34,936
我们有 URLSession 也有


287
00:09:34,936 --> 00:09:36,896
WatchConnectivity 我究竟


288
00:09:37,106 --> 00:09:38,176
应该用哪个呢


289
00:09:38,176 --> 00:09:39,486
究竟什么时候这么用 会比较合理呢


290
00:09:41,016 --> 00:09:43,126
对于 URLSession 我们希望在


291
00:09:43,126 --> 00:09:45,866
在用户在手表上启动下载的时候使用它  


292
00:09:46,646 --> 00:09:48,836
然后我们将向 connectivity property


293
00:09:48,836 --> 00:09:50,676
发送请求以获取


294
00:09:50,676 --> 00:09:54,136
在那里的网络连接  


295
00:09:54,306 --> 00:09:55,476
我还要提一下


296
00:09:55,476 --> 00:09:57,006
如果 iPhone 在旁边


297
00:09:57,006 --> 00:09:58,306
那么你的请求将会


298
00:09:58,606 --> 00:10:00,336
由在信号范围内的 iPhone 进行代理中转  


299
00:10:01,566 --> 00:10:02,906
如果你希望了解一些


300
00:10:03,176 --> 00:10:05,216
URLSession 的细枝末节  


301
00:10:05,486 --> 00:10:06,516
有一个去年的讲座


302
00:10:06,516 --> 00:10:07,826
可以在网上找到


303
00:10:07,826 --> 00:10:09,426
Advances in Networking Part 2  


304
00:10:09,726 --> 00:10:11,296
我强烈建议你去看一下  


305
00:10:11,816 --> 00:10:14,646
然后呢 另一方面


306
00:10:14,646 --> 00:10:16,706
对于 watchConnectivity   


307
00:10:16,706 --> 00:10:17,856
它会变得十分重要


308
00:10:17,856 --> 00:10:19,336
当用户在 iPhone 上


309
00:10:19,336 --> 00:10:20,696
启动了下载任务


310
00:10:20,696 --> 00:10:22,806
或者已经有


311
00:10:22,806 --> 00:10:23,726
内容下载好了


312
00:10:23,726 --> 00:10:25,186
并且已经没有必要


313
00:10:25,186 --> 00:10:26,596
再向服务器请求了的时候


314
00:10:28,716 --> 00:10:30,446
这两个功能 特别是


315
00:10:30,446 --> 00:10:31,646
watchConnectivity 你需要


316
00:10:31,646 --> 00:10:33,606
对用户的操作进行一定的预测  


317
00:10:34,116 --> 00:10:35,476
不要忘了告诉用户


318
00:10:35,476 --> 00:10:36,526
下载任务或者


319
00:10:36,526 --> 00:10:38,376
文件传输的任务快完成了  


320
00:10:38,376 --> 00:10:40,596
还有那些把手表放在了


321
00:10:40,596 --> 00:10:42,306
充电器上之后会进行的操作  


322
00:10:42,846 --> 00:10:45,006
比如我们自己是这么做的  


323
00:10:45,336 --> 00:10:47,156
在 Apple Watch App 中的


324
00:10:47,156 --> 00:10:49,676
Music 界面 在最上面


325
00:10:49,676 --> 00:10:51,926
我们会给用户显示


326
00:10:51,926 --> 00:10:53,516
有多少歌被实际


327
00:10:53,516 --> 00:10:54,846
传送到了手表上


328
00:10:54,846 --> 00:10:56,956
我们甚至会告诉


329
00:10:56,956 --> 00:10:59,166
用户 当 Apple Watch 连上充电器的时候


330
00:10:59,166 --> 00:11:00,216
音乐将会被同步


331
00:11:00,216 --> 00:11:03,156
别把这个忘了  


332
00:11:03,326 --> 00:11:04,796
好了 我们聊了


333
00:11:04,796 --> 00:11:07,186
获取内容 现在


334
00:11:07,186 --> 00:11:08,216
我们有了内容


335
00:11:08,216 --> 00:11:09,466
我们说一下如何播放它们  


336
00:11:10,466 --> 00:11:12,326
在 watchOS 上 我们有好多


337
00:11:12,326 --> 00:11:13,736
不同的工具可以使用  


338
00:11:14,186 --> 00:11:16,226
一部分工具本身


339
00:11:16,226 --> 00:11:17,546
就在 WatchKit 里面了  


340
00:11:18,036 --> 00:11:20,646
这里有带有选项的


341
00:11:20,646 --> 00:11:22,216
presentMediaPlayerController


342
00:11:22,216 --> 00:11:23,966
你可以用它


343
00:11:24,426 --> 00:11:27,086
这里也有 WKAudioFile QueuePlayer  


344
00:11:27,306 --> 00:11:29,076
你可以提供一个列表的


345
00:11:29,076 --> 00:11:30,416
播放内容 之后队列播放器


346
00:11:30,416 --> 00:11:31,506
将按照排列播放


347
00:11:31,536 --> 00:11:32,126
相应的内容  


348
00:11:32,636 --> 00:11:35,536
所以 presentMediaPlayerController


349
00:11:35,536 --> 00:11:37,256
的选项


350
00:11:37,326 --> 00:11:38,716
将显示在 UI 之上  


351
00:11:38,716 --> 00:11:40,656
所以这个控制器将给你做好其他的工作  


352
00:11:41,056 --> 00:11:42,476
你真的不需要做很多的工作  


353
00:11:42,826 --> 00:11:44,456
这是个完美的选项


354
00:11:44,456 --> 00:11:46,306
尤其对于短时内容来说


355
00:11:46,306 --> 00:11:47,176
你不用在这件事情上


356
00:11:47,176 --> 00:11:48,686
考虑太多  


357
00:11:50,096 --> 00:11:52,536
并且 WKAudioFIleQueuePlayer 是


358
00:11:52,536 --> 00:11:53,416
在后台播放


359
00:11:53,416 --> 00:11:54,736
较长的内容时


360
00:11:54,736 --> 00:11:55,706
的一个绝佳选项  


361
00:11:56,126 --> 00:11:57,346
这是一个传送带式


362
00:11:57,346 --> 00:12:00,116
的方法 有了播放的内容


363
00:12:00,116 --> 00:12:01,726
你可以直接


364
00:12:01,726 --> 00:12:02,896
把它移交给系统


365
00:12:02,896 --> 00:12:03,916
系统会代表你


366
00:12:03,916 --> 00:12:04,426
进行播放  


367
00:12:05,006 --> 00:12:06,936
这就是


368
00:12:06,936 --> 00:12:08,736
WKAudioFileQueuePlayer 的设计目的  


369
00:12:09,086 --> 00:12:12,696
这里也有个正在工作的 AVFoundation


370
00:12:16,386 --> 00:12:19,136
所以这里有 AVAudioPlayer 和


371
00:12:19,136 --> 00:12:19,866
AVAudioEngine  


372
00:12:20,396 --> 00:12:22,966
在 watchOS 5 之前


373
00:12:22,966 --> 00:12:24,396
他被绑定在健身后台模式


374
00:12:24,396 --> 00:12:26,486
或者当你的 App


375
00:12:26,486 --> 00:12:28,196
在前台并且屏幕已经点亮的时候


376
00:12:29,406 --> 00:12:31,736
比如 Nike Run Club App


377
00:12:31,796 --> 00:12:33,086
它就干了这个


378
00:12:33,086 --> 00:12:34,346
比如你正在


379
00:12:34,346 --> 00:12:36,346
跑步并且你想要一点禅修的感觉


380
00:12:36,686 --> 00:12:39,026
你可以用 Headspace 播放


381
00:12:39,026 --> 00:12:40,586
一点冥想的辅助内容  


382
00:12:41,956 --> 00:12:44,546
在 watchOS 5 之前


383
00:12:44,546 --> 00:12:46,406
利用 AVFoundation 的后台播放


384
00:12:46,406 --> 00:12:47,756
只可能在


385
00:12:47,756 --> 00:12:49,666
这些种类的健身 App 中使用  


386
00:12:50,166 --> 00:12:52,666
在现在的 watchOS 中 


387
00:12:52,666 --> 00:12:54,296
有一个全新的


388
00:12:54,456 --> 00:12:55,746
后台模式并且


389
00:12:55,746 --> 00:12:56,716
它令我很是激动  


390
00:12:57,846 --> 00:13:00,296
让我们说一下


391
00:13:00,296 --> 00:13:01,306
我现在正在做的东西  


392
00:13:02,096 --> 00:13:04,076
有点拓宽我们的 tool kit 的感觉  


393
00:13:07,376 --> 00:13:09,806
我们有 AVFoundation 并且


394
00:13:09,806 --> 00:13:11,026
它没有绑定在


395
00:13:11,026 --> 00:13:12,156
某种后台模式


396
00:13:12,156 --> 00:13:13,996
我们就可以直接用 AVFoundation


397
00:13:13,996 --> 00:13:15,266
在后台播放中  


398
00:13:16,616 --> 00:13:18,626
我们开放了权限


399
00:13:18,626 --> 00:13:21,586
允许你 允许用户


400
00:13:21,586 --> 00:13:22,776
选择一个播放的路线  


401
00:13:22,776 --> 00:13:24,256
比如不同的


402
00:13:24,256 --> 00:13:25,196
蓝牙耳机  


403
00:13:26,176 --> 00:13:28,146
在 watchOS 5 种我们也


404
00:13:28,146 --> 00:13:29,376
开放了 MediaPlayer.


405
00:13:29,376 --> 00:13:30,636
framework 并且你可以提供


406
00:13:30,636 --> 00:13:32,186
一些 Now Playing 信息


407
00:13:32,186 --> 00:13:36,026
同时处理远程控制的指令  


408
00:13:36,026 --> 00:13:37,626
就像 Music Podcasts


409
00:13:37,626 --> 00:13:39,366
和 Radio App 中的一样


410
00:13:39,366 --> 00:13:41,056
长的内容被限定到了


411
00:13:41,406 --> 00:13:43,516
蓝牙播放 也就是说


412
00:13:43,816 --> 00:13:45,406
这是一种更好的方式来


413
00:13:45,406 --> 00:13:46,776
使你使用


414
00:13:47,236 --> 00:13:49,276
扬声器播放  


415
00:13:49,446 --> 00:13:50,906
让我们一步一步的


416
00:13:51,306 --> 00:13:52,836
来看一下


417
00:13:52,836 --> 00:13:54,386
后台较长的内容


418
00:13:54,386 --> 00:13:55,206
是如何播放的


419
00:13:55,756 --> 00:13:59,886
首先把你的音乐添加到 info.plist


420
00:13:59,886 --> 00:14:00,726
的后台模式  


421
00:14:01,166 --> 00:14:04,366
之后你建立起


422
00:14:04,366 --> 00:14:05,656
合适的 session  


423
00:14:05,656 --> 00:14:06,806
然后告诉你的系统


424
00:14:06,806 --> 00:14:07,696
你想要播放


425
00:14:07,696 --> 00:14:09,646
较长的内容在系统后台  


426
00:14:09,956 --> 00:14:13,456
你希望允许用户选择


427
00:14:13,696 --> 00:14:14,736
不同的路线  


428
00:14:14,986 --> 00:14:16,976
之后呢你去


429
00:14:16,976 --> 00:14:18,416
调用播放函数


430
00:14:18,666 --> 00:14:19,656
并且在用户


431
00:14:19,656 --> 00:14:20,916
正在播放的时候


432
00:14:20,916 --> 00:14:23,006
适时处理播放任务  


433
00:14:23,866 --> 00:14:25,606
让我们再仔细分析一下


434
00:14:25,606 --> 00:14:28,266
内部的代码  


435
00:14:29,196 --> 00:14:30,956
在 Xcode 里面的 Project


436
00:14:30,956 --> 00:14:32,486
Settings 进入到 Capabilities 里


437
00:14:32,486 --> 00:14:34,696
你可以调整


438
00:14:34,696 --> 00:14:35,876
Background Mode 的开关 你选中


439
00:14:35,876 --> 00:14:37,396
Audio 然后这就好了  


440
00:14:37,396 --> 00:14:38,206
可以进行下一步了  


441
00:14:38,576 --> 00:14:42,056
现在开始建立你的 session  


442
00:14:42,236 --> 00:14:43,186
你需要设置在 AVAudioSession 之中  


443
00:14:43,186 --> 00:14:45,126
的 routeSharingPolicy 


444
00:14:45,346 --> 00:14:46,626
到 longform 模式


445
00:14:46,726 --> 00:14:49,026
之后你调用 在 AVAudioSession 里面的


446
00:14:49,026 --> 00:14:53,726
newActivate WithOptions Completion 方法


447
00:14:53,936 --> 00:14:55,276
在它完成之后


448
00:14:55,276 --> 00:14:56,216
你就可以调用播放了  


449
00:14:57,276 --> 00:14:58,946
在你第一次


450
00:14:58,946 --> 00:15:01,106
启动 activate 函数之前到


451
00:15:01,266 --> 00:15:02,926
completion 返回之前这段时间内


452
00:15:02,966 --> 00:15:04,676
播放路线的选择器


453
00:15:04,676 --> 00:15:06,956
将会将你的选择显示出来  


454
00:15:07,336 --> 00:15:10,516
这是播放路线的选择器的样子  


455
00:15:10,516 --> 00:15:12,616
它将会在你的 App 内


456
00:15:12,616 --> 00:15:14,126
出现 然后它会


457
00:15:14,126 --> 00:15:15,966
允许用户选择


458
00:15:15,966 --> 00:15:17,266
使用哪个蓝牙耳机


459
00:15:17,266 --> 00:15:18,746
播放内容并且


460
00:15:18,746 --> 00:15:19,656
控制播放  


461
00:15:21,376 --> 00:15:22,636
我们再说一下


462
00:15:22,636 --> 00:15:23,486
播放路线的选择器  


463
00:15:23,986 --> 00:15:25,446
还是一样 调用一下


464
00:15:25,446 --> 00:15:26,796
asynchronous activate


465
00:15:27,166 --> 00:15:29,496
函数然后它就会


466
00:15:29,496 --> 00:15:32,036
显示播放路线的选择


467
00:15:32,276 --> 00:15:33,456
之后它会返回


468
00:15:33,796 --> 00:15:34,856
completion 在你处理掉它


469
00:15:34,856 --> 00:15:36,396
之后你就可以直接调用播放  


470
00:15:36,396 --> 00:15:39,146
每次要播放东西的时候


471
00:15:39,146 --> 00:15:40,016
你都需要这么做  


472
00:15:40,236 --> 00:15:41,566
这样呢 你就可以保证


473
00:15:41,566 --> 00:15:43,846
每次在播放的时候


474
00:15:43,846 --> 00:15:45,046
都可以选择合适的播放路线  


475
00:15:46,496 --> 00:15:47,956
然后我们进入代码


476
00:15:47,956 --> 00:15:49,246
看一下如何建立 session  


477
00:15:49,886 --> 00:15:50,836
现在我们有一个


478
00:15:50,836 --> 00:15:52,576
AVAudioSession 我们要


479
00:15:52,576 --> 00:15:54,256
把我们的类别设置到播放  


480
00:15:54,816 --> 00:15:56,606
之后我们把模式设置到默认  


481
00:15:57,256 --> 00:15:58,706
最重要的是


482
00:15:58,706 --> 00:15:59,596
我们要把 route


483
00:15:59,596 --> 00:16:01,176
sharing policy 设置到 longform  


484
00:16:02,076 --> 00:16:03,656
之后我们启动 session


485
00:16:03,656 --> 00:16:07,316
它将会显示路线选择器


486
00:16:07,316 --> 00:16:08,946
之后你就可以调用播放  


487
00:16:10,006 --> 00:16:11,816
现在呢 关于线路选择器


488
00:16:11,816 --> 00:16:13,666
我要指出


489
00:16:13,666 --> 00:16:15,906
我们需要把播放路线想成两种不同的方式  


490
00:16:16,766 --> 00:16:18,536
第一种是基于 Apple


491
00:16:18,536 --> 00:16:19,906
无线芯片的播放路线


492
00:16:19,906 --> 00:16:21,866
我们经常叫它 W1 路线  


493
00:16:21,866 --> 00:16:24,256
这些是 AirPods 或者


494
00:16:24,256 --> 00:16:25,506
Beats Studio Wireless 使用的


495
00:16:26,476 --> 00:16:27,386
之后呢是我们的


496
00:16:27,386 --> 00:16:28,946
普通蓝牙耳机路线  


497
00:16:29,646 --> 00:16:30,986
在讨论路线选择器的时候


498
00:16:30,986 --> 00:16:32,836
区别这两种路线


499
00:16:33,196 --> 00:16:34,496
是十分重要的  


500
00:16:37,056 --> 00:16:39,206
如果用户正连着一个


501
00:16:39,206 --> 00:16:40,726
播放路线 那么


502
00:16:40,726 --> 00:16:41,846
选择器将代表你自动


503
00:16:41,846 --> 00:16:43,186
选择这个路线  


504
00:16:43,756 --> 00:16:44,666
这点非常好因为


505
00:16:44,666 --> 00:16:46,146
选择器甚至不会


506
00:16:46,146 --> 00:16:46,796
显示在界面上 


507
00:16:47,036 --> 00:16:47,926
你将马上


508
00:16:47,926 --> 00:16:50,066
得到 completion 的回复


509
00:16:50,506 --> 00:16:53,296
如果你的用户


510
00:16:53,296 --> 00:16:55,276
连到了一个 W1 线路


511
00:16:55,306 --> 00:16:57,416
但是它正在被 iPhone 占用


512
00:16:57,416 --> 00:16:58,806
系统将会直接从 iPhone


513
00:16:58,806 --> 00:17:00,346
接管这个播放线路


514
00:17:00,346 --> 00:17:01,586
并把它给你的手表  


515
00:17:02,616 --> 00:17:04,646
有时候这也不会发生  


516
00:17:04,646 --> 00:17:06,126
这就是当你的


517
00:17:06,126 --> 00:17:07,435
iPhone 有更高的优先级  


518
00:17:07,866 --> 00:17:09,205
比如我正在


519
00:17:09,205 --> 00:17:11,465
我的手机上打电话  


520
00:17:11,685 --> 00:17:12,636
这时候我们将


521
00:17:12,636 --> 00:17:13,766
不会为手表接管路线


522
00:17:13,766 --> 00:17:15,286
因为打电话


523
00:17:15,776 --> 00:17:16,945
可能更加重要  


524
00:17:17,425 --> 00:17:20,195
如果没有正在工作的


525
00:17:20,195 --> 00:17:21,356
路线 路线选择器


526
00:17:21,356 --> 00:17:23,685
将会显示出你的选择


527
00:17:24,636 --> 00:17:26,425
好了 这是路线选择器


528
00:17:26,425 --> 00:17:27,576
现在我们说一下


529
00:17:27,576 --> 00:17:29,296
究竟如何


530
00:17:29,296 --> 00:17:30,316
播放内容  


531
00:17:31,306 --> 00:17:32,686
你还是只需要用


532
00:17:32,686 --> 00:17:34,836
AVAudioPlayer 和 AVAudioEngine  


533
00:17:34,996 --> 00:17:35,946
watchOS 上支持了


534
00:17:35,946 --> 00:17:38,236
很多种内容格式 


535
00:17:38,946 --> 00:17:40,116
更好的一点是


536
00:17:40,226 --> 00:17:42,586
如果你有 iOS 代码使用了


537
00:17:42,586 --> 00:17:44,006
这些类 你可以在 iOS 和 watchOS


538
00:17:44,006 --> 00:17:48,026
播放操作中共享程序框架  


539
00:17:49,096 --> 00:17:51,206
在 AVAudioEngine 中


540
00:17:51,206 --> 00:17:53,736
你实际上可以


541
00:17:53,736 --> 00:17:55,506
配合着 AVAudioPlayer


542
00:17:55,506 --> 00:17:57,446
节点播放一些 DRM 内容


543
00:17:57,996 --> 00:17:59,666
你可以播放你自己的


544
00:17:59,666 --> 00:18:01,086
DRM 内容 你自己


545
00:18:01,086 --> 00:18:03,426
进行解密 然后给用户播放  


546
00:18:03,936 --> 00:18:06,476
请特别注意一下


547
00:18:06,476 --> 00:18:09,676
watchOS 本身的


548
00:18:09,676 --> 00:18:11,866
电力 所以请在真的十分


549
00:18:11,866 --> 00:18:14,056
必要时候使用音频播放


550
00:18:14,056 --> 00:18:15,476
比如用户真的就想


551
00:18:15,476 --> 00:18:16,326
在这放音频  


552
00:18:17,316 --> 00:18:19,386
对于 AVAudioEngine 来说


553
00:18:19,386 --> 00:18:21,886
autoShutdownEnabled 属性是


554
00:18:21,966 --> 00:18:24,096
默认开启的 所以如果没有


555
00:18:24,096 --> 00:18:25,946
在 AVAudioEngine 发现活动节点


556
00:18:25,946 --> 00:18:29,026
我们会在必要的时候


557
00:18:29,026 --> 00:18:31,026
自动关闭 AVAudioEngine  


558
00:18:31,516 --> 00:18:34,796
这就是我们的播放  


559
00:18:35,366 --> 00:18:37,366
现在我们说一下


560
00:18:37,366 --> 00:18:38,436
我们的 MediaPlayer framework  


561
00:18:38,826 --> 00:18:40,076
当然了 如果你要


562
00:18:40,076 --> 00:18:41,176
提供我们的 Now Playing


563
00:18:41,176 --> 00:18:44,136
信息给系统  


564
00:18:44,586 --> 00:18:47,576
那么 Now Playing UI


565
00:18:47,576 --> 00:18:48,826
会被更新 这是一个


566
00:18:48,826 --> 00:18:50,766
系统级的播放信息


567
00:18:50,796 --> 00:18:51,886
并且它会


568
00:18:51,886 --> 00:18:54,136
基于你提供的信息更新  


569
00:18:54,556 --> 00:18:55,506
所以这些信息


570
00:18:55,506 --> 00:18:57,156
会出现在 Now Playing App 或者在


571
00:18:57,156 --> 00:18:59,386
Workout 一类的 App 之内或者


572
00:18:59,386 --> 00:19:00,636
那些嵌入了 Now Playing


573
00:19:00,636 --> 00:19:02,906
的第三方 App  


574
00:19:03,376 --> 00:19:04,796
这些地方都会显示  


575
00:19:04,796 --> 00:19:07,366
接下来 靠着 MediaPlayer


576
00:19:07,366 --> 00:19:08,326
framework 我们希望处理一些


577
00:19:08,326 --> 00:19:10,386
事件和各种媒体播放


578
00:19:10,386 --> 00:19:11,626
远程控制指令


579
00:19:11,626 --> 00:19:13,396
比如在 AirPods 上的


580
00:19:13,396 --> 00:19:14,526
播放下一曲


581
00:19:15,576 --> 00:19:16,846
让我们看看这些代码


582
00:19:16,846 --> 00:19:18,146
如何提供


583
00:19:18,146 --> 00:19:19,346
Now Playing 信息的  


584
00:19:23,216 --> 00:19:26,986
在这里我们有 MPNowPlaying InfoCenter  


585
00:19:26,986 --> 00:19:28,176
我们想要获取信息 


586
00:19:28,576 --> 00:19:30,406
然后接下来设置 nowPlayingInfo  


587
00:19:30,956 --> 00:19:35,046
之后我们需要设置


588
00:19:35,046 --> 00:19:36,526
我们的 artwork 我们的 MPMedia


589
00:19:36,526 --> 00:19:37,566
ItemArtwork  


590
00:19:37,866 --> 00:19:39,126
但是这个功能现在还没有在 seed 1 发布


591
00:19:39,126 --> 00:19:40,876
它将会在 seed 2 里面出现  


592
00:19:41,456 --> 00:19:43,526
这个例子里 你提供的 artwork


593
00:19:43,526 --> 00:19:46,436
显示在 Siri watch face  


594
00:19:46,956 --> 00:19:51,606
之后呢 我们设置好了 title album  


595
00:19:51,606 --> 00:19:53,646
artwork 我们它设置到


596
00:19:53,646 --> 00:19:55,436
我们的 nowPlaying InfoCenter  


597
00:19:56,206 --> 00:19:57,726
之后我们再做一些


598
00:19:57,726 --> 00:20:01,206
类似的工作 之后我们的数据


599
00:20:01,206 --> 00:20:02,946
将在 Now Playing App 中出现  


600
00:20:02,946 --> 00:20:04,816
这就是 Now Playing App 


601
00:20:05,086 --> 00:20:07,516
我提供了一些关于


602
00:20:07,516 --> 00:20:10,296
在我的 App 正在播放音频的信息  


603
00:20:10,686 --> 00:20:15,196
然后 Now Playing 与此同时


604
00:20:15,196 --> 00:20:16,306
也会被更新  


605
00:20:16,576 --> 00:20:17,726
这个例子里 最底下


606
00:20:17,726 --> 00:20:18,866
显示着 "Lights in the Sky"


607
00:20:18,866 --> 00:20:19,956
正是我正在听的  


608
00:20:20,286 --> 00:20:22,786
之后呢  关于媒体播放


609
00:20:22,786 --> 00:20:24,246
远程控制指令 也是一样的


610
00:20:24,246 --> 00:20:25,256
用 MediaPlayer framework  


611
00:20:25,256 --> 00:20:27,416
现在在 watchOS 上你可以


612
00:20:27,416 --> 00:20:29,466
随心所欲处理这些指令  


613
00:20:31,366 --> 00:20:32,876
让我们看一些代码  


614
00:20:32,876 --> 00:20:34,456
我们获取


615
00:20:34,566 --> 00:20:35,986
MPRemoteCommandCenter  


616
00:20:36,836 --> 00:20:38,266
之后 不去播放


617
00:20:38,266 --> 00:20:40,046
下一曲 我们实际上


618
00:20:40,046 --> 00:20:42,156
可以为用户


619
00:20:42,656 --> 00:20:43,546
做得更好


620
00:20:43,666 --> 00:20:44,846
所以我有这样一个函数  


621
00:20:44,966 --> 00:20:46,966
它是 enableSkipForwardCommand


622
00:20:47,396 --> 00:20:49,866
它的默认是 15 秒


623
00:20:50,816 --> 00:20:52,646
我可以设置一个喜欢的


624
00:20:52,646 --> 00:20:53,836
快进时间  


625
00:20:53,946 --> 00:20:55,966
然后我又添加了 target


626
00:20:55,966 --> 00:20:57,836
和 selector 接下来我在 command center


627
00:20:57,836 --> 00:21:00,596
启动了远程指令  


628
00:21:01,896 --> 00:21:03,406
如果你想了解更多


629
00:21:03,406 --> 00:21:04,616
media player framework 的信息 特别是


630
00:21:04,616 --> 00:21:05,696
媒体播放远程指令


631
00:21:05,696 --> 00:21:07,296
我很推荐


632
00:21:07,296 --> 00:21:09,236
看一下 MP remote


633
00:21:09,236 --> 00:21:11,376
command sample 的例子 这个在网上可以找到  


634
00:21:11,946 --> 00:21:12,996
这个例子里


635
00:21:12,996 --> 00:21:14,536
设置好了想要的


636
00:21:14,536 --> 00:21:17,156
快进时间之后之后 Now


637
00:21:17,156 --> 00:21:19,226
Playing App 将会被适当地调整  


638
00:21:19,226 --> 00:21:21,056
这个 Now Playing UI  无论在哪里


639
00:21:21,056 --> 00:21:22,876
都会显示减 15 秒


640
00:21:22,876 --> 00:21:25,196
或者加 15 秒


641
00:21:25,196 --> 00:21:29,396
这些都可以按你的喜好进行调整  


642
00:21:29,546 --> 00:21:32,086
好了 这就是手表上的


643
00:21:32,086 --> 00:21:34,486
音频体验或者是


644
00:21:34,486 --> 00:21:35,826
音频播放 我们再说说


645
00:21:35,826 --> 00:21:37,016
音频体验吧  


646
00:21:42,216 --> 00:21:44,286
我想说音频体验主要


647
00:21:44,286 --> 00:21:46,086
有四个主要的方面  


648
00:21:46,476 --> 00:21:47,506
有我们的自动启动


649
00:21:47,506 --> 00:21:48,536
功能让你的 App


650
00:21:48,536 --> 00:21:49,686
自动启动  


651
00:21:50,236 --> 00:21:51,696
有最前 App 状态


652
00:21:51,696 --> 00:21:54,366
并且我们如何在 App 中利用它  


653
00:21:54,936 --> 00:21:56,396
有我们的新的


654
00:21:56,396 --> 00:21:57,356
交互式通知  


655
00:21:57,716 --> 00:22:00,066
和我们的 Siri 快捷启动  


656
00:22:03,076 --> 00:22:05,566
我们已经说了


657
00:22:05,566 --> 00:22:06,856
很多在手表上的


658
00:22:06,856 --> 00:22:09,316
播放 但是现在我要


659
00:22:09,316 --> 00:22:10,836
说一说之前聊过的东西  


660
00:22:10,836 --> 00:22:11,986
我们还想再过一遍


661
00:22:11,986 --> 00:22:14,946
远程控制的例子  


662
00:22:15,136 --> 00:22:16,886
比方说我正在 iPhone 上


663
00:22:16,886 --> 00:22:19,026
用 Apple Music 放音乐


664
00:22:19,026 --> 00:22:20,426
Now Playing App 会自动


665
00:22:20,426 --> 00:22:22,726
在我的手表上显示相关信息  


666
00:22:23,016 --> 00:22:24,486
我很喜欢这个功能  


667
00:22:24,486 --> 00:22:25,986
就像魔法一样  


668
00:22:25,986 --> 00:22:27,396
看一眼我的手腕  


669
00:22:27,396 --> 00:22:28,896
我就可以控制播放了  


670
00:22:28,896 --> 00:22:31,876
这是最酷的事情了  


671
00:22:33,306 --> 00:22:34,456
这个例子中 我们的 App


672
00:22:34,456 --> 00:22:35,626
其实在 iPhone 上


673
00:22:35,626 --> 00:22:37,226
播放内容


674
00:22:37,226 --> 00:22:38,626
之后我们的


675
00:22:38,626 --> 00:22:40,936
手表 App 就自动开启了  


676
00:22:45,356 --> 00:22:46,766
我们把这个叫做


677
00:22:46,766 --> 00:22:47,886
自动启动音频 App 功能  


678
00:22:48,386 --> 00:22:49,766
只要 Now Playing


679
00:22:49,766 --> 00:22:51,496
session 正在 iPhone 上运行


680
00:22:51,806 --> 00:22:53,426
我们的 Apple Watch App


681
00:22:53,426 --> 00:22:55,116
就会被提到最前面显示  


682
00:22:56,126 --> 00:22:57,316
并且会在 session 中


683
00:22:57,316 --> 00:22:59,766
一直保持最前  


684
00:23:00,056 --> 00:23:01,406
只要用户在


685
00:23:01,406 --> 00:23:02,726
iPhone 上听内容


686
00:23:02,986 --> 00:23:04,736
我们的 App 就会


687
00:23:04,736 --> 00:23:06,076
保持在最前


688
00:23:06,076 --> 00:23:07,296
除非用户会到别的地方  


689
00:23:08,556 --> 00:23:11,196
在 watchOS 5 上我们


690
00:23:11,196 --> 00:23:12,756
开放了 Now Playing session


691
00:23:12,756 --> 00:23:14,816
API 这能让你知道


692
00:23:14,816 --> 00:23:16,236
何时你 iPhone 上的 Now Playing session


693
00:23:16,236 --> 00:23:17,756
被启动了


694
00:23:18,156 --> 00:23:19,496
这样你可以


695
00:23:19,496 --> 00:23:21,396
直接给用户显示合适的界面  


696
00:23:21,906 --> 00:23:24,026
做这个呢 你需要


697
00:23:24,026 --> 00:23:25,486
使用 handleRemoteNow


698
00:23:25,486 --> 00:23:27,216
PlayingActivity on


699
00:23:27,216 --> 00:23:28,326
WKExtension Delegate  


700
00:23:30,026 --> 00:23:31,636
让我们看看


701
00:23:31,636 --> 00:23:35,896
具体代码是怎么用  


702
00:23:36,086 --> 00:23:36,976
看这里  


703
00:23:36,976 --> 00:23:38,196
我有了我的 extension delegate


704
00:23:39,176 --> 00:23:40,406
我可以实现


705
00:23:40,406 --> 00:23:42,316
handleRemoteNow PlayingActivity  


706
00:23:43,216 --> 00:23:44,286
首先我需要


707
00:23:44,286 --> 00:23:46,846
检查一下我的用户界面正在显示什么


708
00:23:47,476 --> 00:23:50,256
所以我调用一下 visible


709
00:23:50,256 --> 00:23:51,926
interface controller 我可以


710
00:23:51,926 --> 00:23:54,016
知道我的用户现在界面的样子


711
00:23:54,016 --> 00:23:55,856
他是否在我的 Now


712
00:23:55,856 --> 00:23:57,576
Playing UI 上 如果在那么很棒  


713
00:23:57,776 --> 00:23:58,746
就留在这里  


714
00:23:59,896 --> 00:24:01,116
如果不在


715
00:24:01,116 --> 00:24:04,316
我们直接重新加载界面  


716
00:24:04,316 --> 00:24:05,836
这样我们就有了


717
00:24:05,836 --> 00:24:07,636
魔法般的体验 因为无论停在哪个界面


718
00:24:07,636 --> 00:24:09,536
我举起手


719
00:24:09,536 --> 00:24:10,976
就可以看到我想控制的东西  


720
00:24:16,116 --> 00:24:18,396
有时候呢 如果它不是很适合


721
00:24:18,396 --> 00:24:20,316
用户的需求


722
00:24:20,316 --> 00:24:22,056
你也许会选择主动退出  


723
00:24:22,506 --> 00:24:23,896
选择你觉得对的就好  


724
00:24:23,896 --> 00:24:25,066
做个决定  


725
00:24:25,376 --> 00:24:26,556
比如说你的 App


726
00:24:26,556 --> 00:24:28,616
跟你的手机 App 没什么关系


727
00:24:28,616 --> 00:24:29,946
那选择退出


728
00:24:29,946 --> 00:24:32,086
是一个非常合适的选择  


729
00:24:32,836 --> 00:24:34,756
要做到这样 在你的 WK extension 


730
00:24:34,946 --> 00:24:36,716
的 auto-launch feature 


731
00:24:36,716 --> 00:24:40,396
里使用 opt out


732
00:24:40,396 --> 00:24:41,306
info.plist  


733
00:24:41,796 --> 00:24:44,916
如果你选择了主动退出


734
00:24:44,996 --> 00:24:46,366
Now Playing App 将会


735
00:24:46,366 --> 00:24:47,146
顶上来出现在屏幕  


736
00:24:52,046 --> 00:24:53,716
现在呢 我们说说


737
00:24:53,716 --> 00:24:55,116
最前 App 状态


738
00:24:55,116 --> 00:24:56,906
我们先做一个它的小的回顾  


739
00:24:58,096 --> 00:25:00,196
我有个 App 


740
00:25:00,196 --> 00:25:01,276
它正在前台运行  


741
00:25:01,276 --> 00:25:02,196
我正在看着它  


742
00:25:02,526 --> 00:25:04,066
屏幕是亮着的并且这个 App


743
00:25:04,066 --> 00:25:06,176
被认为是活跃并且在最前  


744
00:25:06,826 --> 00:25:07,766
但是然后呢


745
00:25:07,766 --> 00:25:08,376
我把手垂下来  


746
00:25:09,546 --> 00:25:11,246
我的 App 还是


747
00:25:11,246 --> 00:25:12,646
被当作最前


748
00:25:13,106 --> 00:25:14,396
因为我把手再抬起来


749
00:25:14,396 --> 00:25:15,996
还是会见到这个 App


750
00:25:16,416 --> 00:25:18,356
这样的话


751
00:25:18,356 --> 00:25:20,506
这个 App 仅仅是进入了后台  


752
00:25:24,116 --> 00:25:26,066
依靠最前 App 状态


753
00:25:26,266 --> 00:25:27,226
我们在系统上


754
00:25:27,226 --> 00:25:28,586
增强了一些功能  


755
00:25:29,116 --> 00:25:32,286
从 iPhone 来的


756
00:25:32,406 --> 00:25:33,856
后台传输 比如说我们正在


757
00:25:33,856 --> 00:25:35,436
从 iPhone 向手表传输


758
00:25:35,576 --> 00:25:36,986
内容 这些


759
00:25:36,986 --> 00:25:39,036
后台传输任务 他们完成后


760
00:25:39,036 --> 00:25:40,326
它将直接唤醒恢复


761
00:25:40,476 --> 00:25:42,266
进入我们的 App 如果


762
00:25:42,266 --> 00:25:43,586
我们的 App 在最前状态  


763
00:25:44,486 --> 00:25:45,996
我们的 URL session 恢复


764
00:25:45,996 --> 00:25:47,286
也是这么工作的  


765
00:25:47,616 --> 00:25:49,886
比如这个 URL session 我们


766
00:25:49,886 --> 00:25:51,246
的后台 session 之前在下载  


767
00:25:51,246 --> 00:25:53,166
现在已经完成了  


768
00:25:53,166 --> 00:25:54,396
我们的 App


769
00:25:54,396 --> 00:25:56,346
会被直接唤醒并且播放相应内容  


770
00:25:56,826 --> 00:26:00,566
如果我们在最前  


771
00:26:00,566 --> 00:26:02,256
用户将会到我们这 所以我们


772
00:26:02,256 --> 00:26:03,776
可以决定何时或者是否


773
00:26:03,776 --> 00:26:06,036
让通知显示 还有


774
00:26:06,036 --> 00:26:07,916
我们需要适当地处理通知  


775
00:26:08,286 --> 00:26:09,686
也许我们想要让用户留在


776
00:26:09,686 --> 00:26:11,166
这个 App 或者可能我们想要


777
00:26:11,166 --> 00:26:12,716
向用户展示一个通知  


778
00:26:13,136 --> 00:26:14,566
在最前的 App 状态中


779
00:26:14,566 --> 00:26:15,826
我们可以做这个决定  


780
00:26:16,256 --> 00:26:18,786
如果我们 App 在最前


781
00:26:18,786 --> 00:26:20,626
状态 我们可以震动一下  


782
00:26:21,236 --> 00:26:23,516
如果你还想再


783
00:26:23,516 --> 00:26:24,706
了解一些最前 App


784
00:26:24,706 --> 00:26:26,646
状态 有个去年的演讲


785
00:26:26,646 --> 00:26:28,476
关于这个 The Life of a watchOS App  


786
00:26:28,956 --> 00:26:30,396
这是个不错的演讲  


787
00:26:30,396 --> 00:26:31,806
你也许能认出这是哪个演讲者  


788
00:26:31,806 --> 00:26:32,666
他挺不错的  


789
00:26:33,636 --> 00:26:35,956
你想要保持


790
00:26:35,956 --> 00:26:38,816
最前状态两分钟 但是如果你


791
00:26:38,816 --> 00:26:40,396
能够想起来 我之前延长了


792
00:26:40,396 --> 00:26:41,336
最前状态时间  


793
00:26:41,716 --> 00:26:43,066
这样的话 最前时间将会


794
00:26:43,066 --> 00:26:45,526
被默认延长到8 分钟  


795
00:26:45,986 --> 00:26:47,636
一样的 这个是很方便


796
00:26:47,636 --> 00:26:48,856
来用于下载内容


797
00:26:48,856 --> 00:26:50,666
所以我直接延长了


798
00:26:50,666 --> 00:26:52,666
最前时间


799
00:27:00,236 --> 00:27:01,446
如果我们正在播放


800
00:27:01,446 --> 00:27:03,996
一些音频 我们的 App


801
00:27:03,996 --> 00:27:06,046
会在整个 session 保持


802
00:27:06,046 --> 00:27:07,796
最前状态 就像远程控制


803
00:27:07,796 --> 00:27:10,006
iPhone 上正在播放的


804
00:27:10,006 --> 00:27:11,266
音频一样  


805
00:27:12,396 --> 00:27:13,566
还有呢 当用户


806
00:27:13,566 --> 00:27:15,716
离开了界面


807
00:27:15,716 --> 00:27:17,646
你的 App 将不是最前了


808
00:27:17,646 --> 00:27:19,066
但后台播放


809
00:27:19,066 --> 00:27:20,016
还是会正常运行  


810
00:27:21,166 --> 00:27:22,346
这个情况下 当然


811
00:27:22,346 --> 00:27:23,826
你需要处理好


812
00:27:23,826 --> 00:27:26,266
后台各种事件  


813
00:27:26,266 --> 00:27:30,786
好了 现在 当我们在最前


814
00:27:30,786 --> 00:27:33,746
的状态之中 我们可以


815
00:27:33,746 --> 00:27:36,116
和通知适当地结合起来


816
00:27:36,116 --> 00:27:38,406
我们可以显示个通知 比如


817
00:27:38,406 --> 00:27:39,586
当下载已完成了 我们可以显示个


818
00:27:39,586 --> 00:27:41,546
本地内容可以播放的通知  


819
00:27:42,006 --> 00:27:43,466
我们想把播放


820
00:27:43,466 --> 00:27:44,826
作为主要的用户操作  


821
00:27:45,596 --> 00:27:46,876
靠着我们新的在 watchOS 上的


822
00:27:46,876 --> 00:27:49,046
交互通知 我么可以让


823
00:27:49,046 --> 00:27:50,396
用户在通知里


824
00:27:50,396 --> 00:27:52,906
设置一些播放参数


825
00:27:52,906 --> 00:27:56,156
并且可以把启动播放


826
00:27:56,156 --> 00:27:57,946
作为主要操作 之后可以


827
00:27:57,946 --> 00:27:59,616
立即进入 App


828
00:27:59,616 --> 00:28:00,646
启动播放 


829
00:28:01,576 --> 00:28:03,546
比如我们有


830
00:28:03,546 --> 00:28:06,146
Salvador Dali exhibit  


831
00:28:06,146 --> 00:28:07,226
它已经准备好了  


832
00:28:07,296 --> 00:28:08,556
我们可以调整播放速度


833
00:28:08,556 --> 00:28:10,496
并且直接启动播放


834
00:28:10,996 --> 00:28:12,976
它将启动我的 App 然后


835
00:28:12,976 --> 00:28:14,556
我可以以合适的


836
00:28:14,556 --> 00:28:16,326
速度给用户播放内容  


837
00:28:16,326 --> 00:28:19,796
如果你想要更多


838
00:28:19,796 --> 00:28:21,336
关于交互通知的内容


839
00:28:21,666 --> 00:28:22,856
可以看看 What's New in


840
00:28:22,856 --> 00:28:24,226
watchOS 之前的演讲


841
00:28:24,876 --> 00:28:26,056
他们都在网上可以找到  


842
00:28:26,056 --> 00:28:27,676
这是个很好的演讲 你可以


843
00:28:27,676 --> 00:28:28,756
学到很多关于


844
00:28:28,756 --> 00:28:30,176
交互式通知的内容


845
00:28:30,176 --> 00:28:31,206
在看完这个之后  


846
00:28:31,976 --> 00:28:33,526
好了 你还记得


847
00:28:33,526 --> 00:28:35,486
我之前这个


848
00:28:35,486 --> 00:28:36,456
发布通知


849
00:28:36,456 --> 00:28:39,316
提醒用户


850
00:28:39,316 --> 00:28:40,966
有东西可以播放了的功能吗


851
00:28:41,396 --> 00:28:42,716
比如说我们的 App


852
00:28:42,716 --> 00:28:45,046
现在在最前  


853
00:28:45,246 --> 00:28:46,336
这样呢当我们


854
00:28:46,336 --> 00:28:48,006
从最前状态的 App


855
00:28:48,006 --> 00:28:50,306
发布了通知


856
00:28:50,366 --> 00:28:52,126
这将会被调用


857
00:28:52,126 --> 00:28:53,866
并且显示一个有 completion handler


858
00:28:53,866 --> 00:28:55,276
的通知  


859
00:28:56,426 --> 00:28:57,886
这样的话 我实际上


860
00:28:57,886 --> 00:28:59,406
可以决定是否仍要


861
00:28:59,406 --> 00:29:00,846
发布这个通知  


862
00:29:01,226 --> 00:29:02,436
或者因为我的 App


863
00:29:02,436 --> 00:29:04,176
已经在最前了 我可以直接


864
00:29:04,176 --> 00:29:06,076
震动一下让用户知道


865
00:29:06,076 --> 00:29:07,586
抬起你的手


866
00:29:07,586 --> 00:29:08,516
你就有新的内容了  


867
00:29:08,516 --> 00:29:09,556
我可以更新界面  


868
00:29:10,216 --> 00:29:11,436
同样 如果你想知道


869
00:29:11,436 --> 00:29:12,686
更多关于最前状态通知的信息


870
00:29:12,686 --> 00:29:14,396
可以去看一下


871
00:29:14,396 --> 00:29:15,636
Life of a watchOS App  


872
00:29:16,516 --> 00:29:18,396
好了 我们已经用了


873
00:29:18,396 --> 00:29:19,976
最前 App 状态和


874
00:29:19,976 --> 00:29:22,266
交互式通知


875
00:29:22,266 --> 00:29:24,756
但我们也想在 Siri watch face 上显示内容


876
00:29:25,756 --> 00:29:27,306
使用音频 App 我们可以


877
00:29:27,306 --> 00:29:28,906
靠着相关的快捷方式 


878
00:29:28,906 --> 00:29:30,806
向 Siri watch face 提供一些


879
00:29:30,856 --> 00:29:32,336
播放建议


880
00:29:32,976 --> 00:29:36,356
比如用户最喜欢的播客下一期


881
00:29:36,356 --> 00:29:38,506
内容或者


882
00:29:38,506 --> 00:29:40,506
刚刚同步到手表的音乐  


883
00:29:43,986 --> 00:29:46,116
举个例子 Audible 可以


884
00:29:46,116 --> 00:29:47,586
产生类似的体验


885
00:29:47,976 --> 00:29:49,726
它可以从 Siri watch face


886
00:29:49,726 --> 00:29:52,156
直接让用户进入App


887
00:29:52,156 --> 00:29:54,756
然后恢复播放有声读物  


888
00:29:55,236 --> 00:29:59,036
无论何时交互


889
00:29:59,036 --> 00:30:00,866
产生了 就是


890
00:30:00,866 --> 00:30:02,336
强调一下 一定要想一下


891
00:30:02,336 --> 00:30:03,136
你送出了什么  


892
00:30:03,586 --> 00:30:05,256
要确定你把你的 INMedia


893
00:30:05,256 --> 00:30:07,656
PlaybackIntent 送到系统


894
00:30:07,656 --> 00:30:08,836
这样之后系统可以知道


895
00:30:08,836 --> 00:30:10,816
大多数时候用户在干什么  


896
00:30:11,286 --> 00:30:14,396
这样呢 你会跟 Siri watch face 连接更紧密  


897
00:30:17,016 --> 00:30:19,016
同时也要想想你在 Siri


898
00:30:19,016 --> 00:30:21,116
中的快捷启动短语 比如


899
00:30:21,456 --> 00:30:23,836
设计一个合适的短语


900
00:30:23,926 --> 00:30:26,486
你的用户可以在 Siri 用它


901
00:30:26,516 --> 00:30:30,586
直接进入你的 App


902
00:30:30,586 --> 00:30:31,706
然后进行播放  


903
00:30:32,206 --> 00:30:35,826
总之 在 Siri watch face 


904
00:30:35,826 --> 00:30:38,296
你可以设计良好的体验  


905
00:30:38,556 --> 00:30:39,736
也许你有一些


906
00:30:39,736 --> 00:30:41,366
只能看一眼的信息类似  “嘿  


907
00:30:41,366 --> 00:30:42,666
展览就要开始了”  


908
00:30:43,266 --> 00:30:45,016
或者一下可以点进去的


909
00:30:45,016 --> 00:30:46,386
操作 像 Audible 做的


910
00:30:46,386 --> 00:30:47,946
“嘿 我们马上开始语音导览”


911
00:30:47,946 --> 00:30:53,446
然后直接进入 App 


912
00:30:53,706 --> 00:30:56,166
关于各种快捷方式 你要把你的


913
00:30:56,166 --> 00:30:57,966
INMediaPlaybackIntent 送出去  


914
00:30:58,876 --> 00:31:00,706
使用相关的快捷方式的 API


915
00:31:00,706 --> 00:31:02,236
使之出现在 Siri watch face 上


916
00:31:03,436 --> 00:31:04,746
并且你要想好你的


917
00:31:04,746 --> 00:31:05,256
快捷启动短语  


918
00:31:06,786 --> 00:31:07,906
我们这个礼拜有了很多


919
00:31:07,906 --> 00:31:09,706
关于快捷方式的演讲


920
00:31:09,706 --> 00:31:12,326
我重申一下 Shortcuts on the


921
00:31:12,326 --> 00:31:13,396
Siri Watch Face 这个演讲的重要性  


922
00:31:13,706 --> 00:31:14,506
我自己这么觉得


923
00:31:14,506 --> 00:31:16,126
这个很棒


924
00:31:16,126 --> 00:31:16,706
我也从中学了很多


925
00:31:19,276 --> 00:31:21,556
总结一下 第一


926
00:31:21,556 --> 00:31:23,436
你可以把原生控制


927
00:31:23,436 --> 00:31:25,866
直接嵌入到你的 App


928
00:31:26,346 --> 00:31:27,676
你可以随意地使用


929
00:31:27,676 --> 00:31:29,226
后台播放来


930
00:31:29,226 --> 00:31:30,986
随心所欲地处理


931
00:31:30,986 --> 00:31:32,176
远程控制命令  


932
00:31:32,636 --> 00:31:35,686
同时也有了更好的


933
00:31:35,686 --> 00:31:37,326
向手表传输内容


934
00:31:37,326 --> 00:31:39,066
并且把他们


935
00:31:39,066 --> 00:31:40,416
呈现给用户的方法


936
00:31:41,556 --> 00:31:42,786
如果你想要更多的


937
00:31:43,126 --> 00:31:44,836
信息 请到网上


938
00:31:44,836 --> 00:31:47,816
查阅资料 或者加入我们下午的实验室活动  


939
00:31:49,016 --> 00:31:50,676
我真的十分激动


940
00:31:50,676 --> 00:31:52,216
能见到这样为 watchOS 构建的的音频 App


941
00:31:52,216 --> 00:31:54,816
谢谢大家  


942
00:31:55,166 --> 00:31:57,816
享受 WWWDC 大会吧 谢谢  


943
00:31:58,516 --> 00:32:03,500
[ 掌声 ]

