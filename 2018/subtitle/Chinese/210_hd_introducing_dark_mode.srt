1
00:00:07,516 --> 00:00:16,500
[ 音乐 ]


2
00:00:23,516 --> 00:00:28,756
[ 掌声 ]


3
00:00:29,256 --> 00:00:29,866
>> 大家好


4
00:00:30,646 --> 00:00:31,916
欢迎大家来到


5
00:00:31,916 --> 00:00:32,986
深色模式的介绍讨论会


6
00:00:33,526 --> 00:00:34,616
我叫 Raymond Sepulveda


7
00:00:35,106 --> 00:00:36,866
我是人机界面设计团队的


8
00:00:36,866 --> 00:00:38,136
macOS 设计师


9
00:00:38,846 --> 00:00:40,176
今天讨论会的前半部分


10
00:00:40,216 --> 00:00:41,436
我将会介绍


11
00:00:41,436 --> 00:00:42,256
一些设计理念


12
00:00:42,256 --> 00:00:43,826
这些理念


13
00:00:43,826 --> 00:00:45,756
都和深色模式有关


14
00:00:45,756 --> 00:00:46,746
还有一些


15
00:00:46,746 --> 00:00:47,686
设计的注意事项


16
00:00:47,686 --> 00:00:49,336
这些是你在更新软件


17
00:00:49,336 --> 00:00:50,546
适配深色模式时


18
00:00:50,546 --> 00:00:51,606
需要注意的事项


19
00:00:51,606 --> 00:00:53,576
然后在后半部分


20
00:00:53,626 --> 00:00:55,316
我工程领域的同事


21
00:00:55,316 --> 00:00:57,106
Rachel Goldeen


22
00:00:57,146 --> 00:00:58,266
和来自 Cocoa 框架团队的 Taylor Kelly


23
00:00:58,266 --> 00:00:59,756
将会介绍


24
00:00:59,756 --> 00:01:01,836
如何采用


25
00:01:01,836 --> 00:01:03,506
和支持深色模式


26
00:01:03,506 --> 00:01:04,866
他们会用一个 App 当作例子


27
00:01:04,866 --> 00:01:05,426
这个 App 是他们一起设计的


28
00:01:06,156 --> 00:01:07,016
我们三个非常激动


29
00:01:07,016 --> 00:01:08,016
可以向大家介绍


30
00:01:08,066 --> 00:01:09,246
这些细节


31
00:01:09,426 --> 00:01:10,086
我们现在就开始吧


32
00:01:10,886 --> 00:01:13,086
我们在昨天 Keynote 中已经提到了


33
00:01:13,116 --> 00:01:15,316
macOS 10.14 将会有


34
00:01:15,316 --> 00:01:16,896
一个全新的界面外观


35
00:01:16,896 --> 00:01:19,416
我们称之为深色模式


36
00:01:20,416 --> 00:01:22,146
这项新设计


37
00:01:22,216 --> 00:01:24,466
非常吸引人


38
00:01:24,466 --> 00:01:26,806
同时又非常沉静而低调


39
00:01:27,366 --> 00:01:28,566
这些是一个界面


40
00:01:28,566 --> 00:01:29,626
非常好的特质


41
00:01:29,626 --> 00:01:31,266
对处理创作工作的专业人士很有帮助


42
00:01:31,556 --> 00:01:33,076
当他们在处理非常细致的图像


43
00:01:33,136 --> 00:01:34,906
和彩色资源


44
00:01:34,906 --> 00:01:37,896
比如说图像和视频资源时


45
00:01:38,736 --> 00:01:40,966
但是 在实际使用中


46
00:01:40,966 --> 00:01:42,536
深色模式适合每个


47
00:01:42,596 --> 00:01:44,526
想要集中精神


48
00:01:44,526 --> 00:01:47,376
完成手头任务的用户


49
00:01:47,976 --> 00:01:48,936
所以 无论你是想


50
00:01:48,936 --> 00:01:50,396
专注地写一部精彩的小说


51
00:01:50,396 --> 00:01:52,856
还是你想要


52
00:01:52,896 --> 00:01:54,146
读一部小说


53
00:01:54,146 --> 00:01:56,136
而又不想打扰你的枕边人


54
00:01:56,136 --> 00:01:57,486
这两种情况都很适合


55
00:01:57,486 --> 00:01:58,156
使用深色模式


56
00:02:03,246 --> 00:02:05,686
深色模式和浅色模式


57
00:02:05,856 --> 00:02:07,166
的交互界面之间


58
00:02:07,166 --> 00:02:09,846
有很多相同点


59
00:02:09,846 --> 00:02:11,246
这是因为我们想要鼓励用户


60
00:02:11,246 --> 00:02:13,066
在这两种模式之间自由变换


61
00:02:13,436 --> 00:02:16,116
并且找出其中


62
00:02:16,116 --> 00:02:17,386
符合自己需求的模式


63
00:02:17,816 --> 00:02:18,896
所以保持某些东西


64
00:02:18,896 --> 00:02:19,876
在两种模式之间


65
00:02:19,876 --> 00:02:22,216
尽可能相同


66
00:02:22,296 --> 00:02:24,186
就十分重要 比如


67
00:02:24,186 --> 00:02:25,826
控件指标


68
00:02:25,826 --> 00:02:26,746
窗口布局


69
00:02:26,746 --> 00:02:27,436
和半透明素材的分布


70
00:02:28,246 --> 00:02:30,056
同样重要的是


71
00:02:30,056 --> 00:02:31,166
你的所有 App 软件


72
00:02:31,166 --> 00:02:33,446
都应该充分应用这两种模式


73
00:02:33,446 --> 00:02:35,316
这样 不论是在


74
00:02:35,316 --> 00:02:37,156
什么系统下运行


75
00:02:37,356 --> 00:02:38,996
它们都可以


76
00:02:38,996 --> 00:02:40,716
正确地更新


77
00:02:40,716 --> 00:02:41,796
你绝对不希望


78
00:02:41,876 --> 00:02:42,956
某个浅色页面


79
00:02:43,276 --> 00:02:46,066
卡在深色页面上


80
00:02:46,176 --> 00:02:47,656
总而言之 我们对这个


81
00:02:47,656 --> 00:02:49,226
设计成果非常满意


82
00:02:49,226 --> 00:02:51,196
我们迫切想要看到


83
00:02:51,196 --> 00:02:53,286
当你们拿到开发者 Beta 版时


84
00:02:53,286 --> 00:02:54,576
你们会把 App


85
00:02:54,576 --> 00:02:55,796
变成什么样子


86
00:02:55,796 --> 00:02:56,896
并且开始采用


87
00:02:56,896 --> 00:02:57,136
深色模式


88
00:02:59,206 --> 00:03:01,386
除了深色模式


89
00:03:01,386 --> 00:03:02,866
macOS 10.14 还有一个


90
00:03:02,866 --> 00:03:04,966
新的界面特色


91
00:03:05,026 --> 00:03:05,866
那就是强调色


92
00:03:06,466 --> 00:03:08,036
macOS 之前的版本


93
00:03:08,536 --> 00:03:10,376
提供了两种强调色


94
00:03:10,376 --> 00:03:12,196
蓝色和石墨色


95
00:03:12,196 --> 00:03:13,876
但是在 macOS 10.14 中我们增加了配色


96
00:03:13,876 --> 00:03:15,266
使它包含 8 种有趣的颜色


97
00:03:15,266 --> 00:03:16,556
可以真正帮助你


98
00:03:16,556 --> 00:03:18,756
个性化你的 Mac


99
00:03:18,816 --> 00:03:20,926
所以如果你也像我一样


100
00:03:21,186 --> 00:03:22,556
喜欢我的发色


101
00:03:22,556 --> 00:03:23,696
你可以立刻把它切换成


102
00:03:23,696 --> 00:03:25,596
红色 [ 笑声 ]


103
00:03:25,856 --> 00:03:30,016
如果你更喜欢橘色或者黄色


104
00:03:30,016 --> 00:03:31,456
你也可以


105
00:03:31,456 --> 00:03:32,286
切换成这两种颜色


106
00:03:32,286 --> 00:03:34,316
它们现在也已经可用了


107
00:03:34,316 --> 00:03:38,256
我需要强调的是


108
00:03:38,256 --> 00:03:39,336
强调色不仅仅是


109
00:03:39,336 --> 00:03:41,376
深色模式下的附加特色


110
00:03:41,376 --> 00:03:42,896
在浅色模式下也同样适用


111
00:03:43,016 --> 00:03:44,986
所以如果你更喜欢浅色模式


112
00:03:44,986 --> 00:03:46,626
而且又想用绿色的强调色


113
00:03:46,626 --> 00:03:47,316
你也可以这样做


114
00:03:49,286 --> 00:03:50,316
现在 我们已经介绍过了


115
00:03:50,316 --> 00:03:51,856
一点基础知识


116
00:03:52,246 --> 00:03:53,896
包括深色模式


117
00:03:53,896 --> 00:03:55,616
和强调色是什么


118
00:03:55,616 --> 00:03:56,696
现在让我们稍微深入地了解一下


119
00:03:56,696 --> 00:03:58,806
深色模式的设计理念


120
00:03:59,446 --> 00:04:01,686
在 Apple 当我们开始一个


121
00:04:01,686 --> 00:04:02,916
新的设计项目时


122
00:04:02,916 --> 00:04:04,326
我们会设立一些


123
00:04:04,326 --> 00:04:05,456
设计理念


124
00:04:05,516 --> 00:04:06,476
在整个的设计过程中


125
00:04:06,476 --> 00:04:06,996
帮助指导我们


126
00:04:07,656 --> 00:04:09,506
对于深色模式来说


127
00:04:09,506 --> 00:04:11,426
有三个设计理念


128
00:04:11,426 --> 00:04:12,786
在整个设计过程中


129
00:04:13,496 --> 00:04:16,505
我们经常提起第一个


130
00:04:16,505 --> 00:04:17,625
也是最直接的一个


131
00:04:17,796 --> 00:04:19,696
让我们直接跳到这一个


132
00:04:19,696 --> 00:04:20,976
那就是深色模式


133
00:04:20,976 --> 00:04:23,716
很酷 就是很酷 没别的


134
00:04:23,976 --> 00:04:25,386
它很轻易地就做到了


135
00:04:25,386 --> 00:04:26,736
很酷这一点


136
00:04:26,736 --> 00:04:28,116
而浅色模式


137
00:04:28,176 --> 00:04:28,976
有时很难显得很酷


138
00:04:29,456 --> 00:04:31,006
但是这是为什么呢


139
00:04:31,386 --> 00:04:32,926
一部分原因是


140
00:04:32,926 --> 00:04:34,206
我们对于深色模式是什么


141
00:04:34,206 --> 00:04:36,876
和它是什么样子的有概念


142
00:04:37,246 --> 00:04:38,646
这些概念都是我们


143
00:04:38,716 --> 00:04:39,876
在流行文化 比如说


144
00:04:39,876 --> 00:04:41,286
科幻电影和动作电影中看到的


145
00:04:41,776 --> 00:04:43,626
我们也自然地接受了


146
00:04:44,216 --> 00:04:45,456
如果我走进观众席


147
00:04:45,456 --> 00:04:46,476
让每个人给我一个


148
00:04:46,476 --> 00:04:47,716
由深色模式


149
00:04:47,716 --> 00:04:49,476
联想到的词


150
00:04:49,476 --> 00:04:51,236
我肯定会得到这些词


151
00:04:51,236 --> 00:04:55,596
酷 精致 专业


152
00:04:56,056 --> 00:04:58,276
富有未来感 甚至美丽


153
00:04:59,576 --> 00:05:01,786
所以深入到深色模式的设计中


154
00:05:01,786 --> 00:05:03,406
我们真的


155
00:05:03,406 --> 00:05:04,346
感谢所有的这些


156
00:05:04,346 --> 00:05:06,246
和深色界面相关的


157
00:05:06,246 --> 00:05:08,306
美学形容词


158
00:05:08,766 --> 00:05:10,986
同时享受


159
00:05:10,986 --> 00:05:12,536
深色设计给你带来的


160
00:05:12,536 --> 00:05:14,496
大量切实的好处


161
00:05:14,496 --> 00:05:18,136
比如说排版时的更强对比


162
00:05:18,136 --> 00:05:20,426
我们意识到深色模式


163
00:05:20,486 --> 00:05:22,176
真的很酷


164
00:05:22,176 --> 00:05:24,656
很多人都会把软件调成深色模式


165
00:05:24,776 --> 00:05:25,436
一直使用这个模式


166
00:05:25,576 --> 00:05:27,666
然而 在实际使用中


167
00:05:27,736 --> 00:05:29,016
只有一小部分 App


168
00:05:29,016 --> 00:05:31,666
需要处于深色模式


169
00:05:31,666 --> 00:05:33,646
那就是以媒体为中心


170
00:05:33,646 --> 00:05:34,856
或内容创造型的 App


171
00:05:34,926 --> 00:05:35,886
这些 App 最适合


172
00:05:35,926 --> 00:05:37,246
一直设置成深色模式


173
00:05:37,246 --> 00:05:38,766
所以如果你使用的 App


174
00:05:38,766 --> 00:05:39,516
不属于以上任何一类


175
00:05:39,516 --> 00:05:41,366
那最好让你的 App


176
00:05:41,366 --> 00:05:42,686
跟随系统界面样式


177
00:05:42,686 --> 00:05:45,046
而不是一直调至深色模式


178
00:05:45,046 --> 00:05:49,606
第二个设计理念是


179
00:05:49,816 --> 00:05:52,146
黑色界面并不是直接使用反色


180
00:05:52,486 --> 00:05:53,886
深色模式的核心是


181
00:05:53,976 --> 00:05:56,356
当你看到一个深色界面


182
00:05:56,356 --> 00:05:57,946
有时你会


183
00:05:57,996 --> 00:06:00,416
想当然地认为


184
00:06:00,416 --> 00:06:01,486
只是把浅色模式


185
00:06:01,486 --> 00:06:02,826
直接反转了一下颜色


186
00:06:02,826 --> 00:06:03,666
得到深色模式


187
00:06:04,186 --> 00:06:05,946
但是实际上


188
00:06:05,946 --> 00:06:07,986
并不完全是这样


189
00:06:07,986 --> 00:06:10,276
黑色界面并不是直接一些要素


190
00:06:10,276 --> 00:06:16,006
并以具体的 App 为例试一下


191
00:06:16,006 --> 00:06:18,316
看看他们想要带来的


192
00:06:18,316 --> 00:06:19,826
视觉提示


193
00:06:19,826 --> 00:06:21,926
然后看看相反的视觉提示


194
00:06:21,926 --> 00:06:23,406
是否是必要的


195
00:06:24,286 --> 00:06:25,136
所以比如说


196
00:06:25,136 --> 00:06:27,376
如果你采用标准的 Light 普通按钮


197
00:06:27,476 --> 00:06:28,706
在浅色模式下


198
00:06:28,706 --> 00:06:30,376
这些按钮


199
00:06:30,376 --> 00:06:31,756
处于活跃状态


200
00:06:32,346 --> 00:06:33,656
然后当你点按这些按钮时


201
00:06:33,656 --> 00:06:35,026
它们的颜色就加深了


202
00:06:35,236 --> 00:06:37,046
对于几乎所有的操作


203
00:06:37,386 --> 00:06:38,546
都是这样的


204
00:06:38,546 --> 00:06:41,336
浅色模式在点按时


205
00:06:41,336 --> 00:06:43,056
会比活跃状态颜色更深


206
00:06:44,266 --> 00:06:45,716
然而 在深色模式中


207
00:06:45,746 --> 00:06:47,096
大部分的活跃状态是这样的


208
00:06:47,096 --> 00:06:48,996
当你点击它们时


209
00:06:48,996 --> 00:06:50,486
它们就变亮了


210
00:06:50,486 --> 00:06:52,866
同样 对于几乎所有控件都是一样的


211
00:06:52,866 --> 00:06:56,746
它们几乎都会变亮


212
00:06:56,746 --> 00:06:59,446
另一个例子是组合框


213
00:07:00,066 --> 00:07:01,126
在浅色模式下


214
00:07:01,126 --> 00:07:02,966
组合框是深色填充


215
00:07:02,966 --> 00:07:05,756
边缘有阴影


216
00:07:05,756 --> 00:07:07,586
这就给了它们一种


217
00:07:07,586 --> 00:07:09,216
嵌入式的视觉效果


218
00:07:09,216 --> 00:07:10,346
看起来像是


219
00:07:10,346 --> 00:07:11,286
刻在它们所在的


220
00:07:11,286 --> 00:07:12,436
窗口背景里


221
00:07:13,696 --> 00:07:16,166
但是 在深色模式下


222
00:07:16,166 --> 00:07:19,176
组合框效果像是自发光


223
00:07:19,746 --> 00:07:22,156
但是 总而言之


224
00:07:22,236 --> 00:07:23,856
组合框的作用或者目的


225
00:07:23,856 --> 00:07:24,916
在这两种模式下


226
00:07:24,916 --> 00:07:27,016
是相同的


227
00:07:27,016 --> 00:07:28,066
它们真正想


228
00:07:28,066 --> 00:07:29,526
传达给用户的是


229
00:07:29,576 --> 00:07:31,406
这里面包含的内容


230
00:07:31,406 --> 00:07:32,316
总是相关的


231
00:07:34,026 --> 00:07:38,166
具体分析和尝试


232
00:07:38,166 --> 00:07:39,976
看看什么样的视觉提示


233
00:07:39,976 --> 00:07:43,176
是你的要素想要展现的


234
00:07:43,486 --> 00:07:45,266
这是非常重要的


235
00:07:45,266 --> 00:07:46,916
它重要是因为


236
00:07:46,916 --> 00:07:48,306
在某些情况下


237
00:07:48,376 --> 00:07:50,206
浅色模式的效果


238
00:07:50,206 --> 00:07:51,506
已经十分有效


239
00:07:51,506 --> 00:07:53,916
在深色模式中应该同样有效


240
00:07:54,486 --> 00:07:56,086
一个例子是


241
00:07:56,086 --> 00:07:56,906
窗口阴影


242
00:07:57,786 --> 00:08:00,596
我们都知道


243
00:08:00,596 --> 00:08:02,786
macOS 使用的是分层窗口


244
00:08:02,786 --> 00:08:03,946
窗口阴影真的可以很好地


245
00:08:03,946 --> 00:08:04,946
展示一种深度感


246
00:08:05,006 --> 00:08:06,766
也就是窗口的 Z 轴深度


247
00:08:07,396 --> 00:08:08,686
所以 比如说


248
00:08:08,686 --> 00:08:10,056
如果我们反转窗口阴影色


249
00:08:10,056 --> 00:08:13,246
比如开始使用白色


250
00:08:13,246 --> 00:08:14,606
整个 UI 会显得扁平化


251
00:08:14,756 --> 00:08:19,186
你会失去那种深度感


252
00:08:19,186 --> 00:08:20,256
还需要强调一点


253
00:08:20,256 --> 00:08:21,836
macOS 的窗口阴影


254
00:08:21,836 --> 00:08:23,206
分为两层


255
00:08:23,286 --> 00:08:24,666
Diffused Shadow（扩散阴影）


256
00:08:24,766 --> 00:08:25,546
和 Rim Shadow（边缘阴影）


257
00:08:25,986 --> 00:08:27,536
我们放大


258
00:08:27,536 --> 00:08:30,626
屏幕的这一小部分


259
00:08:30,626 --> 00:08:31,256
看看阴影是如何


260
00:08:31,256 --> 00:08:33,126
在深色模式中进行构建并处理的


261
00:08:33,126 --> 00:08:35,166
第一个要强调的点是


262
00:08:35,246 --> 00:08:36,775
考虑到用户


263
00:08:36,775 --> 00:08:38,895
会来回切换


264
00:08:39,196 --> 00:08:40,775
浅色模式


265
00:08:40,775 --> 00:08:42,086
和深色模式


266
00:08:42,086 --> 00:08:44,536
而且可能会比较频繁


267
00:08:44,606 --> 00:08:45,916
一些 App 也会


268
00:08:46,246 --> 00:08:47,766
一直处于深色模式


269
00:08:47,806 --> 00:08:48,996
所以让扩散阴影保持不变


270
00:08:48,996 --> 00:08:50,896
非常重要


271
00:08:51,546 --> 00:08:53,706
所以在深色模式下处理窗口阴影时


272
00:08:53,706 --> 00:08:55,406
我们使用了完全相同的


273
00:08:55,406 --> 00:08:56,796
阴影模糊参数


274
00:08:57,786 --> 00:08:59,536
然后 我们来看一下


275
00:08:59,536 --> 00:09:02,426
边缘阴影


276
00:09:02,426 --> 00:09:04,066
看一下我们对它们做了什么改变


277
00:09:04,066 --> 00:09:05,176
我们对深色模式做的改变是


278
00:09:05,236 --> 00:09:06,696
调整了不透明度


279
00:09:06,696 --> 00:09:07,826
让不透明度变得


280
00:09:07,826 --> 00:09:09,816
稍高一点


281
00:09:09,856 --> 00:09:12,086
边缘的对比


282
00:09:12,086 --> 00:09:13,676
更加清晰 更锋利


283
00:09:14,336 --> 00:09:18,866
为了加强窗口的


284
00:09:18,866 --> 00:09:20,886
重点和边缘细节


285
00:09:20,886 --> 00:09:24,026
我们又给窗口加了一层内层边缘阴影


286
00:09:24,026 --> 00:09:26,476
这可以使窗口显得轮廓分明


287
00:09:26,476 --> 00:09:28,646
更加突出


288
00:09:29,186 --> 00:09:30,306
最终结果是


289
00:09:30,306 --> 00:09:32,606
深色模式的视觉提示


290
00:09:32,606 --> 00:09:34,406
虽然还和浅色模式很像


291
00:09:34,686 --> 00:09:37,366
但是最终成品


292
00:09:37,366 --> 00:09:39,196
还是很适合深色模式


293
00:09:39,196 --> 00:09:40,906
使得深色模式更出色


294
00:09:46,046 --> 00:09:47,926
第二个设计理念是


295
00:09:47,926 --> 00:09:49,276
深色模式是内容突出型模式


296
00:09:49,276 --> 00:09:52,826
这也是我们在整个设计过程中


297
00:09:52,826 --> 00:09:53,246
最常提及的一点


298
00:09:54,246 --> 00:09:56,896
当你看着


299
00:09:56,896 --> 00:09:58,066
一个浅色的交互界面


300
00:09:58,066 --> 00:09:59,226
有时候很难


301
00:09:59,226 --> 00:10:01,396
去辨别它的内容是什么


302
00:10:01,566 --> 00:10:03,366
你需要注意哪些地方


303
00:10:03,366 --> 00:10:06,286
尤其是当屏幕上有很多窗口时


304
00:10:07,156 --> 00:10:08,386
部分原因是


305
00:10:08,386 --> 00:10:09,956
我们创造出来的


306
00:10:10,006 --> 00:10:11,186
很多内容


307
00:10:11,256 --> 00:10:12,456
大部分都是亮色的


308
00:10:13,146 --> 00:10:16,336
然而在深色的用户界面


309
00:10:16,336 --> 00:10:18,326
可以使内容很显眼


310
00:10:18,366 --> 00:10:21,246
因为它的背景很暗


311
00:10:21,246 --> 00:10:22,676
所有的窗口外框


312
00:10:22,676 --> 00:10:24,756
都融于背景


313
00:10:24,756 --> 00:10:26,466
内容就成了


314
00:10:26,466 --> 00:10:28,136
你关注的主要焦点


315
00:10:29,296 --> 00:10:30,246
大体上有三种


316
00:10:30,246 --> 00:10:32,096
处理窗口


317
00:10:32,226 --> 00:10:35,656
内容部分的方法


318
00:10:35,656 --> 00:10:37,406
可以使内容更加突出


319
00:10:38,596 --> 00:10:39,926
第一个方法就是


320
00:10:40,066 --> 00:10:42,466
简单地调成全深色


321
00:10:42,636 --> 00:10:43,946
“访达”这样的 App


322
00:10:43,946 --> 00:10:45,076
就是个很好的例子


323
00:10:45,136 --> 00:10:47,246
因为它内容的展现方式


324
00:10:47,246 --> 00:10:48,396
很适合深色模式


325
00:10:48,936 --> 00:10:50,646
“访达”的内容是以


326
00:10:50,646 --> 00:10:53,316
多彩的文件图标形式展示的


327
00:10:53,316 --> 00:10:54,516
所以深色的背景


328
00:10:54,606 --> 00:10:58,536
可以让内容尽可能突出


329
00:10:58,536 --> 00:11:00,626
第二个方式是


330
00:11:00,736 --> 00:11:02,716
不做任何处理


331
00:11:03,226 --> 00:11:04,826
“Pages 文稿”是一个很好


332
00:11:04,826 --> 00:11:06,726
“所见即所得”的例子


333
00:11:06,916 --> 00:11:08,036
用户是怎样


334
00:11:08,036 --> 00:11:09,646
要求和创建内容的


335
00:11:09,646 --> 00:11:12,946
内容就应该怎样被渲染和展现出来


336
00:11:13,826 --> 00:11:16,276
对于“所见即所得”这类 App 来说


337
00:11:16,646 --> 00:11:17,856
深色模式是个很好的 UI


338
00:11:18,386 --> 00:11:19,566
因为内容


339
00:11:19,566 --> 00:11:21,906
会变成主要焦点


340
00:11:21,906 --> 00:11:23,576
而 UI 会变成次要的


341
00:11:23,636 --> 00:11:25,136
甚至会在你的


342
00:11:25,136 --> 00:11:25,536
视野中淡出


343
00:11:27,486 --> 00:11:32,846
第三个方法


344
00:11:32,846 --> 00:11:34,696
把内容部分的外观


345
00:11:34,696 --> 00:11:35,246
留给用户选择


346
00:11:35,956 --> 00:11:37,456
“邮件”就是一个很好的例子


347
00:11:37,456 --> 00:11:38,616
它内容的样式


348
00:11:38,686 --> 00:11:40,786
是不确定的


349
00:11:40,786 --> 00:11:41,946
取决于用户更喜欢


350
00:11:41,986 --> 00:11:44,386
浅色还是深色模式


351
00:11:44,386 --> 00:11:46,486
所以最好的方式是


352
00:11:46,486 --> 00:11:47,796
添加一个 App 内设置


353
00:11:47,796 --> 00:11:49,066
让用户自己决定


354
00:11:49,066 --> 00:11:50,276
是使用浅色模式


355
00:11:50,276 --> 00:11:51,406
还是深色模式


356
00:11:51,406 --> 00:11:53,806
但你 App 的边框部分


357
00:11:53,806 --> 00:11:55,416
应该遵循


358
00:11:58,346 --> 00:11:58,806
整体系统样式


359
00:11:59,226 --> 00:12:00,216
这三种方式的


360
00:12:00,216 --> 00:12:01,866
共同点是


361
00:12:01,936 --> 00:12:03,796
边框一直是深色


362
00:12:04,206 --> 00:12:06,826
比起内容部分没那么显眼


363
00:12:06,826 --> 00:12:09,026
深色模式通过我们称为


364
00:12:09,096 --> 00:12:10,666
“Desktop Tinting（桌面着色）”的功能


365
00:12:10,666 --> 00:12:11,946
做到了这个效果


366
00:12:12,336 --> 00:12:14,586
这种功能可以使窗口背景


367
00:12:14,586 --> 00:12:16,576
根据桌面图片


368
00:12:16,926 --> 00:12:17,966
自动变色


369
00:12:17,966 --> 00:12:20,286
我们发现


370
00:12:20,286 --> 00:12:22,386
一直用不饱和的灰色


371
00:12:22,386 --> 00:12:25,226
有可能在某些时候


372
00:12:25,226 --> 00:12:28,596
和你桌面图片的色温相冲突


373
00:12:28,596 --> 00:12:30,496
如果你的侧边栏是半透明的


374
00:12:30,496 --> 00:12:32,646
而你的窗口中有


375
00:12:32,646 --> 00:12:35,696
完全不透明的区域


376
00:12:35,696 --> 00:12:38,526
这种效果会更明显


377
00:12:38,526 --> 00:12:39,626
“Desktop Tinting（桌面着色）”可以


378
00:12:39,686 --> 00:12:40,416
减弱这种冲突


379
00:12:40,886 --> 00:12:41,986
使用这个功能


380
00:12:42,046 --> 00:12:43,656
可以给你的整个窗口


381
00:12:43,656 --> 00:12:45,346
一个和谐的色彩结构


382
00:12:45,526 --> 00:12:48,716
使其更好地


383
00:12:48,756 --> 00:12:50,916
融入周围区域


384
00:12:50,916 --> 00:12:52,906
减少色温差距


385
00:12:54,506 --> 00:12:56,616
那我们要如何


386
00:12:56,656 --> 00:12:57,776
实现这一效果呢


387
00:12:57,896 --> 00:13:00,946
首先 我们在


388
00:13:00,946 --> 00:13:01,936
窗口后面的


389
00:13:01,976 --> 00:13:04,626
桌面部分中取样


390
00:13:04,686 --> 00:13:07,416
可以得到一个平均色


391
00:13:07,416 --> 00:13:09,656
然后我们把这个颜色


392
00:13:09,656 --> 00:13:12,426
和灰色混合


393
00:13:12,496 --> 00:13:13,566
这就成为了


394
00:13:13,566 --> 00:13:14,346
窗口的背景色


395
00:13:15,326 --> 00:13:16,406
这个背景色是可变的


396
00:13:16,406 --> 00:13:18,366
当用户在屏幕上


397
00:13:18,366 --> 00:13:19,596
移动窗口时


398
00:13:19,596 --> 00:13:21,186
颜色会自动改变


399
00:13:21,186 --> 00:13:22,456
窗口颜色会一直


400
00:13:22,456 --> 00:13:25,176
和它后面的墙纸部分保持同步


401
00:13:25,706 --> 00:13:28,566
所以如果我们看一下


402
00:13:28,566 --> 00:13:29,746
几个不同壁纸下的


403
00:13:29,746 --> 00:13:31,656
动态变化效果


404
00:13:31,656 --> 00:13:32,916
你可以看到右侧的窗口


405
00:13:32,916 --> 00:13:34,676
自动调节


406
00:13:34,676 --> 00:13:37,816
以适应后面壁纸的颜色


407
00:13:39,166 --> 00:13:41,196
不仅是窗口的背景色


408
00:13:41,196 --> 00:13:44,106
会自己改变


409
00:13:44,106 --> 00:13:45,526
以适应桌面颜色


410
00:13:45,666 --> 00:13:47,566
控件也会


411
00:13:47,566 --> 00:13:48,666
稍有变化


412
00:13:48,666 --> 00:13:49,986
因为控件


413
00:13:49,986 --> 00:13:51,146
是不透明的


414
00:13:53,396 --> 00:13:56,696
有一些用户


415
00:13:56,696 --> 00:13:58,756
他们的软件对色彩准确度要求高


416
00:13:58,756 --> 00:14:00,456
或者处理的内容对色彩准确度要求很高


417
00:14:00,796 --> 00:14:02,456
或者只是不希望


418
00:14:02,456 --> 00:14:03,776
在自己的 UI 中


419
00:14:03,776 --> 00:14:07,996
使用这个功能


420
00:14:07,996 --> 00:14:09,986
我们提供了石墨色模式


421
00:14:09,986 --> 00:14:11,466
这样就可以全面禁止


422
00:14:11,536 --> 00:14:15,106
这个功能


423
00:14:15,106 --> 00:14:16,946
接下来我们看一下


424
00:14:16,946 --> 00:14:18,106
窗口背景色的色板


425
00:14:18,106 --> 00:14:20,306
在最上面


426
00:14:20,306 --> 00:14:21,546
我们可以看到在浅色模式下


427
00:14:21,546 --> 00:14:23,406
windowBackground


428
00:14:23,436 --> 00:14:25,586
是标准的浅灰色


429
00:14:25,646 --> 00:14:26,546
这是我们已经


430
00:14:26,606 --> 00:14:27,416
习惯了的颜色


431
00:14:27,736 --> 00:14:28,746
中间这里


432
00:14:28,786 --> 00:14:30,126
是 underPageBackground


433
00:14:30,126 --> 00:14:31,876
以中灰色呈现


434
00:14:32,376 --> 00:14:34,196
接下来是 contentBackground


435
00:14:34,196 --> 00:14:35,836
也就是我们熟悉的


436
00:14:35,936 --> 00:14:36,936
白色背景


437
00:14:36,936 --> 00:14:38,976
所有内容后的背景


438
00:14:38,976 --> 00:14:39,806
用的都是这个


439
00:14:40,716 --> 00:14:42,016
在中间这行


440
00:14:42,016 --> 00:14:43,876
你可以看到桌面着色


441
00:14:43,986 --> 00:14:45,636
是如何影响这些颜色的


442
00:14:45,636 --> 00:14:46,896
同时在下方


443
00:14:46,896 --> 00:14:48,476
你也可以看到石墨色模式


444
00:14:48,546 --> 00:14:50,456
是如何使桌面着色功能


445
00:14:50,516 --> 00:14:51,146
失去作用的


446
00:14:54,566 --> 00:14:55,636
现在我们已经大体介绍了


447
00:14:55,636 --> 00:14:56,866
这些设计原则


448
00:14:57,036 --> 00:14:58,276
接下来给大家介绍一下


449
00:14:58,276 --> 00:14:59,426
我们的设计考虑


450
00:14:59,426 --> 00:15:00,506
这是你在更新 App 时


451
00:15:00,506 --> 00:15:03,316
需要注意的


452
00:15:03,316 --> 00:15:04,416
首先是色彩


453
00:15:06,186 --> 00:15:08,746
我们给 macOS 10.14


454
00:15:08,746 --> 00:15:09,286
增加了很多配色


455
00:15:09,926 --> 00:15:12,056
我们也去掉了很多颜色


456
00:15:12,246 --> 00:15:15,446
更新了一些色彩


457
00:15:15,446 --> 00:15:16,706
从我身后的屏幕上可以看到


458
00:15:16,706 --> 00:15:17,616
这些是我们的系统色


459
00:15:17,826 --> 00:15:19,696
在下方是深色模式下


460
00:15:19,696 --> 00:15:21,026
对应的系统色变体


461
00:15:21,456 --> 00:15:23,506
如你所见


462
00:15:23,506 --> 00:15:24,916
深色模式下的系统色变体


463
00:15:24,916 --> 00:15:26,626
整体会更亮 更饱和一点


464
00:15:27,636 --> 00:15:29,356
Rachel 和 Taylor 将会


465
00:15:29,356 --> 00:15:30,636
在稍后进行到


466
00:15:30,846 --> 00:15:32,266
他们的部分时


467
00:15:32,316 --> 00:15:34,136
更深一步地介绍色彩


468
00:15:34,166 --> 00:15:35,656
但是现在我只是想


469
00:15:35,656 --> 00:15:36,566
试着介绍三种颜色


470
00:15:36,566 --> 00:15:38,356
这三种颜色都是蓝色系的


471
00:15:39,476 --> 00:15:41,086
从左到右分别是


472
00:15:41,126 --> 00:15:42,336
controlAccentColor


473
00:15:42,766 --> 00:15:44,456
systemBlueColor 和 linkColor


474
00:15:45,146 --> 00:15:47,076
linkColor 顾名思义


475
00:15:47,536 --> 00:15:49,936
是指 App 在链接上的颜色


476
00:15:50,066 --> 00:15:51,156
尤其是文本类的链接


477
00:15:51,616 --> 00:15:53,536
所以像是超链接


478
00:15:53,956 --> 00:15:55,576
把用户链接到一个网页


479
00:15:55,656 --> 00:15:57,456
或者软件内的链接


480
00:15:57,456 --> 00:15:58,846
可以引导你到


481
00:15:58,846 --> 00:16:00,336
软件的其他区域


482
00:16:00,336 --> 00:16:01,566
这些链接的颜色


483
00:16:01,566 --> 00:16:02,526
都是 linkColor


484
00:16:03,476 --> 00:16:04,816
controlAccentColor


485
00:16:04,816 --> 00:16:06,696
和 systemBlueColor


486
00:16:06,696 --> 00:16:09,136
可以用于


487
00:16:09,196 --> 00:16:10,896
可见边框或按钮边框背景


488
00:16:10,896 --> 00:16:13,856
或者是可着色的 Glyph


489
00:16:15,086 --> 00:16:16,516
controlAccentColor 顾名思义


490
00:16:16,556 --> 00:16:19,416
不论系统强调色是什么颜色


491
00:16:19,486 --> 00:16:21,296
它都是和系统色对应的


492
00:16:21,296 --> 00:16:22,866
在这个例子中是红色


493
00:16:23,556 --> 00:16:25,026
所以如果你有一个个性化控件


494
00:16:25,026 --> 00:16:26,186
想要模仿


495
00:16:26,186 --> 00:16:28,086
标准系统控件的样式


496
00:16:28,086 --> 00:16:29,886
或你只是想要一个


497
00:16:29,886 --> 00:16:32,476
和你所设置的系统色


498
00:16:32,516 --> 00:16:34,486
匹配的控件


499
00:16:34,486 --> 00:16:35,896
你应该使用 controlAccentColor


500
00:16:36,526 --> 00:16:38,036
如果你有一个控件


501
00:16:38,036 --> 00:16:39,386
它必须是蓝色


502
00:16:39,386 --> 00:16:41,646
可能是出于信息方面的原因


503
00:16:41,646 --> 00:16:43,076
或者是品牌方面的原因


504
00:16:43,076 --> 00:16:45,506
systemBlueColor


505
00:16:45,506 --> 00:16:46,516
对你来说是


506
00:16:46,516 --> 00:16:46,846
更好的选择


507
00:16:48,826 --> 00:16:50,286
接下来让我们看一下


508
00:16:50,286 --> 00:16:51,336
包含 Vibrancy 的设计


509
00:16:53,196 --> 00:16:54,926
谈到 Vibrancy


510
00:16:54,926 --> 00:16:56,036
我们一般是指


511
00:16:56,036 --> 00:17:00,356
一系列的半透明素材


512
00:17:00,356 --> 00:17:01,526
和它上面的内容


513
00:17:01,526 --> 00:17:02,676
组成的一个整体


514
00:17:03,226 --> 00:17:05,626
比如说“访达”的 Vibrancy 效果


515
00:17:05,705 --> 00:17:07,955
在这里就是它的侧边栏


516
00:17:10,076 --> 00:17:12,296
总的来说 Vibrancy


517
00:17:12,726 --> 00:17:14,965
就是动态地


518
00:17:14,965 --> 00:17:16,076
处理未上色的图案


519
00:17:16,076 --> 00:17:19,195
比如说这里


520
00:17:19,356 --> 00:17:21,606
“访达”侧边栏的


521
00:17:21,606 --> 00:17:23,175
Glyph 和文本


522
00:17:23,616 --> 00:17:25,756
Vibrancy 效果的结果就是


523
00:17:25,756 --> 00:17:28,056
对于文本之类的内容


524
00:17:28,136 --> 00:17:31,946
色彩会变得更饱和


525
00:17:31,946 --> 00:17:32,456
对比会更强烈


526
00:17:33,856 --> 00:17:35,616
而带有颜色的部分


527
00:17:35,616 --> 00:17:37,416
比如说“访达”中的标记


528
00:17:37,776 --> 00:17:38,506
就应该使用


529
00:17:38,506 --> 00:17:40,196
非 Vibrancy 效果


530
00:17:40,346 --> 00:17:41,636
带有颜色的图标


531
00:17:41,636 --> 00:17:42,406
也是这样的


532
00:17:42,816 --> 00:17:45,246
Vibrancy 效果不会影响


533
00:17:45,246 --> 00:17:46,836
图像中原有的色彩


534
00:17:46,836 --> 00:17:48,456
所以带颜色的图标也应使用


535
00:17:48,456 --> 00:17:49,646
非 Vibrancy 效果


536
00:17:50,416 --> 00:17:52,756
现在来看一下


537
00:17:52,756 --> 00:17:55,806
如何实现 Vibrancy 效果


538
00:17:55,806 --> 00:17:57,946
可能很明显


539
00:17:57,946 --> 00:18:00,466
直接调节不透明度


540
00:18:00,556 --> 00:18:02,726
在这里是白色的不透明度


541
00:18:03,316 --> 00:18:05,276
但是一些


542
00:18:05,276 --> 00:18:06,636
来自背景的色彩


543
00:18:06,636 --> 00:18:12,206
会对这里的素材有影响


544
00:18:12,206 --> 00:18:12,946
这种情况的出现


545
00:18:12,946 --> 00:18:14,456
是由于不透明度的最终效果


546
00:18:14,456 --> 00:18:16,346
实际上不会向我们期望的那样


547
00:18:16,346 --> 00:18:17,336
那么饱和


548
00:18:17,446 --> 00:18:19,546
你可以看到


549
00:18:20,026 --> 00:18:22,946
下面的 “Quaternary Label Color”


550
00:18:22,946 --> 00:18:25,396
会存在一些


551
00:18:25,396 --> 00:18:26,446
清晰度上的妥协


552
00:18:27,696 --> 00:18:29,216
那么你要做的是


553
00:18:29,266 --> 00:18:30,576
用不透明的灰度颜色


554
00:18:30,756 --> 00:18:31,636
对它进行处理


555
00:18:32,416 --> 00:18:34,786
这里要强调的一点是


556
00:18:34,886 --> 00:18:37,266
这些 RGB 标签的文本颜色


557
00:18:37,266 --> 00:18:39,756
都是全黑色


558
00:18:40,336 --> 00:18:42,726
应用混合模式后


559
00:18:42,726 --> 00:18:44,146
将会发生的是


560
00:18:44,216 --> 00:18:46,406
黑色的文本


561
00:18:46,556 --> 00:18:48,466
变成了全透明


562
00:18:48,916 --> 00:18:50,046
所以如果你有一些内容


563
00:18:50,046 --> 00:18:51,316
需要突出出来


564
00:18:51,316 --> 00:18:53,236
那就使用不透明黑色


565
00:18:53,326 --> 00:18:54,956
如果一些区域


566
00:18:54,956 --> 00:18:56,626
你想要它渐变到不透明


567
00:18:56,896 --> 00:18:59,226
那就使用


568
00:18:59,456 --> 00:19:00,916
趋向不透明黑色的灰色


569
00:19:01,656 --> 00:19:03,186
深色模式是这样


570
00:19:03,186 --> 00:19:04,506
浅色模式也是这样


571
00:19:04,546 --> 00:19:05,986
在浅色变色区


572
00:19:05,986 --> 00:19:08,486
这里不透明的纯白色


573
00:19:08,896 --> 00:19:11,096
代表着完全透明


574
00:19:11,146 --> 00:19:12,646
向其渐变


575
00:19:12,726 --> 00:19:14,596
就会达到透明的效果


576
00:19:15,996 --> 00:19:18,156
所以当我们使用 Vibrancy 效果时


577
00:19:18,566 --> 00:19:20,476
我们可以看到灰色


578
00:19:20,476 --> 00:19:23,116
变得饱和了许多


579
00:19:23,336 --> 00:19:26,016
“Quaternary Label Color”


580
00:19:26,016 --> 00:19:27,776
的清晰度也得到了显著提升


581
00:19:28,386 --> 00:19:29,796
两相对比


582
00:19:29,796 --> 00:19:32,326
我们可以看到


583
00:19:32,326 --> 00:19:34,026
不透明构造


584
00:19:34,026 --> 00:19:35,776
和灰度构造


585
00:19:35,776 --> 00:19:36,856
有多大的差异


586
00:19:36,856 --> 00:19:39,486
在一些情况下 对于特定的一些色彩


587
00:19:39,486 --> 00:19:43,036
不透明效果会很成功


588
00:19:43,086 --> 00:19:47,636
但是 在美学或者在清晰度角度


589
00:19:48,196 --> 00:19:50,046
这并不是


590
00:19:50,046 --> 00:19:50,476
最好的结果


591
00:19:52,536 --> 00:19:54,976
现在我们看一下


592
00:19:54,976 --> 00:19:56,396
艺术性反转 Glyph


593
00:19:56,856 --> 00:19:58,456
艺术性反转


594
00:19:58,456 --> 00:19:59,856
指的是一个过程


595
00:19:59,856 --> 00:20:01,856
你需要创造性地


596
00:20:01,856 --> 00:20:03,516
观察你的 Glyph


597
00:20:03,606 --> 00:20:05,316
并确定什么区域


598
00:20:05,356 --> 00:20:08,856
需要做出调整 以适应深色模式


599
00:20:09,546 --> 00:20:11,876
这里有一些


600
00:20:11,996 --> 00:20:14,216
需要做出调整标准 Glyph 


601
00:20:14,876 --> 00:20:16,106
需要注意的是


602
00:20:16,106 --> 00:20:17,726
浅色模式的 Glyph 


603
00:20:18,166 --> 00:20:20,716
大多使用了很多边框


604
00:20:20,716 --> 00:20:22,996
中间是空白的


605
00:20:23,386 --> 00:20:24,406
这样做的原因是


606
00:20:24,406 --> 00:20:25,746
我们利用白色背景


607
00:20:25,816 --> 00:20:27,186
把这些简单地放在上面


608
00:20:27,186 --> 00:20:29,156
来更好地


609
00:20:29,156 --> 00:20:32,086
展现它们的形状


610
00:20:33,136 --> 00:20:34,826
但是如果我们把


611
00:20:34,826 --> 00:20:36,736
完全一样的矢量图形


612
00:20:36,996 --> 00:20:38,246
放在深色背景上


613
00:20:38,296 --> 00:20:40,196
所有的形状感和体积感


614
00:20:40,426 --> 00:20:42,606
都仿佛消失了


615
00:20:43,206 --> 00:20:44,666
所以我们要


616
00:20:44,666 --> 00:20:46,526
艺术地反转它们


617
00:20:46,526 --> 00:20:48,306
强化它们的形状和体积


618
00:20:50,286 --> 00:20:51,976
看看其中的一些


619
00:20:51,976 --> 00:20:53,916
是如何构建的


620
00:20:53,916 --> 00:20:55,206
我们有几个简单的例子


621
00:20:55,206 --> 00:20:55,606
比如这个“访达”标记


622
00:20:55,606 --> 00:20:58,886
在左侧有一个白色的标记


623
00:20:58,886 --> 00:21:01,346
上面有一个黑色的小孔


624
00:21:01,936 --> 00:21:03,286
然而在右侧


625
00:21:03,286 --> 00:21:05,406
深色模式下


626
00:21:05,406 --> 00:21:07,336
纸片的感觉消失了


627
00:21:07,816 --> 00:21:09,636
一旦我们把颜色翻转一下


628
00:21:09,636 --> 00:21:10,936
就能找回纸片的感觉


629
00:21:10,966 --> 00:21:13,126
上面还有一个小孔


630
00:21:14,286 --> 00:21:15,386
来看看这是如何构建的


631
00:21:15,386 --> 00:21:18,976
大体上你要做的是


632
00:21:19,546 --> 00:21:23,056
扩大剪裁路径


633
00:21:23,056 --> 00:21:27,416
然后选中小孔形状


634
00:21:27,416 --> 00:21:29,606
然后将它的颜色反转


635
00:21:29,606 --> 00:21:31,006
所以这只是个


636
00:21:31,046 --> 00:21:35,386
选择多余的矢量路径


637
00:21:35,386 --> 00:21:38,896
然后删除的简单操作


638
00:21:38,946 --> 00:21:40,896
看一个稍微复杂一点的形状


639
00:21:41,156 --> 00:21:43,226
比如说这个房子


640
00:21:43,766 --> 00:21:46,246
左侧有一个白色的房子


641
00:21:46,246 --> 00:21:47,396
但在右侧


642
00:21:47,426 --> 00:21:48,996
房子不再是白色了


643
00:21:49,616 --> 00:21:52,056
颜色反转让我们重新得到


644
00:21:52,106 --> 00:21:54,936
一个白色的房子


645
00:21:56,096 --> 00:21:57,196
大体上这个 Glyph 的构建


646
00:21:57,196 --> 00:21:58,626
和刚刚的过程是一样的


647
00:21:58,626 --> 00:22:02,376
但是对于这个 Glyph


648
00:22:02,596 --> 00:22:04,066
尤其重要的一点是


649
00:22:04,066 --> 00:22:06,316
我们需要


650
00:22:06,356 --> 00:22:09,536
在矢量图形上加上一个新的形状


651
00:22:09,846 --> 00:22:11,036
这种情况下


652
00:22:11,036 --> 00:22:13,646
我们要模仿屋顶的线


653
00:22:13,646 --> 00:22:15,326
在屋顶下再创造一个阴影


654
00:22:15,326 --> 00:22:17,286
然后把它删除


655
00:22:17,416 --> 00:22:18,646
这一步很重要


656
00:22:18,646 --> 00:22:20,826
如果构建房子时


657
00:22:20,826 --> 00:22:23,706
不加这个阴影线


658
00:22:23,706 --> 00:22:25,186
这个屋顶就不会突出出来


659
00:22:25,186 --> 00:22:26,136
当它在一些小的视图中


660
00:22:26,136 --> 00:22:27,586
就更难看清楚


661
00:22:29,936 --> 00:22:32,156
接下来是一个更复杂的 Glyph


662
00:22:32,586 --> 00:22:35,056
我们用这个邮件信封


663
00:22:35,056 --> 00:22:35,666
作为例子


664
00:22:36,136 --> 00:22:38,986
左侧 我们可以看到体积感和形状感


665
00:22:38,986 --> 00:22:41,086
大体上说 这个 Glyph 可以分为两层


666
00:22:41,126 --> 00:22:42,656
一层是信封后面的封皮


667
00:22:42,656 --> 00:22:43,626
另一层是


668
00:22:43,626 --> 00:22:45,696
信封前面的封皮


669
00:22:45,696 --> 00:22:47,026
中间有一封信


670
00:22:47,426 --> 00:22:50,456
在右侧 质量感消失了


671
00:22:50,456 --> 00:22:53,096
因为缺少填充色


672
00:22:54,066 --> 00:22:56,306
所以当反转这个图像时


673
00:22:56,306 --> 00:22:57,956
我们要重新赋予它质量感


674
00:22:59,906 --> 00:23:01,736
同样地 大体上


675
00:23:01,776 --> 00:23:03,436
这个 Glyph 的构建


676
00:23:03,436 --> 00:23:04,406
和之前的是一样的


677
00:23:04,406 --> 00:23:06,706
但是多出了一些细节


678
00:23:06,706 --> 00:23:10,246
需要更多的时间


679
00:23:10,246 --> 00:23:12,066
因为这里有


680
00:23:12,066 --> 00:23:13,106
更多的剪辑路径


681
00:23:13,196 --> 00:23:14,866
但是大体上


682
00:23:14,866 --> 00:23:16,116
你要把这个分成两部分


683
00:23:16,116 --> 00:23:17,816
你再一次得到了


684
00:23:17,816 --> 00:23:19,256
前面的封面和后面的封皮


685
00:23:19,506 --> 00:23:21,956
中间是信件部分


686
00:23:22,616 --> 00:23:24,636
一个重要的细节是


687
00:23:24,676 --> 00:23:29,026
这个 Glyph 例证了


688
00:23:29,026 --> 00:23:30,756
我们在一些 Glyph 中使用的


689
00:23:30,756 --> 00:23:31,146
双重不透明度


690
00:23:31,336 --> 00:23:32,696
在这种情况下


691
00:23:32,786 --> 00:23:35,536
信件的不透明度设置成 80%


692
00:23:35,536 --> 00:23:36,956
使它和信封相比 处于次要的位置


693
00:23:36,956 --> 00:23:38,316
信封 处于打开的状态


694
00:23:38,316 --> 00:23:39,486
是我们想要传递的信息


695
00:23:40,406 --> 00:23:42,026
相反的情况对于浅色模式


696
00:23:42,026 --> 00:23:43,756
同样适用


697
00:23:43,896 --> 00:23:45,906
我们在一些情况下


698
00:23:45,906 --> 00:23:46,406
也会使用 80% 的不透明度


699
00:23:48,176 --> 00:23:50,796
现在让我们迅速回顾一下


700
00:23:50,796 --> 00:23:51,846
刚才讲过的内容


701
00:23:52,906 --> 00:23:55,646
深色界面很酷


702
00:23:55,646 --> 00:23:56,876
酷到让你


703
00:23:56,876 --> 00:23:57,986
想把 App


704
00:23:58,386 --> 00:23:59,886
一直设置在深色模式上


705
00:23:59,946 --> 00:24:01,016
但是如果你的 App


706
00:24:01,116 --> 00:24:03,436
不是设计类或媒体类 App


707
00:24:03,436 --> 00:24:05,016
那你就要重新考虑一下


708
00:24:05,016 --> 00:24:06,656
让你的软件


709
00:24:06,656 --> 00:24:07,666
和系统外观


710
00:24:07,696 --> 00:24:08,586
保持一致


711
00:24:09,396 --> 00:24:12,476
不要把深色模式的设计


712
00:24:12,646 --> 00:24:14,396
简单地理解为


713
00:24:14,396 --> 00:24:15,846
浅色模式的反转


714
00:24:16,016 --> 00:24:18,086
要具体分析你的


715
00:24:18,086 --> 00:24:20,556
App 中的各个元素


716
00:24:20,626 --> 00:24:22,266
尝试并看一下


717
00:24:22,266 --> 00:24:23,896
什么样的视觉提示


718
00:24:23,896 --> 00:24:26,076
是深色模式想要通过控件传递的


719
00:24:26,076 --> 00:24:27,806
然后确定


720
00:24:27,806 --> 00:24:29,116
相反的视觉提示


721
00:24:29,116 --> 00:24:33,206
是否是必要的


722
00:24:33,206 --> 00:24:34,846
然后看一下


723
00:24:34,886 --> 00:24:36,806
你的软件提供或展示什么内容


724
00:24:36,806 --> 00:24:39,836
然后用这些


725
00:24:39,836 --> 00:24:42,116
指导你去确定


726
00:24:42,356 --> 00:24:44,136
你想将内容部分


727
00:24:44,136 --> 00:24:45,336
设置成哪种模式


728
00:24:45,686 --> 00:24:49,826
是保持当前的全深色


729
00:24:49,936 --> 00:24:51,076
还是通过软件内设置


730
00:24:51,076 --> 00:24:52,716
让用户自己选择


731
00:24:54,436 --> 00:24:57,106
然后我们大致看了色彩


732
00:24:58,986 --> 00:25:03,526
确保你恰当地使用


733
00:25:03,526 --> 00:25:04,666
我们刚才介绍的三种颜色


734
00:25:04,666 --> 00:25:05,786
如果你的控件是


735
00:25:05,876 --> 00:25:07,956
文本控件


736
00:25:08,406 --> 00:25:11,026
而且可能会用到文本链接


737
00:25:11,026 --> 00:25:11,806
就用 linkColor


738
00:25:12,306 --> 00:25:13,746
如果你想要控件


739
00:25:13,746 --> 00:25:16,176
遵循系统的强调色


740
00:25:16,216 --> 00:25:18,746
那就把控件颜色设置成


741
00:25:19,286 --> 00:25:20,736
controlAccentColor


742
00:25:20,736 --> 00:25:21,866
如果你想让控件


743
00:25:21,866 --> 00:25:24,626
一直保持蓝色


744
00:25:24,626 --> 00:25:25,756
那就使用 systemBlueColor


745
00:25:25,756 --> 00:25:27,976
接下来 Taylor and Rachel


746
00:25:27,976 --> 00:25:29,576
会非常详细地介绍


747
00:25:29,576 --> 00:25:30,986
色彩使用问题


748
00:25:31,236 --> 00:25:32,916
所以一定要


749
00:25:32,916 --> 00:25:33,986
关注他们的部分


750
00:25:34,646 --> 00:25:37,686
当构建你的 Vibrancy 区域时


751
00:25:37,686 --> 00:25:39,226
需要确保


752
00:25:39,226 --> 00:25:40,856
你构建它们的方式


753
00:25:40,856 --> 00:25:42,186
能充分利用


754
00:25:42,186 --> 00:25:44,046
动态效果混合


755
00:25:44,046 --> 00:25:45,206
也就是要确保你使用的是


756
00:25:45,206 --> 00:25:46,236
不透明的灰度颜色


757
00:25:46,316 --> 00:25:47,966
如果你想突出某些区域


758
00:25:47,966 --> 00:25:50,066
或者让它们不透明


759
00:25:50,066 --> 00:25:52,646
在深色模式下趋向于黑色


760
00:25:52,646 --> 00:25:54,246
或者在浅色模式下


761
00:25:54,386 --> 00:25:55,026
趋向于白色


762
00:25:56,476 --> 00:26:01,666
最后 确保你使用的 Glyph


763
00:26:01,736 --> 00:26:03,666
是经过艺术反转的


764
00:26:03,746 --> 00:26:07,386
尽可能有效地


765
00:26:07,386 --> 00:26:08,746
向用户展示


766
00:26:08,746 --> 00:26:10,126
Glyph 的


767
00:26:10,196 --> 00:26:10,666
设计意图


768
00:26:12,476 --> 00:26:14,486
最后确保 前往 “Human 


769
00:26:14,486 --> 00:26:16,366
Interface Guidelines（人机界面准则）”


770
00:26:16,366 --> 00:26:18,146
查看更多的设计引导


771
00:26:19,426 --> 00:26:21,266
然后注意检查


772
00:26:21,266 --> 00:26:23,156
设计资源部分


773
00:26:23,406 --> 00:26:26,416
这个月底我们会


774
00:26:26,416 --> 00:26:28,086
更新 Photoshop 和 Sketch 模板


775
00:26:28,156 --> 00:26:29,656
以及工具包 供你使用


776
00:26:30,556 --> 00:26:32,086
接下来我想


777
00:26:32,086 --> 00:26:34,756
把时间交给 Rachel


778
00:26:34,756 --> 00:26:36,326
有请她介绍一些


779
00:26:36,326 --> 00:26:37,086
采用和支持深色模式的细节


780
00:26:37,086 --> 00:26:38,076
谢谢


781
00:26:39,516 --> 00:26:42,500
[ 掌声 ]


782
00:26:46,136 --> 00:26:46,976
>> 谢谢你 Raymond


783
00:26:46,976 --> 00:26:47,856
大家好


784
00:26:48,326 --> 00:26:49,636
让我们用一点点时间


785
00:26:49,636 --> 00:26:51,026
来感谢 Raymond


786
00:26:51,026 --> 00:26:52,536
和其他设计团队的成员


787
00:26:52,536 --> 00:26:52,976
设计出深色模式


788
00:26:52,976 --> 00:26:53,976
深色模式是不是很棒


789
00:26:54,516 --> 00:26:58,516
[ 掌声 ]


790
00:26:59,016 --> 00:27:01,376
现在我和 Taylor 会向大家介绍


791
00:27:01,376 --> 00:27:03,026
在 macOS Mojave 上


792
00:27:03,196 --> 00:27:05,586
采用深色模式的


793
00:27:05,586 --> 00:27:06,116
工程基础知识


794
00:27:06,746 --> 00:27:12,046
在之前我和 Taylor 聊天时


795
00:27:12,046 --> 00:27:13,516
发现我俩都


796
00:27:13,516 --> 00:27:16,626
非常喜欢变色龙


797
00:27:17,036 --> 00:27:18,926
尽管我们现在还没有


798
00:27:18,926 --> 00:27:20,406
养自己的变色龙宠物


799
00:27:20,406 --> 00:27:22,266
但是我们会通过编写一个名为


800
00:27:22,266 --> 00:27:24,276
《Chameleon Wrangler》的 App 来做好准备


801
00:27:24,956 --> 00:27:26,666
我们在 High Sierra 上编写了这个 App


802
00:27:27,396 --> 00:27:28,726
所以我们觉得应该更新它


803
00:27:28,726 --> 00:27:29,996
以适应 Mojave


804
00:27:30,616 --> 00:27:33,506
我们做的第一件事


805
00:27:33,506 --> 00:27:35,266
就是把我们的系统设成深色模式


806
00:27:35,266 --> 00:27:37,946
并在程序坞启动了我们的 App


807
00:27:38,156 --> 00:27:40,466
看起来并不是很暗


808
00:27:41,576 --> 00:27:44,056
实际上它在浅色和深色模式下


809
00:27:44,556 --> 00:27:45,556
是一样的


810
00:27:46,796 --> 00:27:48,386
而且你会注意到


811
00:27:48,386 --> 00:27:49,926
在我们的介绍部分


812
00:27:49,926 --> 00:27:51,316
当我们想要对比的时候


813
00:27:51,316 --> 00:27:52,616
会把浅色模式放在左边


814
00:27:52,616 --> 00:27:53,616
深色模式放在右边


815
00:27:53,616 --> 00:27:54,986
你就可以


816
00:27:54,986 --> 00:27:55,376
一一对比了


817
00:27:55,986 --> 00:27:57,206
真正运行的时候


818
00:27:57,206 --> 00:27:57,726
不是这样的


819
00:27:57,756 --> 00:27:58,536
这样只是为了展示


820
00:28:00,516 --> 00:28:02,466
现在我们要


821
00:28:02,466 --> 00:28:04,686
把 10.14 SDK 关联到


822
00:28:04,736 --> 00:28:05,496
Xcode 10 上


823
00:28:07,116 --> 00:28:09,166
我们构建并运行 App


824
00:28:09,166 --> 00:28:11,486
你看 变暗了许多


825
00:28:12,456 --> 00:28:13,596
和浅色模式相比


826
00:28:13,596 --> 00:28:14,616
你可以看到


827
00:28:14,616 --> 00:28:16,256
很多东西都不同了 自动变暗了


828
00:28:16,256 --> 00:28:18,756
但是依旧有一些东西


829
00:28:18,756 --> 00:28:20,176
我们想要调整一下


830
00:28:21,586 --> 00:28:24,386
所以我们会深入探讨一下一些色彩


831
00:28:24,996 --> 00:28:27,976
我们用了很多色彩


832
00:28:28,876 --> 00:28:32,296
看一下标题区


833
00:28:32,296 --> 00:28:34,096
是浅绿色


834
00:28:35,576 --> 00:28:39,416
我们是通过硬编码颜色


835
00:28:39,616 --> 00:28:41,056
来实现这个颜色的


836
00:28:41,056 --> 00:28:42,716
并且指定了我们的


837
00:28:42,716 --> 00:28:43,606
自定义 RGBA 值


838
00:28:45,016 --> 00:28:46,376
这一方案的问题是


839
00:28:46,636 --> 00:28:48,056
在不同的外观下


840
00:28:48,216 --> 00:28:49,676
它不会发生改变


841
00:28:50,306 --> 00:28:51,646
它会保持这一个颜色


842
00:28:51,696 --> 00:28:52,996
无论你的


843
00:28:52,996 --> 00:28:53,946
系统偏好设置是什么


844
00:28:56,056 --> 00:28:57,346
我们并未采用这一方案


845
00:28:57,746 --> 00:28:59,426
相反我们准备利用


846
00:28:59,426 --> 00:29:01,256
“Asset Catalog（素材目录）”中的色彩


847
00:29:02,236 --> 00:29:03,266
早在 10.13 版本你就可以


848
00:29:03,266 --> 00:29:05,476
在素材目录取色了


849
00:29:05,476 --> 00:29:08,196
但是现在你可以


850
00:29:08,196 --> 00:29:09,726
为不同的外观


851
00:29:09,726 --> 00:29:10,356
选择不同的颜色


852
00:29:10,906 --> 00:29:12,746
所以我们已经添加了


853
00:29:13,026 --> 00:29:13,976
标头色彩的深色版本


854
00:29:15,196 --> 00:29:16,456
素材目录


855
00:29:16,456 --> 00:29:17,716
有几个优点


856
00:29:18,396 --> 00:29:20,976
你可以给它们起有意义的名字


857
00:29:20,976 --> 00:29:23,136
来描述它们被用在哪里


858
00:29:23,136 --> 00:29:24,886
或者是如何被使用的


859
00:29:24,996 --> 00:29:25,876
这些名字被称为


860
00:29:25,876 --> 00:29:27,176
语义化名称


861
00:29:27,846 --> 00:29:31,106
你可以有多套


862
00:29:31,166 --> 00:29:32,676
色彩设定


863
00:29:32,676 --> 00:29:33,906
就像我通过浅色模式和深色模式


864
00:29:33,906 --> 00:29:35,906
进行展示的


865
00:29:35,906 --> 00:29:38,476
或者针对不同的色彩空间的设定


866
00:29:38,476 --> 00:29:38,846
比如 sRGB 和 P3 色域


867
00:29:38,846 --> 00:29:42,076
它给了你一个


868
00:29:42,076 --> 00:29:44,886
能定义所有颜色的集中区域


869
00:29:45,206 --> 00:29:46,686
而且可以使你在需要的时候


870
00:29:46,686 --> 00:29:47,806
轻松地进入并且调节颜色


871
00:29:47,806 --> 00:29:49,926
无需改变任何代码


872
00:29:50,756 --> 00:29:54,116
这就是我们


873
00:29:54,116 --> 00:29:56,296
素材目录的颜色


874
00:29:56,296 --> 00:29:57,656
它们被称为 headerColor


875
00:29:57,656 --> 00:29:58,286
因为它们是标头的颜色


876
00:29:59,526 --> 00:30:00,916
让我们看一下使用 headerColor


877
00:30:01,356 --> 00:30:02,576
目前是什么样子的


878
00:30:03,366 --> 00:30:04,606
使用了深绿色之后


879
00:30:04,606 --> 00:30:05,446
看起来好多了 颜色深多了


880
00:30:06,056 --> 00:30:07,846
但是也暴露了一些问题


881
00:30:08,946 --> 00:30:10,116
那就是文本


882
00:30:10,666 --> 00:30:13,236
Chloe 的名字和年龄


883
00:30:13,236 --> 00:30:14,526
在绿色加深的情况下


884
00:30:14,526 --> 00:30:14,966
变得难以辨识


885
00:30:16,336 --> 00:30:19,596
在浅色模式下看起来很好的


886
00:30:19,596 --> 00:30:22,276
在深色模式下变得不好了


887
00:30:22,456 --> 00:30:24,516
这里我们当时使用了黑色


888
00:30:25,166 --> 00:30:27,236
和深灰色


889
00:30:27,236 --> 00:30:28,956
这些也是静态颜色


890
00:30:29,526 --> 00:30:31,686
和硬编码不完全一样


891
00:30:31,686 --> 00:30:33,266
因为我们使用的是


892
00:30:33,456 --> 00:30:36,446
素材目录中的颜色


893
00:30:36,446 --> 00:30:36,896
但是它们不会变色


894
00:30:38,076 --> 00:30:39,766
所以与之使用


895
00:30:39,766 --> 00:30:41,206
素材目录的颜色


896
00:30:41,206 --> 00:30:43,906
我们这次准备利用


897
00:30:43,906 --> 00:30:44,626
动态系统色


898
00:30:45,506 --> 00:30:48,416
NSColor 有许多的动态色彩


899
00:30:48,416 --> 00:30:50,366
可供我们使用


900
00:30:50,366 --> 00:30:51,766
不同的外观下都有


901
00:30:51,766 --> 00:30:52,386
不同的设定


902
00:30:53,466 --> 00:30:55,106
NSColor 的一个特点是


903
00:30:55,106 --> 00:30:57,156
色彩在绘制之前


904
00:30:57,156 --> 00:30:59,476
是经过处理的


905
00:30:59,476 --> 00:31:01,506
也就是说


906
00:31:01,746 --> 00:31:04,596
真正使用的 RGBA 值


907
00:31:04,596 --> 00:31:07,366
取决于色彩被画出来时的情况


908
00:31:07,366 --> 00:31:09,976
现在我带大家浏览几个


909
00:31:09,976 --> 00:31:12,636
关于动态系统色的例子


910
00:31:14,206 --> 00:31:15,766
从 Raymond 先前谈过的


911
00:31:15,846 --> 00:31:16,856
labelColor 开始


912
00:31:16,856 --> 00:31:19,806
现在我向大家展示的


913
00:31:19,806 --> 00:31:21,586
上半部分是动态色


914
00:31:21,916 --> 00:31:23,576
在下半部分是一些


915
00:31:23,576 --> 00:31:25,076
对应的静态色


916
00:31:25,076 --> 00:31:27,306
只是一些不透明度不同的黑色


917
00:31:27,966 --> 00:31:29,716
大家可以看到


918
00:31:29,716 --> 00:31:31,026
在浅色模式


919
00:31:31,026 --> 00:31:31,736
一切看起来都不错


920
00:31:32,436 --> 00:31:34,626
但是在深色模式


921
00:31:34,626 --> 00:31:36,466
labelColor 看起来依旧很好


922
00:31:36,466 --> 00:31:37,676
但是黑色消失在了


923
00:31:37,676 --> 00:31:38,456
深色背景之中


924
00:31:38,936 --> 00:31:42,856
下面例子是“邮箱”


925
00:31:42,856 --> 00:31:45,326
它同时使用了


926
00:31:45,326 --> 00:31:47,586
labelColor 和 secondaryLabelColor


927
00:31:48,626 --> 00:31:50,396
最重要的文本


928
00:31:50,396 --> 00:31:51,856
用了 labelColor


929
00:31:51,856 --> 00:31:53,436
次要的文本


930
00:31:53,436 --> 00:31:54,496
用的是 secondaryLabelColor


931
00:31:55,196 --> 00:31:59,006
为了弄清楚哪种颜色是动态色


932
00:31:59,006 --> 00:32:01,296
在 “Interface Builder（界面构建器）”的


933
00:32:01,396 --> 00:32:03,886
色彩弹出菜单中


934
00:32:04,106 --> 00:32:05,626
它会给你一个列表


935
00:32:05,626 --> 00:32:07,056
我的同事真的很棒


936
00:32:07,056 --> 00:32:10,146
他们把很多颜色都变成了动态颜色


937
00:32:11,716 --> 00:32:14,876
现在我们知道怎么做了


938
00:32:14,876 --> 00:32:17,016
把黑色和深灰色


939
00:32:17,586 --> 00:32:19,686
转换成 labelColor 和 secondaryLabelColor


940
00:32:19,686 --> 00:32:21,756
这就解决了文本问题


941
00:32:21,756 --> 00:32:23,866
在浅色模式和深色模式下


942
00:32:23,866 --> 00:32:25,586
看起来都不错


943
00:32:26,876 --> 00:32:30,056
关于动态系统色我还要补充一点


944
00:32:30,916 --> 00:32:32,336
正如 Raymond 向大家展示的


945
00:32:32,336 --> 00:32:35,146
我们有很多系统色


946
00:32:35,146 --> 00:32:36,476
systemRed


947
00:32:36,656 --> 00:32:38,176
systemYellow 和 systemGreen 


948
00:32:38,176 --> 00:32:39,296
只是其中的三个例子


949
00:32:40,086 --> 00:32:41,816
并且它们会发生微妙的变化


950
00:32:41,816 --> 00:32:43,086
展现出不同的外观


951
00:32:43,086 --> 00:32:44,626
使自己在两种模式下都能很好看


952
00:32:44,976 --> 00:32:46,896
和静态的 平淡的


953
00:32:46,896 --> 00:32:48,276
红 黄 绿色不同


954
00:32:49,756 --> 00:32:51,166
动态色还有一点比较特殊


955
00:32:51,166 --> 00:32:53,736
在使用 systemRed 等色彩时


956
00:32:53,736 --> 00:32:56,286
它们会应用到整个系统中


957
00:32:56,396 --> 00:32:58,706
其它用到它的地方


958
00:32:58,706 --> 00:33:00,106
甚至还会在 iOS 上应用


959
00:33:01,656 --> 00:33:03,246
所以当你的颜色中


960
00:33:03,316 --> 00:33:05,826
有信息类文本时


961
00:33:05,826 --> 00:33:07,536
一直使用这类颜色是很好的选择


962
00:33:07,536 --> 00:33:10,326
比如说 需要使用红色或黄色的警告


963
00:33:13,276 --> 00:33:15,016
Raymond 还提及了


964
00:33:15,706 --> 00:33:17,316
linkColor systemBlue 


965
00:33:17,316 --> 00:33:18,946
和 controlAccentColor


966
00:33:18,946 --> 00:33:20,146
我想再介绍一下这几种色彩


967
00:33:21,486 --> 00:33:22,776
linkColor 和 systemBlue


968
00:33:22,776 --> 00:33:24,126
非常相像


969
00:33:24,126 --> 00:33:26,296
但是稍有不同


970
00:33:26,296 --> 00:33:29,466
对你 App 中的网页链接


971
00:33:29,626 --> 00:33:30,636
或导航到 App 中的其他位置需要使用 linkColor


972
00:33:31,276 --> 00:33:33,786
而在软件的标准操作中


973
00:33:33,786 --> 00:33:34,926
应该使用 systemBlue


974
00:33:34,926 --> 00:33:36,576
你甚至可能用


975
00:33:36,576 --> 00:33:38,086
controlAccentColor


976
00:33:38,086 --> 00:33:39,096
去匹配系统偏好设置


977
00:33:39,096 --> 00:33:40,916
在这里 我们使用的是紫色


978
00:33:42,676 --> 00:33:45,106
你可能搜索


979
00:33:45,106 --> 00:33:47,486
你的软件代码


980
00:33:47,486 --> 00:33:48,866
找到使用颜色的部分


981
00:33:48,866 --> 00:33:51,526
把它们全改过来


982
00:33:51,526 --> 00:33:53,226
但是结果可能依旧是这个情况


983
00:33:53,296 --> 00:33:55,916
出于某些原因


984
00:33:55,946 --> 00:33:57,376
即便是你的文本改变了颜色


985
00:33:57,376 --> 00:33:58,856
它后面的颜色


986
00:33:58,856 --> 00:34:00,236
依旧是不对的


987
00:34:00,866 --> 00:34:03,476
如果你陷入了这种困境


988
00:34:03,476 --> 00:34:06,366
不知所措


989
00:34:06,366 --> 00:34:08,505
我建议你利用 Xcode 的 “View Debugger


990
00:34:08,505 --> 00:34:09,005
（视图调试器）”


991
00:34:09,716 --> 00:34:13,025
在这里 我只是简单介绍一下


992
00:34:13,025 --> 00:34:14,466
在高级深色模式讨论会中


993
00:34:14,466 --> 00:34:16,565
会详细介绍


994
00:34:16,565 --> 00:34:17,116
有关调试的建议和技巧


995
00:34:18,525 --> 00:34:22,196
我们可以看到浅色视图


996
00:34:22,196 --> 00:34:24,315
实际上是一个滚动视图


997
00:34:24,315 --> 00:34:26,706
之前在 Interface Builder 中


998
00:34:27,106 --> 00:34:28,446
设置为自定义灰色


999
00:34:28,926 --> 00:34:29,936
这就是为什么我搜索代码


1000
00:34:29,936 --> 00:34:30,946
却找不到它


1001
00:34:31,996 --> 00:34:33,936
所以我把它转换成


1002
00:34:33,936 --> 00:34:36,016
默认背景色


1003
00:34:36,146 --> 00:34:37,076
现在一切看起来都很棒了


1004
00:34:38,156 --> 00:34:39,246
既然我们展示的是


1005
00:34:39,286 --> 00:34:40,485
文本视图的效果


1006
00:34:40,485 --> 00:34:41,626
我想在这里向大家


1007
00:34:41,626 --> 00:34:43,505
分析一遍这里用到的


1008
00:34:43,686 --> 00:34:45,136
动态系统颜色 可能也会


1009
00:34:45,136 --> 00:34:45,846
对你有所帮助


1010
00:34:46,396 --> 00:34:50,746
首先是 textColor


1011
00:34:50,746 --> 00:34:52,656
在黑色和白色之间转换


1012
00:34:52,656 --> 00:34:55,676
textBackgroundColor


1013
00:34:55,676 --> 00:34:58,936
从白色转换成黑色


1014
00:34:58,936 --> 00:35:02,116
selectedTextColor 


1015
00:35:02,116 --> 00:35:04,496
从黑色转换成白色


1016
00:35:04,496 --> 00:35:07,166
然后 selectedTextBackgroundColor 是蓝色


1017
00:35:07,166 --> 00:35:08,266
但是你可以看出来


1018
00:35:08,266 --> 00:35:10,376
这是两种不同的蓝色


1019
00:35:11,336 --> 00:35:12,676
这一点很特殊


1020
00:35:12,676 --> 00:35:14,136
因为它跟随了


1021
00:35:14,136 --> 00:35:15,146
高亮色的系统偏好


1022
00:35:15,196 --> 00:35:16,616
大家可以看到


1023
00:35:16,676 --> 00:35:18,256
当高亮显示颜色改变时


1024
00:35:18,256 --> 00:35:19,996
selectedTextBackgroundColor


1025
00:35:20,386 --> 00:35:21,746
会随之改变


1026
00:35:22,426 --> 00:35:24,896
现在我继续往下讲


1027
00:35:24,896 --> 00:35:26,296
谈一谈辅助功能


1028
00:35:28,676 --> 00:35:30,206
在辅助功能的


1029
00:35:30,206 --> 00:35:31,516
显示器偏好设置中


1030
00:35:31,516 --> 00:35:33,216
有一个“提高对比度”复选框


1031
00:35:34,526 --> 00:35:36,316
如果我们开启提高对比度模式


1032
00:35:36,316 --> 00:35:38,706
你可以看到整个系统的


1033
00:35:38,706 --> 00:35:40,176
颜色和插图都变了


1034
00:35:40,176 --> 00:35:43,986
这使得视力不好的人


1035
00:35:43,986 --> 00:35:44,406
更容易看清 UI


1036
00:35:45,786 --> 00:35:49,616
现在在素材目录


1037
00:35:49,616 --> 00:35:52,006
我们可以为高对比度外观


1038
00:35:52,006 --> 00:35:53,966
专门添加几种颜色


1039
00:35:54,626 --> 00:35:56,256
这里我给标头色


1040
00:35:56,256 --> 00:36:00,586
添加了高对比浅色和高对比深色


1041
00:36:01,326 --> 00:36:04,526
这就是《Chameleon Wrangler》


1042
00:36:04,526 --> 00:36:08,226
在对比度深色模式下的外观


1043
00:36:08,816 --> 00:36:10,276
你会发现


1044
00:36:10,276 --> 00:36:11,666
不仅我的标题色


1045
00:36:11,666 --> 00:36:13,246
是我设定的特殊颜色


1046
00:36:13,856 --> 00:36:15,386
其他的系统色彩


1047
00:36:15,466 --> 00:36:17,586
也被特殊设定成


1048
00:36:17,586 --> 00:36:19,106
高对比度外观


1049
00:36:19,936 --> 00:36:22,256
对于浅色模式下的高对比度


1050
00:36:22,256 --> 00:36:23,486
也是一样的


1051
00:36:23,486 --> 00:36:29,206
接下来要讲的是图像


1052
00:36:34,466 --> 00:36:36,426
看一下这里的


1053
00:36:36,426 --> 00:36:37,156
工具栏按钮


1054
00:36:40,926 --> 00:36:42,286
这个变色龙取色器按钮


1055
00:36:42,286 --> 00:36:44,666
在浅色模式下看起来很棒


1056
00:36:44,666 --> 00:36:46,976
但是在深色模式下


1057
00:36:46,976 --> 00:36:48,746
深色的轮廓


1058
00:36:48,746 --> 00:36:50,026
在按钮的深色背景中消失了


1059
00:36:51,226 --> 00:36:54,496
所以我们应该为深色外观


1060
00:36:54,496 --> 00:36:56,026
设计一个新的版本


1061
00:36:56,066 --> 00:36:58,046
我们再一次


1062
00:36:58,046 --> 00:36:59,866
求助于我们的朋友 也就是素材目录


1063
00:37:01,986 --> 00:37:04,126
添加一个


1064
00:37:04,126 --> 00:37:04,736
深色外观下的版本


1065
00:37:09,186 --> 00:37:10,746
现在看起来就好多了


1066
00:37:10,746 --> 00:37:13,586
深色的按钮和白色的轮廓


1067
00:37:13,586 --> 00:37:14,396
对比鲜明


1068
00:37:16,486 --> 00:37:18,226
这种方法对全彩图像来说非常棒


1069
00:37:18,896 --> 00:37:22,406
那对于这两个按钮来说呢


1070
00:37:22,956 --> 00:37:24,726
它们看起来


1071
00:37:24,726 --> 00:37:24,966
已经很棒了


1072
00:37:25,596 --> 00:37:26,726
我们不需要再做任何修改


1073
00:37:26,726 --> 00:37:27,906
但是为什么呢


1074
00:37:27,996 --> 00:37:28,806
为什么这两个没问题呢


1075
00:37:29,806 --> 00:37:32,986
这是因为 我们已经让这些图像


1076
00:37:33,176 --> 00:37:35,266
成为了 “Template Image（模板图像）”


1077
00:37:35,956 --> 00:37:39,216
向大家简单介绍一下


1078
00:37:39,266 --> 00:37:41,166
模板图像


1079
00:37:41,166 --> 00:37:42,326
大家可能之前不了解


1080
00:37:43,776 --> 00:37:45,116
要明白的是


1081
00:37:45,246 --> 00:37:47,296
每个像素的透明度


1082
00:37:47,296 --> 00:37:51,066
保持了原状


1083
00:37:51,066 --> 00:37:52,036
但系统会忽视颜色


1084
00:37:52,096 --> 00:37:54,386
你可以把初始图像


1085
00:37:54,386 --> 00:37:56,186
设置成任何颜色 没影响


1086
00:37:56,296 --> 00:37:57,556
只和透明度有关


1087
00:37:58,316 --> 00:37:59,946
图像可以是 BMP 格式或者 PDF 格式


1088
00:38:01,306 --> 00:38:02,716
这里有一个例子


1089
00:38:02,716 --> 00:38:04,646
macOS 的音量图像


1090
00:38:05,486 --> 00:38:08,046
原本的图像是黑色


1091
00:38:08,256 --> 00:38:09,626
在更大声波的区域


1092
00:38:09,626 --> 00:38:12,226
有一个部分透明区域


1093
00:38:14,196 --> 00:38:16,516
如果我们把这个图像 


1094
00:38:16,516 --> 00:38:19,866
放入 NSImageView


1095
00:38:19,866 --> 00:38:21,406
它会自动变成 secondaryLabelColor


1096
00:38:21,406 --> 00:38:24,296
可以看到在浅色模式中


1097
00:38:24,826 --> 00:38:26,446
是中灰色


1098
00:38:26,446 --> 00:38:27,076
在深色模式中灰色变浅了


1099
00:38:27,756 --> 00:38:30,426
并且部分透明区域


1100
00:38:30,426 --> 00:38:33,956
和背景的对比变弱了


1101
00:38:35,426 --> 00:38:36,606
使用模板图像的


1102
00:38:36,606 --> 00:38:37,786
另一个好处是


1103
00:38:37,786 --> 00:38:39,716
系统会自动获取按钮状态


1104
00:38:40,196 --> 00:38:43,746
当按钮被禁用时


1105
00:38:43,746 --> 00:38:45,176
图像会变暗


1106
00:38:45,176 --> 00:38:47,026
如果你使用模板图像


1107
00:38:47,026 --> 00:38:47,756
就可以自动解决


1108
00:38:53,566 --> 00:38:57,246
好 现在《Chameleon Wrangler》


1109
00:38:57,246 --> 00:38:58,246
看起来很棒


1110
00:38:58,276 --> 00:38:59,686
我们让颜色突出了


1111
00:38:59,686 --> 00:39:01,146
一些图像也突出了


1112
00:39:01,146 --> 00:39:02,986
但是对于这个 App


1113
00:39:02,986 --> 00:39:04,386
还有一些东西要讲


1114
00:39:04,386 --> 00:39:06,266
所以我想邀请 Taylor


1115
00:39:06,296 --> 00:39:08,216
到台上来


1116
00:39:08,216 --> 00:39:08,986
给大家介绍一下剩余部分


1117
00:39:10,126 --> 00:39:10,906
非常感谢大家


1118
00:39:11,516 --> 00:39:15,500
[ 掌声 ]


1119
00:39:18,736 --> 00:39:19,336
>> 谢谢你 Rachel


1120
00:39:20,296 --> 00:39:21,396
刚才 Rachel 已经介绍了


1121
00:39:21,396 --> 00:39:22,766
很多基本信息


1122
00:39:22,766 --> 00:39:24,526
关于我们如何使色彩和图像


1123
00:39:24,526 --> 00:39:25,726
在深色模式中有合适的响应


1124
00:39:26,356 --> 00:39:27,386
那么现在我们先来看一下


1125
00:39:27,386 --> 00:39:28,486
在 App 中


1126
00:39:28,486 --> 00:39:30,206
它们具体是如何被应用的


1127
00:39:30,376 --> 00:39:32,876
首先是 “Moodometer（情绪指示器）”


1128
00:39:32,876 --> 00:39:34,746
我们可以追踪一天中


1129
00:39:34,746 --> 00:39:36,046
Chloe 的情绪变化


1130
00:39:37,036 --> 00:39:37,846
你可以看到这里


1131
00:39:37,846 --> 00:39:39,076
弹出框的背景


1132
00:39:39,076 --> 00:39:41,126
已经自动为深色模式做出调整


1133
00:39:41,826 --> 00:39:43,706
但是背景上的


1134
00:39:43,866 --> 00:39:45,576
按钮内容


1135
00:39:45,576 --> 00:39:46,126
还是太暗了


1136
00:39:47,626 --> 00:39:48,456
看一下我们的素材目录


1137
00:39:48,456 --> 00:39:50,136
可以看到


1138
00:39:50,336 --> 00:39:52,296
我们已经在素材目录中


1139
00:39:52,296 --> 00:39:53,596
用颜色预先构建了


1140
00:39:53,596 --> 00:39:55,396
这些图像 


1141
00:39:55,396 --> 00:39:56,316
所以我们可以使用


1142
00:39:56,316 --> 00:39:57,776
Rachel 展示的方法


1143
00:39:57,776 --> 00:39:59,106
为这些图像


1144
00:39:59,106 --> 00:40:01,086
加一个颜色更浅的深色版本


1145
00:40:02,336 --> 00:40:05,016
但是 只改变这些图像的填充色


1146
00:40:05,016 --> 00:40:06,296
而保持它们原有的形状


1147
00:40:06,296 --> 00:40:08,136
看起来有些不好


1148
00:40:08,806 --> 00:40:10,206
可能还有更好地解决方案


1149
00:40:10,206 --> 00:40:13,016
在 Mojave 中


1150
00:40:13,156 --> 00:40:14,936
有一个 contentTintColor API


1151
00:40:15,976 --> 00:40:17,826
通过使用它


1152
00:40:17,826 --> 00:40:19,566
你可以得到一个模板图像 


1153
00:40:19,566 --> 00:40:21,106
并且可以使用 customTintColor


1154
00:40:21,106 --> 00:40:21,946
而不是默认的


1155
00:40:21,946 --> 00:40:22,906
根据外观变化的图像


1156
00:40:23,226 --> 00:40:24,666
它可以在任何出现图像的地方


1157
00:40:24,666 --> 00:40:27,716
被用作基础填充色


1158
00:40:27,716 --> 00:40:30,416
所以我们可以在 NSImageView 上


1159
00:40:30,416 --> 00:40:32,326
设置一个 contentTintColor


1160
00:40:32,426 --> 00:40:34,786
去给图像着色


1161
00:40:34,786 --> 00:40:36,316
或在 NSButton 上设置一个


1162
00:40:36,316 --> 00:40:36,616
去给图像和标题着色


1163
00:40:37,766 --> 00:40:39,226
现在我们来看一下


1164
00:40:39,226 --> 00:40:40,026
它的应用过程


1165
00:40:40,426 --> 00:40:41,486
第一步是


1166
00:40:41,486 --> 00:40:42,976
把它们转化成普通模板图像


1167
00:40:42,976 --> 00:40:45,026
记住要把渲染模式


1168
00:40:45,026 --> 00:40:47,306
设置成模板效果


1169
00:40:48,496 --> 00:40:49,426
现在再看一下《Chameleon Wrangler》


1170
00:40:49,426 --> 00:40:50,816
我们可以看到


1171
00:40:50,816 --> 00:40:52,316
这些图像有了一种


1172
00:40:52,316 --> 00:40:53,906
默认模板效果


1173
00:40:53,906 --> 00:40:55,786
在深色模式下很好看


1174
00:40:55,786 --> 00:40:56,896
下一步就是


1175
00:40:56,896 --> 00:40:57,926
应用这个颜色


1176
00:40:58,396 --> 00:41:00,426
我们可以直接把这个颜色


1177
00:41:00,426 --> 00:41:02,296
从素材中拖出来 


1178
00:41:02,296 --> 00:41:03,946
添加一个深色版本


1179
00:41:03,946 --> 00:41:05,096
然后把这些按钮的 contentTintColor


1180
00:41:05,096 --> 00:41:06,616
设置成刚才那个颜色


1181
00:41:06,616 --> 00:41:08,506
这个按钮


1182
00:41:08,506 --> 00:41:09,726
会根据系统是浅色模式


1183
00:41:09,726 --> 00:41:10,986
还是深色模式


1184
00:41:10,986 --> 00:41:11,716
自动选择


1185
00:41:11,716 --> 00:41:14,256
正确的变色


1186
00:41:14,256 --> 00:41:15,656
Rachel 还向我们展示了


1187
00:41:15,656 --> 00:41:18,306
很多系统色是如何


1188
00:41:18,306 --> 00:41:19,456
早就已经有了


1189
00:41:19,456 --> 00:41:20,926
自己的浅色和深色版本的


1190
00:41:20,926 --> 00:41:21,556
我们可以直接使用


1191
00:41:22,016 --> 00:41:24,646
比如我们可以直接使用


1192
00:41:24,776 --> 00:41:26,416
systemRed systemYellow


1193
00:41:26,416 --> 00:41:28,806
和 systemGreen


1194
00:41:28,806 --> 00:41:29,986
回到《Chameleon Wrangler》


1195
00:41:29,986 --> 00:41:31,626
我们可以看到真的很棒


1196
00:41:31,626 --> 00:41:34,196
背景上方的按钮都很突出


1197
00:41:35,836 --> 00:41:36,816
这项功能很酷的地方


1198
00:41:36,816 --> 00:41:39,086
不仅在于


1199
00:41:39,086 --> 00:41:41,306
我们可以得到一个很特殊的绿色


1200
00:41:41,306 --> 00:41:42,686
对于浅色模式和深色模式都可使用


1201
00:41:42,686 --> 00:41:44,686
而且还在于借助 contentTintColor API


1202
00:41:44,686 --> 00:41:46,496
应用于其上的系统效果


1203
00:41:46,496 --> 00:41:49,046
也根据模式外观发生改变


1204
00:41:49,926 --> 00:41:51,666
正如 Raymond 所说


1205
00:41:51,666 --> 00:41:52,856
在浅色模式下


1206
00:41:52,856 --> 00:41:54,316
在基础着色之上


1207
00:41:54,316 --> 00:41:55,086
有一个加深的效果


1208
00:41:55,686 --> 00:41:57,406
同时 在深色模式下


1209
00:41:57,406 --> 00:41:58,966
有一个提亮的效果


1210
00:42:00,016 --> 00:42:01,776
所有的这些效果


1211
00:42:01,776 --> 00:42:03,306
可以进一步个性化


1212
00:42:03,306 --> 00:42:06,266
以加强对比


1213
00:42:06,266 --> 00:42:07,566
同时不需要在 App 中做出任何改变


1214
00:42:07,916 --> 00:42:09,446
所以这个功能真的很棒


1215
00:42:09,446 --> 00:42:11,156
我们不需要一一专门设置


1216
00:42:11,156 --> 00:42:11,936
这 12 种颜色


1217
00:42:12,156 --> 00:42:13,226
我们只需要专门设定


1218
00:42:13,226 --> 00:42:14,786
一个颜色


1219
00:42:14,786 --> 00:42:16,046
然后因为动态系统色


1220
00:42:16,046 --> 00:42:17,766
和动态系统效果


1221
00:42:17,766 --> 00:42:19,586
我们就自动得到了所有的颜色


1222
00:42:21,896 --> 00:42:23,616
现在我们的情绪指示器


1223
00:42:23,616 --> 00:42:23,956
看起来很棒


1224
00:42:24,736 --> 00:42:25,946
接下来是


1225
00:42:25,946 --> 00:42:27,356
我们 App 中的另一个标签页


1226
00:42:27,356 --> 00:42:28,646
我们可以用它追踪


1227
00:42:28,646 --> 00:42:30,506
关于 Chloe 的重要信息


1228
00:42:30,506 --> 00:42:32,166
比如她压力多大


1229
00:42:32,166 --> 00:42:33,436
或者更重要的


1230
00:42:33,436 --> 00:42:34,386
她最喜欢哪一种莓


1231
00:42:35,476 --> 00:42:36,926
这里我们可以看到


1232
00:42:36,926 --> 00:42:38,226
已经很棒了


1233
00:42:38,226 --> 00:42:40,916
因为我们现在用的是常规的 Cocoa 控件


1234
00:42:41,096 --> 00:42:42,446
它可以自动调节


1235
00:42:42,446 --> 00:42:43,006
以适应深色模式


1236
00:42:44,316 --> 00:42:46,206
我们可以看到


1237
00:42:46,266 --> 00:42:47,256
它对强调色做出何种反应


1238
00:42:47,256 --> 00:42:48,896
Raymond 刚才介绍过 


1239
00:42:48,896 --> 00:42:50,876
打开系统偏好


1240
00:42:50,876 --> 00:42:52,336
把颜色设置成好看的变色龙条纹黄色


1241
00:42:52,336 --> 00:42:54,216
然后回到


1242
00:42:54,216 --> 00:42:55,466
《Chameleon Wrangler》


1243
00:42:56,596 --> 00:42:57,666
我们可以再次看到


1244
00:42:57,666 --> 00:42:59,436
内置控件


1245
00:42:59,436 --> 00:43:00,886
自动调整为黄色强调色


1246
00:43:00,886 --> 00:43:02,816
包括聚焦环的颜色


1247
00:43:02,926 --> 00:43:03,736
和高亮显示色


1248
00:43:04,986 --> 00:43:05,976
然而我们可以注意到


1249
00:43:05,976 --> 00:43:07,546
自定义标签栏依旧是蓝色


1250
00:43:07,546 --> 00:43:09,756
即便我们已经改变了强调色


1251
00:43:10,966 --> 00:43:12,366
因为这个蓝色对于我们的


1252
00:43:12,366 --> 00:43:13,636
App 来说并不重要


1253
00:43:13,636 --> 00:43:15,356
所以我们可能希望


1254
00:43:15,356 --> 00:43:18,716
它能跟随黄色强调色


1255
00:43:18,896 --> 00:43:20,136
正如 Rachel 刚才所说


1256
00:43:20,136 --> 00:43:21,876
我们有几种不同的颜色


1257
00:43:21,876 --> 00:43:23,786
会跟随用户的


1258
00:43:23,786 --> 00:43:24,896
强调色和高亮显示色选择


1259
00:43:25,876 --> 00:43:27,396
Mojave 中的新特点是


1260
00:43:27,396 --> 00:43:29,186
你可以直接用 controlAccentColor


1261
00:43:29,266 --> 00:43:31,166
模仿系统控件的强调色


1262
00:43:31,166 --> 00:43:34,536
比如说 弹出式按钮的边缘


1263
00:43:34,916 --> 00:43:36,386
默认的点按按钮


1264
00:43:36,386 --> 00:43:38,126
或者一个分段控件的选定分段


1265
00:43:39,616 --> 00:43:40,936
还有一个 selectedContentBackgroundColor


1266
00:43:40,936 --> 00:43:41,926
是指比如说


1267
00:43:41,926 --> 00:43:43,006
你在选定表格行


1268
00:43:43,006 --> 00:43:44,586
看到的背景


1269
00:43:44,586 --> 00:43:45,556
你可以用它引导


1270
00:43:45,556 --> 00:43:46,136
自定义选取


1271
00:43:47,426 --> 00:43:48,486
而 selectedTextBackgroundColor


1272
00:43:48,486 --> 00:43:50,616
指的是选定文本的背景颜色


1273
00:43:51,136 --> 00:43:53,606
回到我们的软件上


1274
00:43:53,606 --> 00:43:54,906
可以看到我们正在使用 systemBlueColor


1275
00:43:54,906 --> 00:43:56,506
作为这个自定义选项卡的选择


1276
00:43:56,506 --> 00:43:58,376
我们也可以


1277
00:43:58,376 --> 00:43:59,696
直接换过来


1278
00:43:59,696 --> 00:44:00,756
使用 controlAccentColor


1279
00:44:02,676 --> 00:44:04,046
关于自定义选项卡的下一个问题


1280
00:44:04,046 --> 00:44:05,516
有一点更微妙


1281
00:44:06,366 --> 00:44:07,956
如果我们把光标移过来


1282
00:44:08,056 --> 00:44:10,046
点击一下 可以看到


1283
00:44:10,046 --> 00:44:11,086
我们得到了一个变暗的效果


1284
00:44:11,086 --> 00:44:13,546
而不是深色模式应该有的


1285
00:44:13,546 --> 00:44:14,586
提亮的效果


1286
00:44:15,846 --> 00:44:16,986
这是因为我们


1287
00:44:16,986 --> 00:44:18,256
取了那个基础色


1288
00:44:18,256 --> 00:44:20,006
而且只对它应用了


1289
00:44:20,006 --> 00:44:21,856
恒定的 30% 变暗效果


1290
00:44:21,856 --> 00:44:23,116
使它会在浅色模式下


1291
00:44:23,116 --> 00:44:24,506
比较好看


1292
00:44:25,576 --> 00:44:27,356
与其这样做 我们更应该


1293
00:44:27,356 --> 00:44:28,666
描述这个颜色


1294
00:44:28,726 --> 00:44:30,976
被点按后的变化


1295
00:44:30,976 --> 00:44:33,726
那么这个语义化描述


1296
00:44:33,726 --> 00:44:35,316
不论是在浅色


1297
00:44:35,316 --> 00:44:36,176
还是深色模式下


1298
00:44:36,176 --> 00:44:37,416
就都会很准确


1299
00:44:37,416 --> 00:44:38,596
所以通过这种 Mojave 的 NSColor 的


1300
00:44:38,596 --> 00:44:41,546
全新系统效果 API


1301
00:44:41,546 --> 00:44:42,946
我们可以描述确切的语义


1302
00:44:43,836 --> 00:44:45,036
我们可以把基础色


1303
00:44:45,036 --> 00:44:46,806
当作 controlAccentColor


1304
00:44:46,806 --> 00:44:47,876
如果我们想要得到点击后的变体


1305
00:44:48,076 --> 00:44:49,656
它无论是在浅色模式


1306
00:44:49,746 --> 00:44:51,026
还是深色模式


1307
00:44:51,026 --> 00:44:52,246
都会呈现合适的颜色


1308
00:44:54,936 --> 00:44:56,316
我们 App 中还有


1309
00:44:56,316 --> 00:44:57,726
一个能看到


1310
00:44:57,836 --> 00:44:59,586
强调色的区域


1311
00:44:59,586 --> 00:45:01,076
就是图片浏览器


1312
00:45:01,076 --> 00:45:02,406
我们在图片被选择时


1313
00:45:02,406 --> 00:45:03,816
会画一个选择框


1314
00:45:04,356 --> 00:45:06,126
我们这里用的是


1315
00:45:06,226 --> 00:45:08,026
selectedContentBackgroundColor


1316
00:45:08,376 --> 00:45:09,576
它现在能根据用户


1317
00:45:09,576 --> 00:45:11,066
选择的强调色


1318
00:45:11,066 --> 00:45:12,056
自动调整了


1319
00:45:13,846 --> 00:45:14,696
让我们打开


1320
00:45:14,696 --> 00:45:15,986
这些照片中的一张


1321
00:45:15,986 --> 00:45:17,956
看看 Chloe 这张


1322
00:45:17,956 --> 00:45:18,336
又大又漂亮的照片


1323
00:45:19,056 --> 00:45:21,396
我们第一眼就注意到了


1324
00:45:21,396 --> 00:45:22,636
背景没有调成


1325
00:45:22,636 --> 00:45:24,436
深色模式


1326
00:45:25,066 --> 00:45:26,276
它依旧是浅色模式中的


1327
00:45:26,276 --> 00:45:28,256
半透明效果


1328
00:45:28,256 --> 00:45:29,106
像硬编码颜色一样


1329
00:45:30,916 --> 00:45:32,066
这种效果是


1330
00:45:32,066 --> 00:45:33,896
NSVisualEffectView 提供的


1331
00:45:33,926 --> 00:45:35,246
它提供了你看到的


1332
00:45:35,246 --> 00:45:36,616
整个系统的


1333
00:45:36,616 --> 00:45:37,026
半透明模糊素材


1334
00:45:37,186 --> 00:45:38,766
比如说这是一个侧边栏


1335
00:45:38,766 --> 00:45:40,236
模糊了桌面


1336
00:45:40,236 --> 00:45:41,736
还有它后面的其他窗口


1337
00:45:41,736 --> 00:45:44,886
还有一些东西比如说 标题栏


1338
00:45:44,886 --> 00:45:45,886
模糊了后面


1339
00:45:45,886 --> 00:45:47,066
滚动的内容


1340
00:45:47,966 --> 00:45:50,226
NSVisualEffectView


1341
00:45:50,226 --> 00:45:51,566
还可以使前景能够动态混合


1342
00:45:51,866 --> 00:45:53,636
Raymond 刚才说过这一点了


1343
00:45:53,636 --> 00:45:55,586
一个灰色系的颜色


1344
00:45:55,586 --> 00:45:57,206
再加上混合模式


1345
00:45:57,206 --> 00:45:58,846
就可以使它从背景中凸显出来


1346
00:45:59,826 --> 00:46:00,906
高级深色模式讨论会


1347
00:46:00,906 --> 00:46:01,756
将非常详细地介绍


1348
00:46:01,756 --> 00:46:03,036
你可以如何有效使用


1349
00:46:03,036 --> 00:46:04,366
那些混合模式


1350
00:46:06,686 --> 00:46:08,046
结果是很多地方


1351
00:46:08,046 --> 00:46:09,256
都自动得到了


1352
00:46:09,256 --> 00:46:10,676
模糊素材


1353
00:46:10,856 --> 00:46:12,916
举个例子 NSWindow 的每个标题栏


1354
00:46:12,916 --> 00:46:14,326
都会自动


1355
00:46:14,326 --> 00:46:16,006
有一个标题栏素材


1356
00:46:16,006 --> 00:46:17,706
显示在它后面的内容上


1357
00:46:18,496 --> 00:46:20,156
资源列表表格视图


1358
00:46:20,156 --> 00:46:21,756
侧边栏风格的分割视图项目


1359
00:46:22,046 --> 00:46:23,286
会自动得到一个侧边栏素材


1360
00:46:23,286 --> 00:46:26,166
显示在窗口后的内容上


1361
00:46:26,386 --> 00:46:29,436
对于自定义 UI 来说


1362
00:46:29,436 --> 00:46:30,616
我们也可以很轻松地


1363
00:46:30,616 --> 00:46:31,426
自己设置这些个性化效果


1364
00:46:32,136 --> 00:46:33,326
但是最重要的一点是


1365
00:46:33,326 --> 00:46:36,776
你选择展现哪些素材


1366
00:46:37,976 --> 00:46:39,406
我们有一些非语义化素材


1367
00:46:39,406 --> 00:46:41,256
比如硬编码颜色


1368
00:46:41,256 --> 00:46:43,126
只是显示素材的


1369
00:46:43,126 --> 00:46:44,536
原本视觉效果


1370
00:46:44,916 --> 00:46:46,256
而不是你想要展示的


1371
00:46:46,256 --> 00:46:47,126
视觉效果


1372
00:46:48,086 --> 00:46:49,536
它们不会自适应


1373
00:46:49,536 --> 00:46:50,786
深色模式


1374
00:46:50,786 --> 00:46:51,866
只会一直保持原有视觉效果不变


1375
00:46:53,066 --> 00:46:54,106
我们还有一些


1376
00:46:54,106 --> 00:46:55,486
语义化素材


1377
00:46:55,986 --> 00:46:57,346
它们可以让你描述


1378
00:46:57,346 --> 00:46:59,126
你想展示的个性化 UI


1379
00:46:59,256 --> 00:47:00,216
是什么类型的


1380
00:47:00,216 --> 00:47:02,226
比如说对于像自定义菜单


1381
00:47:02,226 --> 00:47:03,426
这样的 UI 你会想要用


1382
00:47:03,466 --> 00:47:04,296
菜单素材


1383
00:47:04,416 --> 00:47:06,196
这些素材不仅适用于深色模式


1384
00:47:06,196 --> 00:47:07,976
还保证了 


1385
00:47:07,976 --> 00:47:10,246
UI 可以一直和这些素材相匹配


1386
00:47:10,306 --> 00:47:11,556
即便是系统将来 


1387
00:47:11,556 --> 00:47:11,986
发生变化


1388
00:47:13,156 --> 00:47:14,236
这些有的之前就有


1389
00:47:14,236 --> 00:47:16,646
但是在 Mojave 中


1390
00:47:16,646 --> 00:47:17,966
我们又加了几种新的


1391
00:47:17,966 --> 00:47:19,346
确保真正量身定做


1392
00:47:19,346 --> 00:47:21,496
你的个性化 UI


1393
00:47:21,596 --> 00:47:24,936
以和它所需要的素材相匹配


1394
00:47:25,176 --> 00:47:26,506
回到我们这里的照片上来


1395
00:47:26,506 --> 00:47:27,516
可以看到我们刚才使用的是


1396
00:47:27,516 --> 00:47:28,706
mediumLight 素材


1397
00:47:29,046 --> 00:47:29,776
因为我们想要展现


1398
00:47:29,776 --> 00:47:31,496
QuickLook 那样的


1399
00:47:31,496 --> 00:47:32,426
弹出式窗口


1400
00:47:33,126 --> 00:47:34,296
我们其实可以直接


1401
00:47:34,296 --> 00:47:35,556
使用 popover 素材


1402
00:47:35,556 --> 00:47:37,206
然后得到我们


1403
00:47:37,206 --> 00:47:41,046
想要在深色模式中得到的效果


1404
00:47:41,266 --> 00:47:42,856
这并不是 UI 中唯一


1405
00:47:42,856 --> 00:47:45,076
我们想让独特素材


1406
00:47:45,076 --> 00:47:46,516
展现在背景中的地方


1407
00:47:46,516 --> 00:47:48,666
我们现在在图集背景中


1408
00:47:48,966 --> 00:47:50,146
展示的就是


1409
00:47:50,146 --> 00:47:51,596
Raymond 刚才说到的


1410
00:47:51,596 --> 00:47:52,916
桌面着色效果


1411
00:47:53,436 --> 00:47:54,306
这里混合了它后面


1412
00:47:54,306 --> 00:47:55,396
桌面背景的一点蓝色


1413
00:47:55,396 --> 00:47:57,146
制造了一种


1414
00:47:57,146 --> 00:47:58,486
视觉上非常和谐的结果


1415
00:47:59,516 --> 00:48:00,836
在一个更清晰明亮的背景之上


1416
00:48:00,836 --> 00:48:02,066
比如说这些美丽的花朵图片


1417
00:48:02,206 --> 00:48:03,686
我们就更容易看出来


1418
00:48:03,686 --> 00:48:04,236
这个效果


1419
00:48:06,316 --> 00:48:08,626
有三种颜色变体


1420
00:48:08,956 --> 00:48:10,806
和这些背景素材


1421
00:48:10,806 --> 00:48:11,866
有语义关联


1422
00:48:12,356 --> 00:48:13,436
分别是我们在通用窗口上


1423
00:48:13,436 --> 00:48:14,616
看到的 “Window Background（窗口背景）”


1424
00:48:14,616 --> 00:48:16,596
出现在“预览”或 “Keynote 讲演”的


1425
00:48:16,596 --> 00:48:18,456
文档后面的


1426
00:48:18,456 --> 00:48:19,676
“Under Page Background


1427
00:48:19,676 --> 00:48:20,906
（页面背景）”


1428
00:48:21,516 --> 00:48:23,726
以及可能最普遍的


1429
00:48:23,726 --> 00:48:25,146
“Content Background（内容背景）”素材


1430
00:48:25,726 --> 00:48:26,656
在浅色模式下它是白色


1431
00:48:26,656 --> 00:48:29,206
在深色模式下是深色


1432
00:48:30,166 --> 00:48:31,216
实际上在深色模式下


1433
00:48:31,216 --> 00:48:32,676
这些现在都是深色


1434
00:48:32,676 --> 00:48:34,306
而且带有


1435
00:48:34,366 --> 00:48:36,866
墙纸着色效果


1436
00:48:36,866 --> 00:48:37,766
好消息是


1437
00:48:37,816 --> 00:48:39,546
使用这些效果并不难


1438
00:48:39,776 --> 00:48:41,086
大部分情况下


1439
00:48:41,086 --> 00:48:42,396
使用系统视图


1440
00:48:42,396 --> 00:48:43,496
这些效果都是全自动实现的


1441
00:48:43,496 --> 00:48:45,076
举个例子


1442
00:48:45,076 --> 00:48:47,016
每个窗口的默认背景


1443
00:48:47,016 --> 00:48:49,116
都有内置的窗口背景素材


1444
00:48:50,316 --> 00:48:52,336
此外 可滚动的视图


1445
00:48:52,336 --> 00:48:54,946
比如说 NSCollectionView


1446
00:48:54,946 --> 00:48:57,016
或者 NSTableView


1447
00:48:57,016 --> 00:48:58,246
会自动加上


1448
00:48:58,246 --> 00:48:59,516
内置的内容背景素材


1449
00:49:00,776 --> 00:49:01,776
我们已经看到


1450
00:49:01,776 --> 00:49:02,826
整个系统的很多地方


1451
00:49:02,826 --> 00:49:04,196
其实可以通过


1452
00:49:04,196 --> 00:49:05,996
删除或覆盖这些视图


1453
00:49:05,996 --> 00:49:07,916
带有的多余的默认色


1454
00:49:08,296 --> 00:49:09,186
来提升对深色模式的支持


1455
00:49:10,486 --> 00:49:12,546
如果你想在个性化设置时


1456
00:49:12,606 --> 00:49:13,816
不使用这些视图带有的默认色


1457
00:49:13,816 --> 00:49:15,666
你可以自己


1458
00:49:15,666 --> 00:49:17,556
专门设置一套系统色


1459
00:49:17,626 --> 00:49:19,346
当作它们的背景色


1460
00:49:19,346 --> 00:49:20,926
以达到你正想要的


1461
00:49:20,926 --> 00:49:21,216
素材效果


1462
00:49:22,916 --> 00:49:24,446
但是需要注意的一点是


1463
00:49:24,446 --> 00:49:25,986
如果你想要


1464
00:49:25,986 --> 00:49:27,396
读取这些颜色的 RGB 值


1465
00:49:27,396 --> 00:49:29,166
它们并不会包括


1466
00:49:29,166 --> 00:49:29,946
桌面着色


1467
00:49:30,836 --> 00:49:31,796
这是因为


1468
00:49:31,796 --> 00:49:32,816
就像 Raymond 提到的


1469
00:49:32,816 --> 00:49:33,876
桌面着色是非常动态的


1470
00:49:34,306 --> 00:49:35,606
当你在屏幕上


1471
00:49:35,606 --> 00:49:36,956
到处移动窗口时


1472
00:49:36,956 --> 00:49:38,596
App 会自动同步变化


1473
00:49:38,596 --> 00:49:40,576
自己渲染


1474
00:49:40,576 --> 00:49:41,536
这可以在用户


1475
00:49:41,536 --> 00:49:43,456
移动窗口时


1476
00:49:43,456 --> 00:49:44,336
给他们带来很好的体验


1477
00:49:45,556 --> 00:49:46,886
现在我们回到《Chameleon Wrangler》


1478
00:49:46,886 --> 00:49:48,396
我们自动得到了


1479
00:49:48,396 --> 00:49:49,976
这个内容背景


1480
00:49:49,976 --> 00:49:51,226
因为我们只用了


1481
00:49:51,226 --> 00:49:52,006
一个原有的 NSCollectionView


1482
00:49:53,456 --> 00:49:55,006
在 “Vital（体征）”部分


1483
00:49:55,006 --> 00:49:56,196
NSWindow 窗口背景素材


1484
00:49:56,196 --> 00:49:57,466
显示出来了


1485
00:49:57,466 --> 00:49:58,996
因为没有什么不透明的东西盖住它


1486
00:50:00,186 --> 00:50:02,006
然而在 “Note（笔记）”部分


1487
00:50:02,326 --> 00:50:03,296
我们得到了这个很棒的


1488
00:50:03,296 --> 00:50:05,836
自定义固定界面


1489
00:50:05,836 --> 00:50:07,426
但这个浅灰色的背景


1490
00:50:07,426 --> 00:50:08,456
不适合深色模式


1491
00:50:08,456 --> 00:50:10,016
也没有对页面背景语义


1492
00:50:10,016 --> 00:50:11,096
做出调整


1493
00:50:11,576 --> 00:50:14,366
我们可以打开界面构建器


1494
00:50:14,366 --> 00:50:15,436
看一下我们在哪里设置


1495
00:50:15,436 --> 00:50:17,056
这个背景绘画视图


1496
00:50:17,056 --> 00:50:18,756
我们填充的确实是


1497
00:50:18,756 --> 00:50:19,976
自定义灰色


1498
00:50:21,006 --> 00:50:23,356
在界面构建器中


1499
00:50:23,356 --> 00:50:24,486
我们可以很快改变它


1500
00:50:24,486 --> 00:50:25,986
通过使用代表那个语义的


1501
00:50:25,986 --> 00:50:27,626
Under Page Background Color


1502
00:50:27,626 --> 00:50:28,626
我们立刻就能得到


1503
00:50:28,626 --> 00:50:30,696
想要的结果


1504
00:50:31,116 --> 00:50:32,286
看起来和深色模式下的


1505
00:50:32,286 --> 00:50:34,646
其他文档 App 非常一致


1506
00:50:34,646 --> 00:50:37,516
然而这里


1507
00:50:37,516 --> 00:50:38,636
比较突出的部分还有


1508
00:50:38,636 --> 00:50:40,156
静止区和文档区


1509
00:50:40,156 --> 00:50:42,376
浅色背景上的


1510
00:50:42,376 --> 00:50:43,036
深色前景色


1511
00:50:43,036 --> 00:50:45,276
因为这是一个“所见即所得”编辑器


1512
00:50:45,276 --> 00:50:47,206
我们作为


1513
00:50:47,336 --> 00:50:48,676
《Chameleon Wrangler》的用户


1514
00:50:48,676 --> 00:50:51,276
对于里面的色彩 图像和字体


1515
00:50:51,276 --> 00:50:53,876
有绝对的控制权


1516
00:50:53,876 --> 00:50:55,846
我们期望它能和浅色模式下的文档


1517
00:50:55,846 --> 00:50:57,356
保持一样


1518
00:50:58,566 --> 00:50:59,656
但是这里还有


1519
00:50:59,656 --> 00:51:01,406
一些小细节


1520
00:51:01,406 --> 00:51:01,696
看起来好像不大对


1521
00:51:01,696 --> 00:51:05,436
比如说 依旧是文档高亮色的


1522
00:51:05,436 --> 00:51:07,266
深色版本


1523
00:51:07,266 --> 00:51:08,546
自动修正气泡


1524
00:51:08,546 --> 00:51:09,846
也会自动呈现深色外观


1525
00:51:09,846 --> 00:51:11,376
这就和我们文档的


1526
00:51:11,376 --> 00:51:12,866
浅色模式冲突了


1527
00:51:13,986 --> 00:51:15,186
基本上我们想要


1528
00:51:15,186 --> 00:51:16,776
这个区域的所有东西


1529
00:51:16,776 --> 00:51:18,646
可以恢复到浅色模式


1530
00:51:19,146 --> 00:51:20,696
我们可以通过


1531
00:51:20,756 --> 00:51:22,066
NSAppearance 实现


1532
00:51:22,406 --> 00:51:23,636
我们发现 NSAppearance


1533
00:51:23,636 --> 00:51:24,636
正好可以


1534
00:51:24,636 --> 00:51:26,466
在这个深色模式下


1535
00:51:26,466 --> 00:51:27,786
提供深色和


1536
00:51:27,786 --> 00:51:29,306
浅色模式之间的


1537
00:51:29,306 --> 00:51:29,646
自动切换


1538
00:51:30,806 --> 00:51:31,746
你可以把 NSAppearance 抽象地理解为


1539
00:51:31,746 --> 00:51:33,396
一小组东西


1540
00:51:33,816 --> 00:51:35,526
包含你在整个系统看到的


1541
00:51:35,756 --> 00:51:39,176
所有的颜色


1542
00:51:39,176 --> 00:51:41,026
素材 图像和控件图案


1543
00:51:41,626 --> 00:51:44,176
现在当你的 App 想要


1544
00:51:44,176 --> 00:51:45,586
做一些类似


1545
00:51:45,586 --> 00:51:47,296
请求改变 labelColor 的事情时


1546
00:51:47,296 --> 00:51:48,476
它就会在现有的外观中


1547
00:51:48,476 --> 00:51:50,016
查找确切的


1548
00:51:50,016 --> 00:51:51,166
RGB 值是多少


1549
00:51:52,176 --> 00:51:53,526
处理控件图案


1550
00:51:53,526 --> 00:51:54,696
或者不同的素材效果


1551
00:51:54,696 --> 00:51:56,266
也是这样


1552
00:51:56,826 --> 00:51:58,996
我们知道在 Mojave 中


1553
00:51:58,996 --> 00:52:00,546
有一个新的深色外观


1554
00:52:00,546 --> 00:52:01,876
我们的设计者


1555
00:52:01,876 --> 00:52:03,976
精心设计了这种外观


1556
00:52:03,976 --> 00:52:05,406
并重新定制了整个系统的所有东西


1557
00:52:06,926 --> 00:52:07,886
当系统在深色模式下运行时


1558
00:52:07,886 --> 00:52:09,416
深色外观


1559
00:52:09,416 --> 00:52:10,586
会应用在你的 App 上


1560
00:52:10,586 --> 00:52:11,916
而不会让 App


1561
00:52:11,916 --> 00:52:13,306
保持浅色外观


1562
00:52:13,406 --> 00:52:14,776
所以当 labelColor 开始绘制时


1563
00:52:14,776 --> 00:52:16,376
在深色模式下


1564
00:52:16,376 --> 00:52:18,036
它会参考白色值


1565
00:52:18,076 --> 00:52:19,146
而在浅色模式下


1566
00:52:19,146 --> 00:52:19,866
它会参考更深的颜色值


1567
00:52:20,716 --> 00:52:21,666
对于所有的那些素材


1568
00:52:21,666 --> 00:52:22,526
这都是适用的


1569
00:52:23,006 --> 00:52:24,916
这些不是系统中


1570
00:52:25,006 --> 00:52:26,376
仅有的素材


1571
00:52:26,376 --> 00:52:27,856
这些也并不是系统中


1572
00:52:27,856 --> 00:52:28,836
仅有的外观


1573
00:52:29,296 --> 00:52:30,466
还有高对比外观


1574
00:52:30,466 --> 00:52:32,216
当打开辅助功能


1575
00:52:32,216 --> 00:52:33,486
开启高对比度模式时


1576
00:52:33,486 --> 00:52:35,046
高对比度外观


1577
00:52:35,046 --> 00:52:36,266
就会被应用到


1578
00:52:36,266 --> 00:52:36,666
你的 App 中


1579
00:52:36,726 --> 00:52:38,906
实际上还有很多其他的外观


1580
00:52:39,316 --> 00:52:40,026
有 Vibrancy 外观


1581
00:52:40,026 --> 00:52:42,366
它可以完全重新设定


1582
00:52:42,366 --> 00:52:44,536
出现在侧边栏


1583
00:52:44,536 --> 00:52:45,416
和标题栏上的所有颜色


1584
00:52:45,946 --> 00:52:48,046
高级深色模式讨论会


1585
00:52:48,046 --> 00:52:49,106
将进一步介绍


1586
00:52:49,106 --> 00:52:50,156
你可以如何


1587
00:52:50,156 --> 00:52:51,746
有效地使用


1588
00:52:51,746 --> 00:52:53,216
出自 Vibrancy 外观的素材


1589
00:52:53,216 --> 00:52:54,336
让它们凸显出来


1590
00:52:55,986 --> 00:52:59,706
现在在默认模式下


1591
00:52:59,706 --> 00:53:01,196
App 的外观会遵循


1592
00:53:01,196 --> 00:53:01,686
系统外观


1593
00:53:02,336 --> 00:53:03,386
然而你可以任意


1594
00:53:03,386 --> 00:53:04,536
设置外观属性


1595
00:53:04,536 --> 00:53:05,706
来有针对性地


1596
00:53:05,706 --> 00:53:06,076
把它覆盖掉


1597
00:53:06,496 --> 00:53:08,196
这里有在浅色模式和深色模式下的


1598
00:53:08,196 --> 00:53:09,496
《Chameleon Wrangler》


1599
00:53:10,306 --> 00:53:11,536
可以看到现在它们正遵循系统


1600
00:53:11,536 --> 00:53:12,956
但是当我们把外观设置成


1601
00:53:12,956 --> 00:53:14,066
一直是 darkAqua


1602
00:53:14,066 --> 00:53:15,716
我们可以看到


1603
00:53:15,716 --> 00:53:16,876
它一直是深色外观


1604
00:53:17,716 --> 00:53:19,326
相反的情况


1605
00:53:19,326 --> 00:53:21,266
也同样适用于浅色模式


1606
00:53:21,266 --> 00:53:22,246
当然设置回 nil


1607
00:53:22,246 --> 00:53:23,756
就会恢复到默认状态


1608
00:53:23,756 --> 00:53:25,926
和系统保持一致


1609
00:53:27,746 --> 00:53:28,996
现在看了那么多 App


1610
00:53:29,036 --> 00:53:30,766
在深色模式下的运行情况


1611
00:53:30,766 --> 00:53:32,296
你一定很想


1612
00:53:32,296 --> 00:53:33,916
尝试让你的 App


1613
00:53:34,216 --> 00:53:35,466
一直保持深色


1614
00:53:35,466 --> 00:53:36,446
因为真的很好看


1615
00:53:37,586 --> 00:53:39,246
但是正如 Raymond 所说


1616
00:53:39,246 --> 00:53:40,666
你要记住


1617
00:53:40,666 --> 00:53:42,136
什么 App 适合


1618
00:53:42,136 --> 00:53:43,686
一直处于深色模式


1619
00:53:44,336 --> 00:53:45,586
通常来说


1620
00:53:45,586 --> 00:53:47,326
以媒体为核心的 App


1621
00:53:47,326 --> 00:53:49,036
比如 “QuickTime Player”


1622
00:53:49,036 --> 00:53:50,446
或者专业的


1623
00:53:50,446 --> 00:53:51,766
对颜色要求很高的工作流 App


1624
00:53:51,766 --> 00:53:53,146
这些软件需要去除


1625
00:53:53,146 --> 00:53:54,546
内容后的所有光线


1626
00:53:55,586 --> 00:53:56,476
简单来说


1627
00:53:56,476 --> 00:53:58,356
取决于用户自身需求


1628
00:53:59,546 --> 00:54:00,536
也就是说


1629
00:54:00,536 --> 00:54:01,506
这是个系统偏好设置


1630
00:54:01,716 --> 00:54:02,926
你们中的一些人


1631
00:54:02,926 --> 00:54:04,086
可能早就通过设置 App 内偏好设置


1632
00:54:04,086 --> 00:54:05,476
在 App 中使用了深色主题


1633
00:54:05,526 --> 00:54:06,796
所以你要做的第一步


1634
00:54:06,876 --> 00:54:07,916
是要关联系统偏好


1635
00:54:07,916 --> 00:54:10,156
这样在使用系统的时候


1636
00:54:10,156 --> 00:54:11,426
也会一直是


1637
00:54:11,426 --> 00:54:12,786
深色模式


1638
00:54:13,366 --> 00:54:15,056
在一些模棱两可的情况下


1639
00:54:15,056 --> 00:54:16,286
如 Raymond 刚才提到的


1640
00:54:16,286 --> 00:54:17,356
我们还需要一些附加的


1641
00:54:17,356 --> 00:54:18,566
软件内偏好设置


1642
00:54:18,566 --> 00:54:20,296
比如“邮件”那个例子


1643
00:54:20,296 --> 00:54:21,606
但是大部分情况下


1644
00:54:21,606 --> 00:54:23,456
系统偏好应该就是


1645
00:54:23,456 --> 00:54:23,706
用户自己的选择


1646
00:54:23,706 --> 00:54:26,466
如果你确实确定了


1647
00:54:26,516 --> 00:54:27,876
你的 App 要一直是深色的


1648
00:54:28,096 --> 00:54:29,276
记住不要在


1649
00:54:29,276 --> 00:54:30,486
整个窗口上使用


1650
00:54:30,486 --> 00:54:31,926
Vibrant Dark 外观


1651
00:54:31,926 --> 00:54:33,196
因为它不适合


1652
00:54:33,196 --> 00:54:35,416
App 窗口上的不透明区域


1653
00:54:35,416 --> 00:54:38,266
只适用于侧边栏


1654
00:54:39,316 --> 00:54:40,226
如果你想让它


1655
00:54:40,226 --> 00:54:41,866
一直处于深色状态


1656
00:54:41,866 --> 00:54:43,746
就使用 Dark Aqua 外观


1657
00:54:44,596 --> 00:54:46,096
此外 为了


1658
00:54:46,096 --> 00:54:47,626
让整个窗口保持一致


1659
00:54:47,626 --> 00:54:49,046
你可以在单独窗口


1660
00:54:49,046 --> 00:54:50,276
或者视图范围中进行设置


1661
00:54:50,626 --> 00:54:51,826
这将会被其包含的


1662
00:54:51,866 --> 00:54:52,856
所有视图所继承


1663
00:54:53,626 --> 00:54:55,086
比如说这里


1664
00:54:55,086 --> 00:54:56,506
我们设置侧边栏


1665
00:54:56,506 --> 00:54:58,736
一直是 darkAqua 外观


1666
00:54:58,736 --> 00:54:59,506
如果我们想体验一下


1667
00:54:59,506 --> 00:55:00,176
刚才说的情况


1668
00:55:00,596 --> 00:55:01,966
里面所有的文本和图像


1669
00:55:01,966 --> 00:55:03,646
都有了一样的深色风格


1670
00:55:03,646 --> 00:55:05,946
我们也可以通过这种方式


1671
00:55:05,946 --> 00:55:07,356
解决之前


1672
00:55:07,356 --> 00:55:08,916
文本区域遇到的问题


1673
00:55:09,876 --> 00:55:11,786
我们真正想得到的效果是


1674
00:55:11,786 --> 00:55:13,316
让整个文档区域


1675
00:55:13,386 --> 00:55:14,486
保持浅色外观


1676
00:55:14,486 --> 00:55:16,086
所以通过设置成


1677
00:55:16,086 --> 00:55:17,536
lightAqua 外观


1678
00:55:17,536 --> 00:55:18,406
我们可以确保文本的


1679
00:55:18,406 --> 00:55:19,826
高亮颜色


1680
00:55:19,826 --> 00:55:21,426
是正确的


1681
00:55:21,426 --> 00:55:22,466
还要保证自动改正气泡


1682
00:55:22,676 --> 00:55:24,556
也继承了浅色的外观


1683
00:55:26,606 --> 00:55:27,546
除了可以得到


1684
00:55:27,546 --> 00:55:28,756
非常酷的效果


1685
00:55:28,756 --> 00:55:30,426
还可能导致


1686
00:55:30,426 --> 00:55:31,966
难以调试的情况


1687
00:55:31,966 --> 00:55:34,386
比如这里的 tableView 中


1688
00:55:34,386 --> 00:55:35,336
我们用的是


1689
00:55:35,336 --> 00:55:36,656
vibrantLight 外观


1690
00:55:36,656 --> 00:55:38,546
在浅色模式下


1691
00:55:38,546 --> 00:55:39,786
看起来很棒


1692
00:55:39,786 --> 00:55:41,366
它已经继承了


1693
00:55:41,366 --> 00:55:43,546
vibrantLight 外观


1694
00:55:43,546 --> 00:55:44,806
但在深色模式下


1695
00:55:44,806 --> 00:55:46,586
问题就很明显了


1696
00:55:47,226 --> 00:55:48,426
我们看到表格视图的


1697
00:55:48,426 --> 00:55:49,866
文本和图像


1698
00:55:49,866 --> 00:55:50,876
同样使用了


1699
00:55:50,876 --> 00:55:52,636
vibrantLight 外观


1700
00:55:52,636 --> 00:55:53,936
在深色背景上


1701
00:55:53,936 --> 00:55:54,356
看起来很糟


1702
00:55:54,356 --> 00:55:56,386
大部分情况下


1703
00:55:56,386 --> 00:55:57,516
我们想移除这些


1704
00:55:57,516 --> 00:55:59,126
特定的覆盖区域


1705
00:55:59,186 --> 00:56:00,776
我们不想在这些地方


1706
00:56:00,776 --> 00:56:01,986
一直保持浅色模式


1707
00:56:03,426 --> 00:56:04,416
这种情况同样会发生在


1708
00:56:04,416 --> 00:56:06,116
界面构建器中


1709
00:56:06,116 --> 00:56:07,606
在 “Attributes Inspector（属性检查器）” 


1710
00:56:07,606 --> 00:56:09,196
的最下方 我们不小心


1711
00:56:09,196 --> 00:56:11,006
覆盖了边框视图


1712
00:56:11,156 --> 00:56:12,656
使它一直处于


1713
00:56:12,656 --> 00:56:14,696
lightAqua 外观


1714
00:56:14,696 --> 00:56:15,856
在这里解决方法很简单


1715
00:56:15,856 --> 00:56:18,796
只需要把它调回 “Inherited（继承）”


1716
00:56:18,796 --> 00:56:20,196
这样就可以确保


1717
00:56:20,196 --> 00:56:21,786
打开的时候是深色模式


1718
00:56:21,786 --> 00:56:23,786
所有一定要


1719
00:56:23,786 --> 00:56:24,736
检查所有这些地方


1720
00:56:26,176 --> 00:56:28,476
现在《Chameleon Wrangler》


1721
00:56:28,476 --> 00:56:29,956
在深色模式下


1722
00:56:29,956 --> 00:56:30,686
看起来不错


1723
00:56:31,896 --> 00:56:33,226
但是我们还没提到过


1724
00:56:33,226 --> 00:56:35,546
到现在为止


1725
00:56:35,686 --> 00:56:37,366
我们还没有专门为深色模式


1726
00:56:37,566 --> 00:56:38,876
写过一行代码


1727
00:56:40,116 --> 00:56:41,436
要想很好地使用深色模式


1728
00:56:41,436 --> 00:56:42,556
你需要做出的变化是


1729
00:56:42,556 --> 00:56:44,706
用语义化的方式


1730
00:56:44,706 --> 00:56:46,756
来表达想法


1731
00:56:46,756 --> 00:56:49,006
而不是字面上的


1732
00:56:49,306 --> 00:56:52,926
比如说


1733
00:56:52,926 --> 00:56:54,156
这一系列的改变


1734
00:56:54,156 --> 00:56:56,686
让我们的 App


1735
00:56:56,746 --> 00:56:58,966
不仅在深色模式下看起来很棒


1736
00:56:58,966 --> 00:57:00,386
在浅色模式下也不错


1737
00:57:00,786 --> 00:57:01,976
可以为强调色添加支持


1738
00:57:01,976 --> 00:57:04,616
还有让我们的标签色


1739
00:57:04,616 --> 00:57:06,146
和系统的其他地方更加一致


1740
00:57:07,436 --> 00:57:09,246
并且 这些改变


1741
00:57:09,246 --> 00:57:11,196
不仅要适用于


1742
00:57:11,196 --> 00:57:13,446
深色模式


1743
00:57:13,446 --> 00:57:15,146
同时还要支持


1744
00:57:15,146 --> 00:57:16,906
辅助功能设置的


1745
00:57:17,066 --> 00:57:18,056
高对比模式


1746
00:57:18,146 --> 00:57:20,916
重述一遍


1747
00:57:20,916 --> 00:57:22,436
这些步骤


1748
00:57:22,436 --> 00:57:24,166
第一步是使用 Xcode 10


1749
00:57:24,166 --> 00:57:27,636
关联 10.14 SDK


1750
00:57:27,636 --> 00:57:29,536
对于一些


1751
00:57:29,536 --> 00:57:30,966
早就用系统控件和系统色的 App


1752
00:57:30,966 --> 00:57:34,026
只需要这一步


1753
00:57:34,166 --> 00:57:35,476
只需一步就可以使它


1754
00:57:35,476 --> 00:57:36,306
在深色模式下变得好看


1755
00:57:36,846 --> 00:57:38,646
对于其他的


1756
00:57:38,646 --> 00:57:40,536
下一步是审核我们的 App


1757
00:57:40,536 --> 00:57:42,056
看看是否使用静态色


1758
00:57:42,736 --> 00:57:44,506
非模板图像


1759
00:57:44,666 --> 00:57:46,376
和非语义化的素材


1760
00:57:46,376 --> 00:57:47,526
并把它们替换成合适的


1761
00:57:47,526 --> 00:57:51,276
比如使用系统色 语义化的素材


1762
00:57:51,276 --> 00:57:53,216
或者在一些情况下


1763
00:57:53,216 --> 00:57:54,686
在个性化素材目录中


1764
00:57:54,686 --> 00:57:55,686
定义颜色或者图像


1765
00:57:56,506 --> 00:57:57,416
还要再次强调一点


1766
00:57:57,416 --> 00:57:58,326
一定要注意有没有


1767
00:57:58,326 --> 00:58:00,216
意外的外观覆盖


1768
00:58:01,676 --> 00:58:02,676
高级深色模式讨论会


1769
00:58:02,676 --> 00:58:03,636
将进一步介绍更多细节


1770
00:58:03,636 --> 00:58:07,636
包括如何正确使用 NSAppearance


1771
00:58:07,636 --> 00:58:09,376
如何在 NSVisualEffectView 中


1772
00:58:09,456 --> 00:58:11,426
做个性化绘制和效果


1773
00:58:11,426 --> 00:58:12,526
如何确保你在深色模式下


1774
00:58:12,526 --> 00:58:13,716
绘制个性化视图时


1775
00:58:13,716 --> 00:58:15,996
每一步都是正确的


1776
00:58:16,386 --> 00:58:19,076
还有一些关于


1777
00:58:19,076 --> 00:58:20,146
使用视图调试器和界面构建器的建议技巧


1778
00:58:20,146 --> 00:58:21,396
可以很好地


1779
00:58:21,396 --> 00:58:21,566
帮助你改进软件


1780
00:58:22,186 --> 00:58:24,136
我们知道你们中的大部分人


1781
00:58:24,136 --> 00:58:25,906
和你们 App 的粉丝


1782
00:58:25,906 --> 00:58:26,776
想尽快的使用


1783
00:58:26,776 --> 00:58:28,006
深色模式


1784
00:58:28,006 --> 00:58:29,696
所以我们想确保


1785
00:58:29,696 --> 00:58:30,806
你可以使用这个功能


1786
00:58:30,806 --> 00:58:32,336
同时不牺牲


1787
00:58:32,366 --> 00:58:32,736
向后兼容的空间


1788
00:58:33,016 --> 00:58:34,716
总的来说


1789
00:58:34,716 --> 00:58:35,846
这里面的很多特色功能


1790
00:58:35,886 --> 00:58:37,866
都可以使用一年或更久


1791
00:58:37,866 --> 00:58:38,876
高级深色模式讨论会


1792
00:58:38,876 --> 00:58:39,856
会更详细地介绍


1793
00:58:39,856 --> 00:58:40,486
如何能使用更长时间


1794
00:58:41,096 --> 00:58:44,266
我们有几个 Cocoa 实验室


1795
00:58:44,266 --> 00:58:45,226
但是我还是想指出


1796
00:58:45,226 --> 00:58:46,356
深色模式实验室


1797
00:58:46,356 --> 00:58:47,746
除了提供工程支持


1798
00:58:48,196 --> 00:58:49,416
Raymond 


1799
00:58:49,416 --> 00:58:50,446
和设计团队的其他成员


1800
00:58:50,446 --> 00:58:51,896
也会帮忙解答


1801
00:58:51,896 --> 00:58:52,686
任何设计问题


1802
00:58:52,746 --> 00:58:54,066
这真的是一个很特殊的机会


1803
00:58:54,066 --> 00:58:55,996
我建议大家去看一看


1804
00:58:55,996 --> 00:58:58,826
谢谢大家一直待到 6 点钟


1805
00:58:58,826 --> 00:59:01,246
希望大家能享受在 WWDC 剩下的时光


1806
00:59:02,516 --> 00:59:08,650
[ 掌声 ]

