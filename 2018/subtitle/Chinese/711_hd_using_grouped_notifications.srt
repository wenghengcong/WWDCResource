1
00:00:16,950 --> 00:00:21,622 line:0
（通知群组的使用 演讲711）


2
00:00:23,557 --> 00:00:25,893 line:-1
谢谢 下午好 欢迎


3
00:00:26,260 --> 00:00:27,394 line:-1
我叫Michele


4
00:00:27,461 --> 00:00:30,097 line:-1
在iOS用户通知团队工作


5
00:00:31,532 --> 00:00:34,735 line:-2
几分钟前
同事Kritarth和Teja


6
00:00:34,801 --> 00:00:36,737 line:-1
向你介绍了群组通知


7
00:00:37,037 --> 00:00:41,808 line:-1
现在我们将更详细地


8
00:00:41,875 --> 00:00:43,143 line:-1
探讨这个功能


9
00:00:43,210 --> 00:00:46,613 line:-2
我们将学习如何使用
如何提高它的效率


10
00:00:47,014 --> 00:00:50,551 line:-1
以及如何使其更有条理


11
00:00:52,719 --> 00:00:55,455 line:-1
首先我们简要概述一下


12
00:00:55,522 --> 00:00:56,523 line:-1
该功能的工作原理


13
00:00:56,590 --> 00:00:59,193 line:-1
以及UI的各部分如何协调


14
00:00:59,693 --> 00:01:02,963 line:-2
然后我们来看看默认分组
及app分组


15
00:01:03,330 --> 00:01:07,234 line:-1
我们将了解如何创建自定义通知群组


16
00:01:07,301 --> 00:01:11,171 line:-1
以便你根据app内容调整群组


17
00:01:12,573 --> 00:01:14,274 line:-1
最后 我们将学习


18
00:01:14,341 --> 00:01:17,444 line:-2
如何为你的新通知群组
创建切题的摘要


19
00:01:21,481 --> 00:01:24,818 line:-1
我们先简要介绍一下该功能的UI


20
00:01:26,553 --> 00:01:31,291 line:-1
通知群组收集不同通知


21
00:01:31,358 --> 00:01:33,927 line:-1
并将它们分组排一个小堆栈中


22
00:01:34,294 --> 00:01:37,664 line:-1
这样使Notification Center更有条理


23
00:01:37,731 --> 00:01:39,600 line:-1
并且对用户更高效


24
00:01:39,666 --> 00:01:42,569 line:-1
这样用户可以同时看到更多通知


25
00:01:42,636 --> 00:01:46,840 line:-1
而不会被任何全屏的app挡住


26
00:01:46,907 --> 00:01:48,642 line:-1
从而看不到一些内容


27
00:01:50,611 --> 00:01:54,047 line:-1
每个通知群组都会在其顶部


28
00:01:54,114 --> 00:01:56,416 line:-1
显示本组的最新通知


29
00:01:56,683 --> 00:01:59,052 line:-1
我们将此称为主通知


30
00:02:00,287 --> 00:02:03,924 line:-2
主通知下方
每个组会显示一个简短的摘要


31
00:02:03,991 --> 00:02:05,926 line:-1
提供一些


32
00:02:05,993 --> 00:02:08,829 line:-1
关于组中包含的其他通知的细节


33
00:02:09,096 --> 00:02:14,468 line:-1
提供一个组内通知总数


34
00:02:14,535 --> 00:02:19,306 line:-1
有时还有有关通知内容的详细信息


35
00:02:22,643 --> 00:02:26,013 line:-1
通知群组还有助于通知分类


36
00:02:26,079 --> 00:02:27,948 line:-1
例如 只需轻轻一滑


37
00:02:28,015 --> 00:02:31,552 line:-1
你可以清除该组中的所有通知


38
00:02:31,618 --> 00:02:32,719 line:-1
全部清除它们


39
00:02:33,987 --> 00:02:36,823 line:-1
同样容易的是扩展群组


40
00:02:36,890 --> 00:02:40,460 line:-2
查看内部的所有通知
并一次阅读其中一条通知


41
00:02:40,527 --> 00:02:42,396 line:-1
也许清除一条


42
00:02:42,729 --> 00:02:45,666 line:-1
当完成后 你可以清除所有通知


43
00:02:45,732 --> 00:02:48,402 line:-1
用顶部的组按键 清除所有组内通知


44
00:02:52,172 --> 00:02:57,978 line:-1
这是对该功能的一个非常简短的概述


45
00:02:58,045 --> 00:03:01,481 line:-1
让你熟悉对UI的不同部分和术语


46
00:03:02,015 --> 00:03:06,119 line:-2
现在我们看看这些群组如何运作
以及如何创建它们


47
00:03:07,521 --> 00:03:09,790 line:-1
默认行为是app分组


48
00:03:10,591 --> 00:03:13,961 line:-1
每个app都有自己的群组


49
00:03:14,027 --> 00:03:16,730 line:-2
来自该app的所有通知
都集中到该组


50
00:03:17,197 --> 00:03:19,700 line:-1
如果你不作任何操作就是这个设定


51
00:03:19,766 --> 00:03:25,606 line:-2
你会在不采用任何新API的情况下
继续发送通知


52
00:03:27,541 --> 00:03:32,279 line:-2
许多情况下 app分组就足够了
而且效果非常好


53
00:03:32,346 --> 00:03:36,016 line:-1
例如 在播客app


54
00:03:36,083 --> 00:03:41,889 line:-2
所有通知同属一组
因为播客发的通知非常类似


55
00:03:41,989 --> 00:03:45,692 line:-1
它们是节目新剧集的通知


56
00:03:46,059 --> 00:03:49,596 line:-1
所以 不存在有的具体通知更有意思


57
00:03:49,663 --> 00:03:52,900 line:-1
或更重要 而需要作不同的显示


58
00:03:55,002 --> 00:03:59,072 line:-2
刚才说过 我们可以轻松点击群组
扩展群组


59
00:03:59,139 --> 00:04:01,275 line:-1
并查看该组内的详细信息


60
00:04:06,513 --> 00:04:10,884 line:-2
所以 app分组很好
它使通知更有条理


61
00:04:10,951 --> 00:04:13,887 line:-2
使Notification Center
更紧凑易用


62
00:04:14,454 --> 00:04:18,392 line:-1
但许多app有更特别的内容


63
00:04:18,458 --> 00:04:20,827 line:-1
它们可能需要不同的组织方式


64
00:04:20,894 --> 00:04:23,797 line:-1
使通知更有效率


65
00:04:24,731 --> 00:04:25,632 line:-1
据此


66
00:04:25,699 --> 00:04:27,301 line:-1
我们可以创建自定义分组


67
00:04:27,968 --> 00:04:30,537 line:-1
在这场讨论中 我们将首先看看


68
00:04:30,604 --> 00:04:34,341 line:-1
用于为通知创建自定义组的API


69
00:04:34,842 --> 00:04:39,680 line:-2
然后我们看一下iOS 12中的
一些app示例


70
00:04:41,014 --> 00:04:43,917 line:-1
探索这些app采用的一些模式


71
00:04:43,984 --> 00:04:47,221 line:-1
以及它们在用户可见的内容


72
00:04:47,287 --> 00:04:49,590 line:-1
以及群组涵盖内容


73
00:04:49,656 --> 00:04:52,092 line:-1
之间如何寻找平衡


74
00:04:52,159 --> 00:04:55,462 line:-1
以帮助Notification Center的组织


75
00:04:57,764 --> 00:05:01,969 line:-1
这就是为你的app创建群组的方式


76
00:05:02,369 --> 00:05:06,373 line:-2
你只需在通知内容中
设置自定义线程标识符


77
00:05:08,375 --> 00:05:09,843 line:-1
完成此操作后


78
00:05:09,910 --> 00:05:13,380 line:-2
你使用相同线程标识符
发送的所有通知


79
00:05:13,747 --> 00:05:16,984 line:-2
将在Notification Center
组合在一起


80
00:05:18,952 --> 00:05:20,988 line:-1
线程标识符可以是任何字符串


81
00:05:21,922 --> 00:05:23,457 line:-1
用什么标识都没关系


82
00:05:23,891 --> 00:05:26,326 line:-1
所有通知都会据此组合在一起


83
00:05:26,827 --> 00:05:28,829 line:-1
你只需要为其独特命名


84
00:05:28,896 --> 00:05:31,832 line:-2
你只需要一个唯一的字符串
作为群组标识符


85
00:05:32,933 --> 00:05:34,067 line:-1
这就行了


86
00:05:34,134 --> 00:05:36,603 line:-1
你为通知创建了一个群组


87
00:05:37,571 --> 00:05:40,908 line:-1
但鉴于它如此简单


88
00:05:41,642 --> 00:05:44,811 line:-1
我们需要注意如何创建这些组


89
00:05:46,346 --> 00:05:49,183 line:-1
而且如果你熟悉通知API


90
00:05:49,650 --> 00:05:51,885 line:-1
你会注意到这不是一个新的API


91
00:05:51,952 --> 00:05:55,222 line:-1
这是前期iOS版本中引入的API


92
00:05:55,289 --> 00:05:58,492 line:-1
因此 它已经存在于当前的iOS中


93
00:05:58,959 --> 00:06:03,897 line:-2
过去我们介绍了丰富的通知
和私人通知


94
00:06:04,231 --> 00:06:06,333 line:-1
所以 如果你已经采用了这个API


95
00:06:06,867 --> 00:06:10,337 line:-2
以支持以前iOS版本中的
这两个功能


96
00:06:10,404 --> 00:06:14,074 line:-2
你的通知已经在iOS 12中
进行分组


97
00:06:15,409 --> 00:06:18,078 line:-1
你可能想要复习群组的创建方式


98
00:06:18,145 --> 00:06:20,480 line:-1
因为现在API的上下文有点变化


99
00:06:20,781 --> 00:06:24,117 line:-1
所以稍微调整一下可能会更好


100
00:06:26,119 --> 00:06:29,056 line:-2
在这个例子中
你看到了如何创建一个线程


101
00:06:29,122 --> 00:06:31,558 line:-1
在本地通知上设置线程标识符


102
00:06:32,726 --> 00:06:36,663 line:-2
你可以在推送有效负载上
设置推送通知


103
00:06:42,336 --> 00:06:47,140 line:-2
好 现在让我们来看看
iOS 12中的几个例子


104
00:06:48,442 --> 00:06:52,112 line:-2
在我们看这些例子时
请记住最重要的一点


105
00:06:52,179 --> 00:06:54,348 line:-1
即通知分组的目标


106
00:06:54,982 --> 00:07:01,722 line:-2
通过对通知进行分组
我们希望提高通知效率


107
00:07:01,788 --> 00:07:05,025 line:-2
并改进
Notification Center的组织


108
00:07:05,359 --> 00:07:09,096 line:-1
你可能熟悉这种情况


109
00:07:09,162 --> 00:07:10,531 line:-1
某个app发送了许多通知


110
00:07:10,597 --> 00:07:12,366 line:-1
也许你在app里聊天


111
00:07:12,933 --> 00:07:16,170 line:-1
有人发送了大量消息


112
00:07:16,737 --> 00:07:20,574 line:-1
我们想通过组织通知来改善这种情况


113
00:07:20,641 --> 00:07:24,244 line:-1
以便用户可以更有效地使用它们


114
00:07:28,382 --> 00:07:30,384 line:-1
我们的第一个例子是日历


115
00:07:33,220 --> 00:07:38,292 line:-2
根据你的生活组织方式或工作地点
日历可能会发送


116
00:07:38,358 --> 00:07:42,896 line:-1
很多事件更改及事件邀请的通知


117
00:07:43,997 --> 00:07:46,967 line:-1
但并非所有通知都有相同的重要性


118
00:07:47,034 --> 00:07:49,436 line:-1
日历发送的有些通知


119
00:07:49,503 --> 00:07:51,271 line:-1
比其它通知更重要


120
00:07:51,772 --> 00:07:53,006 line:-1
这些是…


121
00:07:55,175 --> 00:07:58,011 line:-1
你在创建活动时设置的事件提醒


122
00:07:58,445 --> 00:08:00,480 line:-1
或“该走了”通知


123
00:08:00,547 --> 00:08:01,682 line:-1
这些通知更重要


124
00:08:01,748 --> 00:08:05,752 line:-1
因为它们提示我现在要采取行动


125
00:08:05,819 --> 00:08:08,956 line:-2
如果我收到通知
说我在15分钟内有个会


126
00:08:09,022 --> 00:08:11,592 line:-1
我需要开始去赴会


127
00:08:12,459 --> 00:08:15,329 line:-1
但许多其他通知


128
00:08:15,395 --> 00:08:18,732 line:-1
不需要立即回应


129
00:08:18,799 --> 00:08:21,768 line:-1
比如分享日历的更新


130
00:08:22,169 --> 00:08:24,438 line:-1
或其他事件的时间变化


131
00:08:24,505 --> 00:08:27,241 line:-1
当天晚些时候或某天


132
00:08:28,442 --> 00:08:30,644 line:-1
所以分开这两类通知很有用


133
00:08:31,778 --> 00:08:36,517 line:-1
日历的作法是用默认组即app组


134
00:08:36,582 --> 00:08:39,852 line:-1
处理发送的大部分通知


135
00:08:40,187 --> 00:08:43,222 line:-1
实现办法是 对大部分通知


136
00:08:43,289 --> 00:08:45,459 line:-1
不设置任何线程标识符


137
00:08:45,993 --> 00:08:47,628 line:-1
邮件是默认值


138
00:08:47,694 --> 00:08:50,297 line:-1
如果你不设置它 这是默认的群组


139
00:08:51,532 --> 00:08:55,536 line:-1
然后 日历设置特定的线程标识符


140
00:08:55,602 --> 00:08:58,639 line:-1
仅针对这些更重要的通知


141
00:08:58,705 --> 00:09:00,207 line:-1
我们想特别提起注意的通知


142
00:09:02,809 --> 00:09:04,945 line:-1
结果就是…


143
00:09:06,146 --> 00:09:11,518 line:-1
来自日历的大多数通知都是信息更新


144
00:09:11,985 --> 00:09:15,589 line:-1
不需要立即做出反应


145
00:09:15,656 --> 00:09:18,959 line:-1
或者不需要留给以后参考


146
00:09:19,026 --> 00:09:22,930 line:-2
例如提示事件位置的通知
它们就组合在一个组中


147
00:09:23,764 --> 00:09:26,500 line:-1
而其他更重要的


148
00:09:26,567 --> 00:09:29,636 line:-2
更紧急的
或者需要稍后引用的那些通知


149
00:09:29,703 --> 00:09:34,107 line:-2
比如找到会议地点
这些通知是分开的


150
00:09:37,044 --> 00:09:42,783 line:-1
我展开一下 看到我的群组还有什么


151
00:09:44,384 --> 00:09:48,689 line:-1
这是我们从日历中学到的模式


152
00:09:49,089 --> 00:09:51,892 line:-1
把重要且可操作的通知


153
00:09:51,959 --> 00:09:53,594 line:-1
与信息更新的通知分隔开


154
00:09:58,765 --> 00:10:01,368 line:-1
我们的下一个例子是短信


155
00:10:02,703 --> 00:10:04,137 line:-1
短信可能是


156
00:10:04,204 --> 00:10:07,841 line:-1
最简单的通知群组的实现


157
00:10:08,375 --> 00:10:11,645 line:-1
显而易见 短信包含对话


158
00:10:12,212 --> 00:10:14,448 line:-1
每个对话都有自己的群组


159
00:10:16,083 --> 00:10:18,585 line:-1
但我们仍可以学到重要的东西


160
00:10:18,652 --> 00:10:21,355 line:-1
我们仍然可以从短信中学习


161
00:10:21,855 --> 00:10:24,858 line:-1
为什么短信把所有对话


162
00:10:24,925 --> 00:10:28,729 line:-1
分在不同的组中？


163
00:10:29,730 --> 00:10:31,865 line:-1
短信发送的通知


164
00:10:31,932 --> 00:10:34,301 line:-1
通常来自人


165
00:10:34,368 --> 00:10:36,136 line:-1
来自你的朋友和家人


166
00:10:36,203 --> 00:10:39,806 line:-1
这些是我们关心并重视的通知


167
00:10:39,873 --> 00:10:44,211 line:-1
其次 它们通常是短暂的通知


168
00:10:44,278 --> 00:10:46,980 line:-2
因为通常情况下
你会在短信中快速响应


169
00:10:47,047 --> 00:10:49,716 line:-1
从而从Notifications Center清除


170
00:10:51,818 --> 00:10:53,053 line:-1
短信的做法


171
00:10:53,120 --> 00:10:57,958 line:-1
是为这些一对一对话创建一个线程


172
00:10:58,258 --> 00:11:01,028 line:-1
它会创建一个单独的通知组


173
00:11:01,094 --> 00:11:03,197 line:-1
用于群组对话


174
00:11:03,764 --> 00:11:08,302 line:-1
只需为该线程生成任何组标识符


175
00:11:08,368 --> 00:11:09,670 line:-1
并将它们组合在一起


176
00:11:13,907 --> 00:11:17,177 line:-1
我可以展开并看到我的所有消息


177
00:11:18,645 --> 00:11:21,982 line:-1
那么我们从短信中学到了什么？


178
00:11:22,583 --> 00:11:26,186 line:-1
为有意义的个人通信创建群组


179
00:11:26,520 --> 00:11:27,855 line:-1
这些短信通知


180
00:11:27,921 --> 00:11:30,424 line:-1
通常很重要


181
00:11:30,490 --> 00:11:34,628 line:-2
它们在Notification Center
只短暂存在


182
00:11:34,695 --> 00:11:38,899 line:-2
因此
我们为所有这些组创建许多单独的组


183
00:11:43,170 --> 00:11:44,872 line:-1
我们的最后一个例子是邮件


184
00:11:46,507 --> 00:11:47,841 line:-1
邮件与短信


185
00:11:48,242 --> 00:11:51,645 line:-1
有一些相同的特征


186
00:11:52,145 --> 00:11:56,049 line:-1
它们都经常是人与人的直接沟通


187
00:11:56,583 --> 00:12:02,589 line:-1
二者有类似的概念


188
00:12:03,490 --> 00:12:04,758 line:-1
如线程及对话


189
00:12:05,993 --> 00:12:10,030 line:-1
但邮件和短信之间存在一些重大差异


190
00:12:10,564 --> 00:12:15,102 line:-1
邮件的通知数量可能高于短信


191
00:12:15,669 --> 00:12:20,274 line:-2
另一方面
邮件通知的有效期也可能更长


192
00:12:21,608 --> 00:12:26,246 line:-1
邮件通常用于较慢的通信


193
00:12:26,313 --> 00:12:29,483 line:-1
一般不需立即回应


194
00:12:30,651 --> 00:12:31,485 line:-1
所以


195
00:12:31,718 --> 00:12:38,125 line:-1
按线程组织邮件通知并不理想


196
00:12:38,192 --> 00:12:42,095 line:-2
这将在Notification Center中
创建很多线程


197
00:12:42,162 --> 00:12:46,200 line:-1
这样的UI效率不高


198
00:12:46,266 --> 00:12:51,471 line:-1
邮件提供了特定UI显示邮件线程


199
00:12:52,573 --> 00:12:55,843 line:-1
那么 邮件如何组织其通知？


200
00:12:57,344 --> 00:13:02,115 line:-1
首先 邮件提供了一些邮件到达时


201
00:13:02,182 --> 00:13:03,917 line:-1
已有的组织的功能


202
00:13:03,984 --> 00:13:05,586 line:-1
和优先处理功能


203
00:13:07,020 --> 00:13:10,858 line:-2
邮件提供单独的帐户
你可以拥有并在你的设备中


204
00:13:10,924 --> 00:13:12,292 line:-1
设置许多不同的帐户


205
00:13:13,026 --> 00:13:17,931 line:-2
提供VIP功能
你可以将任何联系人设置为VIP


206
00:13:18,999 --> 00:13:21,702 line:-1
你可以设收藏夹


207
00:13:22,336 --> 00:13:25,372 line:-1
你也可以在邮件客户端


208
00:13:25,439 --> 00:13:27,341 line:-1
打开特定线程的通知


209
00:13:28,876 --> 00:13:32,513 line:-1
所以似乎用户已经在告诉我们


210
00:13:32,579 --> 00:13:36,083 line:-1
哪些通知和邮件更重要


211
00:13:36,149 --> 00:13:37,851 line:-1
哪些不太重要


212
00:13:37,918 --> 00:13:39,319 line:-1
这就是邮件所做的


213
00:13:39,786 --> 00:13:46,093 line:-1
邮件首先从帐号组开始组织通知


214
00:13:46,426 --> 00:13:48,862 line:-1
它为所有投递给特定帐号的邮件


215
00:13:48,929 --> 00:13:50,964 line:-1
创建一个大帐号


216
00:13:51,732 --> 00:13:55,169 line:-2
如果我有多个帐号
每个帐号都会拥有自己的群组


217
00:13:56,603 --> 00:13:57,437 line:-1
然而


218
00:13:58,572 --> 00:14:03,243 line:-2
如果我的VIP联系人
向该帐号发送邮件


219
00:14:03,844 --> 00:14:07,047 line:-1
该邮件会被分到另一个群组


220
00:14:07,748 --> 00:14:09,516 line:-1
因为我指定了那是VIP


221
00:14:09,583 --> 00:14:13,487 line:-2
当VIP发送电子邮件时
我希望


222
00:14:13,554 --> 00:14:14,655 line:-1
立即得到通知


223
00:14:16,089 --> 00:14:21,128 line:0
而且如果我打开邮件内
某些特定线程的通知


224
00:14:21,795 --> 00:14:25,399 line:0
它们也会分离到自己的小组中


225
00:14:29,102 --> 00:14:32,840 line:-1
所以你看到虽然邮件与短信


226
00:14:32,906 --> 00:14:36,710 line:-1
在某些特征上类似


227
00:14:37,177 --> 00:14:39,780 line:-1
它们分组通知的方法略有不同


228
00:14:39,847 --> 00:14:42,950 line:-1
因为它们使用通知的方法


229
00:14:43,016 --> 00:14:44,818 line:-1
及处理的内容不同


230
00:14:46,520 --> 00:14:49,223 line:-1
那么 这里邮件在告诉我们什么？


231
00:14:49,723 --> 00:14:52,726 line:-1
尊重用户的优先级设定和组织


232
00:14:53,093 --> 00:14:58,031 line:-1
邮件具有组织和确定优先级的功能


233
00:14:58,332 --> 00:15:02,469 line:-1
我们可以用它来组织邮件发送的通知


234
00:15:05,572 --> 00:15:10,177 line:-1
（通知组摘要）


235
00:15:10,244 --> 00:15:15,015 line:-1
我们已看到了如何创建任意数量的组


236
00:15:16,817 --> 00:15:21,321 line:-2
我们来看看
如何通过在组内提供一些信息


237
00:15:21,388 --> 00:15:24,124 line:-1
描述它们包含的内容


238
00:15:25,692 --> 00:15:28,328 line:-1
而使这些群组更加清晰


239
00:15:30,864 --> 00:15:35,035 line:-2
这些例子是我上周的
Notification Center


240
00:15:35,669 --> 00:15:38,505 line:-2
这里我们看到
每个小组底部有一个简短的摘要


241
00:15:38,639 --> 00:15:41,108 line:-1
了该组的内容略作解释


242
00:15:41,642 --> 00:15:46,180 line:-2
例如 邮件说
我的工作帐户中有几封电子邮件


243
00:15:47,414 --> 00:15:50,384 line:-1
播客说我有一堆新剧集


244
00:15:50,450 --> 00:15:54,354 line:-1
已发送到我的播客app以收听


245
00:15:56,523 --> 00:15:58,192 line:0
而新闻告诉我


246
00:15:58,258 --> 00:16:01,428 line:0
我有九个
来自《国家地理》杂志的通知


247
00:16:05,165 --> 00:16:07,634 line:0
让我们稍加探讨一下


248
00:16:07,701 --> 00:16:12,506 line:-2
如果你不自定义摘要
我们在组中设置了默认消息


249
00:16:12,573 --> 00:16:14,474 line:-1
说你还有九个通知


250
00:16:15,108 --> 00:16:19,313 line:-1
但我们可以更好地描述这些内容


251
00:16:19,379 --> 00:16:22,316 line:-2
例如 如果你有一个
发送消息的app


252
00:16:22,883 --> 00:16:27,621 line:-1
你可能想说你正在发送九条消息


253
00:16:28,355 --> 00:16:29,189 line:-1
怎样做到这个？


254
00:16:30,991 --> 00:16:34,294 line:-1
第一件事就是选择摘要格式


255
00:16:34,361 --> 00:16:35,562 line:-1
这是一个格式字符串


256
00:16:36,029 --> 00:16:39,633 line:-1
只是用数字占位符描述你的内容


257
00:16:39,700 --> 00:16:42,669 line:-2
正如我们在这里看到的
数字 更多消息


258
00:16:44,137 --> 00:16:48,342 line:-1
然后在通知类别中设置


259
00:16:49,243 --> 00:16:51,245 line:-1
你将用于发送通知的格式字符串


260
00:16:54,548 --> 00:16:57,618 line:-1
注意 摘要格式是在类别上设置的


261
00:16:57,684 --> 00:17:00,988 line:-1
而线程是在通知内容上设置的


262
00:17:01,054 --> 00:17:03,590 line:-1
这是因为如你所知 类别


263
00:17:03,657 --> 00:17:09,429 line:-2
指的是类型
是你发送的类似的通知组


264
00:17:09,930 --> 00:17:12,499 line:-1
例如 短信有不同的类别


265
00:17:12,566 --> 00:17:16,837 line:-1
用于一对一对话和群组对话


266
00:17:16,904 --> 00:17:19,239 line:-1
这意味着这两个类别


267
00:17:19,306 --> 00:17:20,807 line:-1
可以设置不同的摘要


268
00:17:21,074 --> 00:17:23,911 line:-1
这就是在类别中设置摘要格式的原因


269
00:17:27,714 --> 00:17:28,949 line:-1
当你在这里时


270
00:17:29,016 --> 00:17:32,886 line:-1
更新通知组的通知类别


271
00:17:32,953 --> 00:17:37,024 line:-2
你也可以设置这个
hiddenPreviewsPlaceholder属性


272
00:17:37,824 --> 00:17:41,995 line:-1
与我们用于通知组的摘要非常相似


273
00:17:42,596 --> 00:17:46,767 line:-2
这两者之间的主要区
别在于它们的使用环境


274
00:17:47,534 --> 00:17:49,837 line:-2
hiddenPreviewsPlaceholder
不是新功能


275
00:17:49,903 --> 00:17:53,006 line:-2
这是我们去年在iOS 11中
推出的一项功能


276
00:17:53,640 --> 00:17:57,778 line:-1
它会自定义显示的文本


277
00:17:57,845 --> 00:18:02,282 line:-2
而不是用户将其通知
设置为私有时的通知


278
00:18:02,716 --> 00:18:07,855 line:-2
如果我将通知设置为私有
我说九条短信


279
00:18:08,255 --> 00:18:11,258 line:-1
但是 当我作身份验证并解锁设备时


280
00:18:11,325 --> 00:18:14,695 line:-1
我可以在下面看到展开的通知和摘要


281
00:18:14,928 --> 00:18:17,164 line:-1
说还有八条短信


282
00:18:17,397 --> 00:18:21,768 line:-1
这就是为什么摘要格式包含更多消息


283
00:18:21,969 --> 00:18:25,806 line:-1
但预览占位符仅包含短信数


284
00:18:31,411 --> 00:18:36,283 line:-1
这就是摘要的基本设置


285
00:18:36,750 --> 00:18:38,952 line:-1
但是群组对话的消息


286
00:18:39,019 --> 00:18:43,590 line:-2
有一个更有趣的摘要
其中显示了短信的数量


287
00:18:43,657 --> 00:18:45,492 line:-1
还有在那个线程 那个对话


288
00:18:45,559 --> 00:18:49,997 line:-1
发短信的人


289
00:18:51,064 --> 00:18:53,934 line:-2
我们不能用刚刚指定的格式
来做到这个


290
00:18:54,001 --> 00:18:56,737 line:-1
因为它只有一个数字占位符


291
00:18:57,604 --> 00:19:02,142 line:-2
所以 我们要做的是
创建一个不同的摘要格式


292
00:19:02,442 --> 00:19:09,149 line:-1
包含数字占位符和字符串占位符


293
00:19:09,216 --> 00:19:13,287 line:-2
如你所见
数字更多来自字符串的消息


294
00:19:13,620 --> 00:19:16,390 line:-1
我们将把第二个占位符


295
00:19:16,456 --> 00:19:19,359 line:-1
以通知中的名称列表来替换


296
00:19:21,161 --> 00:19:23,430 line:-1
仍然在类别中设置摘要格式


297
00:19:24,431 --> 00:19:26,800 line:-1
然后我们必须收集这些名称


298
00:19:28,602 --> 00:19:33,607 line:-2
要发送这些名称
再次在通知内容中进行设置


299
00:19:33,674 --> 00:19:36,310 line:-1
因为每个通知都可以由不同的人发送


300
00:19:36,376 --> 00:19:37,911 line:-1
可以是不同的名字


301
00:19:40,581 --> 00:19:42,983 line:-1
所以 我们收集所有这些名字


302
00:19:43,650 --> 00:19:48,889 line:-1
在字符串中构建并在摘要中替换它们


303
00:19:48,956 --> 00:19:53,427 line:-1
当然 推送有效负载也支持摘要参数


304
00:19:54,795 --> 00:19:59,199 line:-1
这就是我们收集所有名称后的摘要


305
00:19:59,266 --> 00:20:01,235 line:-1
并在摘要参数中设定其格式


306
00:20:06,373 --> 00:20:08,075 line:-1
名称不必是唯一的


307
00:20:08,141 --> 00:20:12,079 line:-1
你可以用同一个名称发送许多通知


308
00:20:12,479 --> 00:20:18,252 line:-2
例如 在邮件案例中
所有通知都具有相同的名称


309
00:20:18,318 --> 00:20:20,087 line:-1
因为它们都在同一个帐号中


310
00:20:20,153 --> 00:20:22,356 line:-1
我们将删除重复数据


311
00:20:22,422 --> 00:20:26,693 line:-1
并且只显示每个可见名称的一个实例


312
00:20:32,199 --> 00:20:34,868 line:-1
下一个例子是播客


313
00:20:35,302 --> 00:20:38,939 line:-2
播客向我们展示了
此API的另一小细节


314
00:20:40,274 --> 00:20:42,242 line:-1
此通知有什么特别之处？


315
00:20:42,843 --> 00:20:44,945 line:-1
在此通知中 播客说


316
00:20:45,012 --> 00:20:51,451 line:-1
我的主要通知播客中有两集新剧


317
00:20:53,554 --> 00:20:56,123 line:-1
总结说众多节目中


318
00:20:56,190 --> 00:20:57,925 line:-1
还有七集


319
00:20:58,792 --> 00:21:00,727 line:-1
当我扩展这个群体时会发生什么？


320
00:21:03,564 --> 00:21:07,534 line:-1
群组中只有三个外部通知


321
00:21:07,768 --> 00:21:11,572 line:-2
不像总结说的那样是7个
在之前的例子中


322
00:21:11,638 --> 00:21:15,676 line:-1
摘要中的数量


323
00:21:15,742 --> 00:21:17,144 line:-1
与组内通知数量相匹配


324
00:21:18,278 --> 00:21:19,713 line:-1
那么这是怎么回事？


325
00:21:21,181 --> 00:21:24,952 line:-1
因为播客集中这些通知


326
00:21:25,018 --> 00:21:28,388 line:-1
并在一个节目发布多集时


327
00:21:28,789 --> 00:21:31,124 line:-1
试图限制发送的通知数量


328
00:21:31,191 --> 00:21:34,595 line:-1
同时 它有这些通知说


329
00:21:34,661 --> 00:21:37,364 line:-2
“有两集新剧集选择
有三集新剧集选择”


330
00:21:38,565 --> 00:21:43,670 line:-2
如果你把底部三个通知中的剧集
数量加起来


331
00:21:43,737 --> 00:21:46,306 line:-1
这就是摘要所算的


332
00:21:46,373 --> 00:21:47,975 line:-1
你可以看到总数是7


333
00:21:49,676 --> 00:21:52,012 line:-1
让我们看看这个API是如何工作的


334
00:21:53,447 --> 00:21:56,583 line:-1
这只是通知内容的另一个属性


335
00:21:56,650 --> 00:21:59,052 line:-1
称为summaryArgumentCount


336
00:22:00,020 --> 00:22:03,123 line:-1
此数字表示


337
00:22:03,190 --> 00:22:06,894 line:-1
在摘要中摘要参数的计数


338
00:22:08,328 --> 00:22:12,900 line:-1
我们将再次收集所有名称


339
00:22:12,966 --> 00:22:16,203 line:-1
我们将统计所有计数 创建摘要


340
00:22:17,304 --> 00:22:20,707 line:-1
正如我们所看到的 这个通知会有


341
00:22:21,141 --> 00:22:25,179 line:-2
summaryArgumentCount计数
三 一 三 总计为七


342
00:22:25,746 --> 00:22:28,048 line:-1
这就是我们展示的摘要


343
00:22:30,384 --> 00:22:31,685 line:-1
而且和其它部分一样


344
00:22:31,752 --> 00:22:34,221 line:-1
你当然可以在推送有效负载中设置它


345
00:22:38,225 --> 00:22:42,829 line:-2
summaryArgumentCount
是可选的 默认为1


346
00:22:42,896 --> 00:22:46,533 line:-2
因此你只有对通知
进行此类捆绑时才需要设置


347
00:22:46,600 --> 00:22:47,968 line:-1
而非任何时候都需要设置


348
00:22:50,537 --> 00:22:53,841 line:-1
（摘要复数和本地化）


349
00:22:53,907 --> 00:22:59,246 line:-1
现在 我们正在玩文字 建句子


350
00:22:59,313 --> 00:23:05,285 line:-2
而且这时
你一直需要考虑不同的语言


351
00:23:05,652 --> 00:23:09,089 line:-2
并且在这种情况下需要考虑复数
因为有数字


352
00:23:12,059 --> 00:23:14,294 line:-1
另一个播客通知


353
00:23:14,361 --> 00:23:17,431 line:-2
例如 在这种情况下
它说“还有四集”


354
00:23:17,865 --> 00:23:22,536 line:-2
但如果我只有一集
那个字符串就需要用单数


355
00:23:23,270 --> 00:23:25,873 line:-1
但API只允许我们设置一个字符串


356
00:23:27,207 --> 00:23:28,242 line:-1
而我们需要两个


357
00:23:29,710 --> 00:23:31,011 line:-1
你需要两个的英语表述


358
00:23:31,712 --> 00:23:36,283 line:-1
但是如果你想本地化你的app


359
00:23:36,350 --> 00:23:38,185 line:-1
或者如果你的主要语言不是英语


360
00:23:38,252 --> 00:23:40,521 line:-1
你正在为不同的语言做开发


361
00:23:41,054 --> 00:23:44,458 line:-1
某些语言对复数有不同的规则


362
00:23:44,525 --> 00:23:47,060 line:-2
也许它们没有两个形式
而可能有三个


363
00:23:47,828 --> 00:23:50,430 line:-1
它们可能会有适用不同规则的形式


364
00:23:51,565 --> 00:23:55,169 line:-2
iOS
在Foundation框架中


365
00:23:55,235 --> 00:23:58,805 line:-1
提供了对本地化这类字符串的支持


366
00:23:58,872 --> 00:24:02,242 line:-1
所以你不需要学习所有的规则


367
00:24:02,309 --> 00:24:04,912 line:-2
你不需要知道
你要将你的app翻译成的所有语言


368
00:24:05,746 --> 00:24:11,018 line:-1
采用和翻译每个字符串非常简单


369
00:24:11,084 --> 00:24:12,819 line:-1
拥有正确的复数形式


370
00:24:18,625 --> 00:24:23,063 line:-1
我们需要做的第一件事就是采用


371
00:24:23,130 --> 00:24:28,669 line:-2
这“修复我们的复数问题”
是将摘要格式中的


372
00:24:28,735 --> 00:24:32,639 line:-1
文字字符串用本地化字符串代替


373
00:24:34,007 --> 00:24:36,476 line:-1
并请记住 在这里 你需要使用


374
00:24:36,543 --> 00:24:39,980 line:-2
我们针对本地化字符串的
特殊通知API


375
00:24:40,547 --> 00:24:45,652 line:-2
因为我们需要存储这个本地化的
字符串并将其放在一边


376
00:24:46,186 --> 00:24:51,058 line:-1
因为如果系统语言稍后发生变化


377
00:24:51,325 --> 00:24:54,695 line:-2
如果你发送通知
我们会发送系统本地化更改后


378
00:24:54,761 --> 00:24:57,331 line:-1
正确的本地化信息


379
00:25:00,000 --> 00:25:04,538 line:-2
因此 在这里设置本地化字符串后
你需要本地化字符串


380
00:25:05,606 --> 00:25:10,878 line:-2
并在字符串dict文件中
本地化字符串


381
00:25:11,411 --> 00:25:14,381 line:-2
字符串dict文件
是一个属性列表文件


382
00:25:14,448 --> 00:25:20,287 line:-1
它描述性能字符串和配置字典


383
00:25:20,654 --> 00:25:22,623 line:-1
这个文件在底部的配置字典中


384
00:25:22,689 --> 00:25:28,695 line:-1
你会看到英文单数和复数的两个版本


385
00:25:29,463 --> 00:25:32,933 line:-1
如我所说 要想支持其他语言


386
00:25:33,000 --> 00:25:37,771 line:0
和不同的复数规则
你要做的就是改变这个dict文件


387
00:25:37,871 --> 00:25:38,906 line:0
你创建一个新文件


388
00:25:38,972 --> 00:25:44,178 line:0
希伯来语有三种不同的复数形式


389
00:25:44,645 --> 00:25:49,149 line:0
俄语有三种复数 与希伯来语亦不同


390
00:25:49,249 --> 00:25:52,586 line:0
而且你不需要知道何时使用哪一个


391
00:25:52,653 --> 00:25:54,955 line:0
若你用我们提供的
Foundation API


392
00:25:57,057 --> 00:26:01,428 line:0
这是我们刚刚看到的简单摘要格式


393
00:26:02,029 --> 00:26:07,267 line:-1
当然我们也可以使用参数格式化摘要


394
00:26:08,101 --> 00:26:12,840 line:-1
你看 我们在顶部定义了格式字符串


395
00:26:13,473 --> 00:26:17,611 line:-1
我们需要按键匹配配置字典


396
00:26:18,712 --> 00:26:22,716 line:-1
在下面 我们为两个不同的版本


397
00:26:23,383 --> 00:26:25,886 line:-1
用数字占位符指定了两个字符串


398
00:26:25,953 --> 00:26:29,990 line:-1
以及我们将提供名称的列表的占位符


399
00:26:35,028 --> 00:26:35,863 line:-1
所以…


400
00:26:36,663 --> 00:26:38,432 line:-1
因为我们正在交换


401
00:26:38,799 --> 00:26:42,836 line:-1
app和系统之间的这些格式字符串


402
00:26:43,203 --> 00:26:45,339 line:-1
这些实际上是API的一部分


403
00:26:45,606 --> 00:26:50,277 line:-1
因此 我们可以支持的格式数量有限


404
00:26:51,411 --> 00:26:53,113 line:-1
我们需要就这些达成一致


405
00:26:53,547 --> 00:26:56,250 line:-2
这就是我在这些例子中
展示的那些格式


406
00:26:56,817 --> 00:27:01,555 line:-1
第一个是当你不需要参数时


407
00:27:02,022 --> 00:27:04,057 line:-1
带有一个数字占位符的格式


408
00:27:04,124 --> 00:27:07,561 line:-1
你需要指定一个无符号数字


409
00:27:09,096 --> 00:27:11,899 line:-1
你可以使用的第二种格式


410
00:27:11,965 --> 00:27:16,236 line:-2
是有数字占位符
和字符串占位符的那个


411
00:27:16,803 --> 00:27:22,176 line:-2
我们将自动检测你正在使用的字符串
并赋予正确格式


412
00:27:26,213 --> 00:27:27,381 line:-1
（快速提示）


413
00:27:27,447 --> 00:27:32,152 line:-1
现在我们都完成了通知分组的功能


414
00:27:32,553 --> 00:27:35,822 line:-2
但在你离场之前
我想再给你一点


415
00:27:36,356 --> 00:27:38,625 line:-1
关于通知分组和这些API的提示


416
00:27:38,692 --> 00:27:43,230 line:-2
这将帮你完成app中的
最后一点美化


417
00:27:45,699 --> 00:27:50,437 line:-1
第一步是组合不同的摘要


418
00:27:52,573 --> 00:27:55,676 line:-1
我们看到你可以


419
00:27:55,742 --> 00:28:00,747 line:-1
在不同的类别中设置不同的摘要


420
00:28:00,814 --> 00:28:04,318 line:-1
并在通知内容中并定义线程组


421
00:28:04,384 --> 00:28:08,322 line:-2
表示你可以在同一组通知中
混合不同摘要


422
00:28:08,655 --> 00:28:13,093 line:-2
当你这样做时会发生什么？
两类主要结果


423
00:28:13,727 --> 00:28:19,766 line:-2
如果该组中的任何摘要都没有参数
我们将尝试


424
00:28:20,267 --> 00:28:23,370 line:-1
合并列表中的所有摘要并这样显示


425
00:28:24,505 --> 00:28:28,876 line:-1
但是如果组内任何通知摘要


426
00:28:28,942 --> 00:28:31,678 line:-1
有任何参数


427
00:28:32,179 --> 00:28:34,948 line:-1
我们将不得不回到默认消息


428
00:28:40,587 --> 00:28:45,125 line:0
第二个提示是关于丰富的通知和组


429
00:28:46,393 --> 00:28:50,564 line:0
我们不久前在iOS中
引入了丰富的通知


430
00:28:51,198 --> 00:28:54,601 line:0
它们与群组通知可同时工作


431
00:28:55,269 --> 00:29:00,674 line:0
当用户按下某个组
以查看丰富的通知时


432
00:29:00,741 --> 00:29:03,744 line:0
将加载该群组的内容扩展程序


433
00:29:03,810 --> 00:29:07,047 line:0
你的通知


434
00:29:07,381 --> 00:29:09,716 line:0
将被主要通知加载


435
00:29:09,783 --> 00:29:13,787 line:0
显示在顶部的那个


436
00:29:13,854 --> 00:29:17,090 line:0
用通常的didReceive Notification
API 你将在通知中收到它


437
00:29:20,894 --> 00:29:25,399 line:0
加载扩展程序后
你可以加载其他通知


438
00:29:25,499 --> 00:29:27,801 line:0
例如 组中的相同通知


439
00:29:28,402 --> 00:29:30,070 line:0
或者如果你想显示不同的内容


440
00:29:30,137 --> 00:29:31,905 line:0
你也可以使用自己的API加载它


441
00:29:35,475 --> 00:29:38,846 line:0
当你的扩展程序打开且运行时


442
00:29:38,912 --> 00:29:42,182 line:0
如果其他通知发送到同一组


443
00:29:42,416 --> 00:29:44,351 line:0
它们有相同的线程标识符


444
00:29:44,418 --> 00:29:48,288 line:0
将和开始时一样
用didReceive Notification方法


445
00:29:48,355 --> 00:29:52,426 line:0
被发送到你的内容扩展程序


446
00:29:56,597 --> 00:30:02,369 line:0
最后 如果你已经通过
从递送通知中加载的方法


447
00:30:02,436 --> 00:30:05,906 line:0
或从你自己的API加载


448
00:30:06,139 --> 00:30:08,809 line:0
向用户显示了额外的通知


449
00:30:08,876 --> 00:30:11,645 line:0
你该从Notification Center中
删除它们


450
00:30:11,879 --> 00:30:17,284 line:0
继续保持Notification Center的
有序性和效率


451
00:30:18,585 --> 00:30:21,455 line:0
我想回顾一下我们谈到的内容


452
00:30:22,389 --> 00:30:24,992 line:-1
这是一段很长的谈话 有很多细节


453
00:30:25,058 --> 00:30:28,562 line:-1
但我只希望你记住两件非常重要的事


454
00:30:29,363 --> 00:30:32,366 line:-1
第一个是通知分组的目标


455
00:30:32,733 --> 00:30:37,404 line:-2
通知分组的目标是更好地组织
Notification Center


456
00:30:37,471 --> 00:30:42,309 line:-1
并帮你的用户在使用通知时提高效率


457
00:30:42,543 --> 00:30:45,846 line:-1
这将帮助他们对通知进行分类


458
00:30:45,913 --> 00:30:49,349 line:-2
并让他们更快地接收重要信息
更好地做出反应


459
00:30:50,717 --> 00:30:55,489 line:-1
我希望你记住的第二件事


460
00:30:55,556 --> 00:30:58,759 line:-1
是添加自定义摘要以提高清晰度


461
00:30:59,293 --> 00:31:03,063 line:-2
正如你在我的示例中所看到的
例如播客或邮件


462
00:31:03,764 --> 00:31:09,136 line:-1
通知组下方的一小段文字有助于


463
00:31:09,203 --> 00:31:11,138 line:-1
查看该组中还有哪些新通知


464
00:31:11,205 --> 00:31:13,774 line:-1
而且我不需要打开通知群组


465
00:31:13,841 --> 00:31:16,710 line:-1
来查看所有有关内容


466
00:31:16,777 --> 00:31:19,913 line:-1
摘要已经提供了一些信息


467
00:31:21,081 --> 00:31:25,886 line:0
我们将在本次会议结束后不久
在楼下有个实验室


468
00:31:26,253 --> 00:31:30,824 line:0
明早我们将有另一个实验室
我们期待与你交谈


469
00:31:31,725 --> 00:31:35,395 line:0
周五还有另一场关于通知的会议


470
00:31:35,462 --> 00:31:38,365 line:0
更多地讨论设计方面的问题


471
00:31:38,432 --> 00:31:41,802 line:0
及如何跨所有用户设备和不同系统


472
00:31:41,869 --> 00:31:45,272 line:0
全局化考虑你的通知


473
00:31:47,441 --> 00:31:49,877 line:-1
非常感谢 再见

