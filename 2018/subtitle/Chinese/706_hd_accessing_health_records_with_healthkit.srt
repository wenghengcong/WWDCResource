1
00:00:07,516 --> 00:00:20,516
[ 音乐 ]


2
00:00:21,516 --> 00:00:29,186
[ 掌声 ]


3
00:00:29,686 --> 00:00:31,336
>> 下午好 我叫 Jason Morley


4
00:00:31,336 --> 00:00:32,986
是 Apple Health 团队的


5
00:00:32,986 --> 00:00:34,406
一名软件工程师


6
00:00:34,696 --> 00:00:36,306
这是我的同事 Peyton


7
00:00:36,306 --> 00:00:38,176
我想花些时间


8
00:00:38,176 --> 00:00:39,576
来向你们介绍


9
00:00:39,576 --> 00:00:41,606
我们今年在 iOS 12 里加入的


10
00:00:41,736 --> 00:00:44,686
一项激动人心的新功能


11
00:00:44,686 --> 00:00:46,546
利用 HealthKit 获得健康记录


12
00:00:46,976 --> 00:00:52,136
在今年的早些时候


13
00:00:52,136 --> 00:00:54,106
我们在 iOS 11.3 上介绍了 健康记录和健康


14
00:00:55,376 --> 00:00:56,586
用户可以与他们的


15
00:00:56,586 --> 00:00:58,426
医疗机构建立连接


16
00:00:58,426 --> 00:01:00,186
并且安全地下载他们的健康记录


17
00:01:00,186 --> 00:01:03,496
以便于快速访问和保管


18
00:01:04,726 --> 00:01:07,006
我们从多个医疗机构那里


19
00:01:07,006 --> 00:01:08,756
收集数据并且


20
00:01:08,756 --> 00:01:10,246
呈现一个允许用户搜索和


21
00:01:10,666 --> 00:01:12,676
显示像实验值和参考范围这种


22
00:01:12,676 --> 00:01:15,186
真的能够帮助用户


23
00:01:15,316 --> 00:01:17,486
去更好地了解


24
00:01:18,056 --> 00:01:19,226
他们健康数据的重要细节


25
00:01:19,226 --> 00:01:22,000
的时间轴


26
00:01:25,046 --> 00:01:25,986
截止至今 我们已经为


27
00:01:26,026 --> 00:01:28,616
超过 500 家美国医院和诊所


28
00:01:28,616 --> 00:01:31,466
提供了支持 共覆盖 50 多个医疗机构


29
00:01:31,646 --> 00:01:33,796
并且我们还在不断地


30
00:01:33,796 --> 00:01:38,926
继续增加更多


31
00:01:39,116 --> 00:01:40,096
当然了


32
00:01:40,096 --> 00:01:41,786
如果没有


33
00:01:41,786 --> 00:01:43,896
Health Level Seven 组织


34
00:01:43,896 --> 00:01:46,846
的杰出劳动


35
00:01:46,846 --> 00:01:48,156
和他们的快速医疗的交互操作能力


36
00:01:48,156 --> 00:01:50,046
或 FHIR 和智能健康 IT 项目


37
00:01:50,366 --> 00:01:53,766
的帮助的话


38
00:01:53,766 --> 00:01:54,306
这将是不可能实现的


39
00:01:57,016 --> 00:01:59,226
对我们来说


40
00:01:59,296 --> 00:02:02,156
这一切都是从健康出发


41
00:02:02,156 --> 00:02:03,586
我们和医疗机构建立了一个


42
00:02:03,586 --> 00:02:07,176
安全的连接


43
00:02:07,176 --> 00:02:09,496
并从 FHIR 直接将用户的健康记录


44
00:02:09,496 --> 00:02:10,675
下载到他们的 iOS 装置上


45
00:02:12,496 --> 00:02:14,816
从这里我们将它安全地


46
00:02:14,816 --> 00:02:18,266
储存在 HealthKit 上


47
00:02:18,296 --> 00:02:20,076
并跨越多个机构汇总数据


48
00:02:21,876 --> 00:02:24,986
从现如今的 iOS 12 开始


49
00:02:24,986 --> 00:02:26,986
我们提供允许你访问这个数据的 API


50
00:02:26,986 --> 00:02:28,916
并且让你能够


51
00:02:28,916 --> 00:02:30,000
在你的 App 中使用它


52
00:02:36,046 --> 00:02:36,846
首先 我来介绍一下


53
00:02:36,846 --> 00:02:38,536
我们新加的用来支持这个功能的


54
00:02:38,536 --> 00:02:39,956
新的样本类型


55
00:02:41,476 --> 00:02:42,916
然后 我们便能够看到


56
00:02:42,916 --> 00:02:44,766
你是如何授权自己的 App 并且


57
00:02:44,766 --> 00:02:48,000
查询数据的


58
00:02:48,056 --> 00:02:49,556
然后 我将简短介绍一下 FHIR


59
00:02:49,556 --> 00:02:51,286
并且向你们展示


60
00:02:51,286 --> 00:02:52,876
一下它有多少种可能性


61
00:02:54,276 --> 00:02:56,706
最后 我们可以花些时间


62
00:02:56,706 --> 00:02:58,336
来思考一下


63
00:02:58,336 --> 00:03:00,606
在这个敏感的领域


64
00:03:00,876 --> 00:03:04,976
你该如何保护你的用户隐私


65
00:03:05,116 --> 00:03:06,116
好了让我们进入正题


66
00:03:08,156 --> 00:03:10,086
如果你之前使用过 HealthKit 的话


67
00:03:10,196 --> 00:03:14,246
你可能会对 HKSampleType 和它的子类很熟悉


68
00:03:15,216 --> 00:03:16,696
它们是像分组一样的数据


69
00:03:16,696 --> 00:03:20,336
例如 QuantityType 这种


70
00:03:20,856 --> 00:03:22,846
由一个单一数值代表


71
00:03:22,846 --> 00:03:25,286
的分组数据


72
00:03:25,286 --> 00:03:27,396
像步数和心率


73
00:03:28,656 --> 00:03:30,416
然而 CategoryType 分组数据


74
00:03:30,416 --> 00:03:32,336
是以枚举来判断其特征的


75
00:03:32,926 --> 00:03:34,736
像睡眠分析这种


76
00:03:34,846 --> 00:03:37,936
我只是躺在床上 还是睡着了


77
00:03:37,936 --> 00:03:39,636
我的月经流量如何等


78
00:03:40,316 --> 00:03:43,506
并且 为了支持健康记录


79
00:03:43,506 --> 00:03:46,256
我们引入能够将


80
00:03:46,646 --> 00:03:48,026
你在 Health 中看到的


81
00:03:48,196 --> 00:03:50,146
像状态和药方这种


82
00:03:50,146 --> 00:03:52,286
健康记录分类的


83
00:03:52,366 --> 00:03:52,976
HKClinicalType


84
00:03:57,046 --> 00:03:58,116
在每个样本类型中


85
00:03:58,196 --> 00:04:00,076
不同的数据类型


86
00:04:00,116 --> 00:04:02,576
由一个类型识别码来进行区分


87
00:04:03,966 --> 00:04:05,886
HKClinicalType 识别码


88
00:04:06,246 --> 00:04:08,246
通过相应的


89
00:04:08,766 --> 00:04:12,806
健康记录和健康的类别来识别


90
00:04:13,436 --> 00:04:13,796
相应的临床类型


91
00:04:14,456 --> 00:04:18,805
我们会有过敏等一些


92
00:04:18,956 --> 00:04:20,236
可能仅仅是短期才会出现的状况


93
00:04:20,236 --> 00:04:22,446
例如怀孕


94
00:04:22,446 --> 00:04:24,346
或者是一些经常性的状况


95
00:04:24,346 --> 00:04:28,606
比如第二类型糖尿病 免疫接种 实验结果


96
00:04:29,496 --> 00:04:32,086
这些可能是为了


97
00:04:32,116 --> 00:04:33,476
我每年的身体检查


98
00:04:33,516 --> 00:04:34,246
而进行的血糖测量


99
00:04:35,856 --> 00:04:40,216
药物 流程


100
00:04:40,216 --> 00:04:42,586
诊断过程或是手术


101
00:04:43,866 --> 00:04:46,216
生命体征中像这种


102
00:04:46,216 --> 00:04:50,336
血压或体重的测量


103
00:04:50,796 --> 00:04:52,856
除了这些样本类型和


104
00:04:52,856 --> 00:04:54,656
样本类型标识符以外


105
00:04:54,656 --> 00:04:56,936
我们还引入一个叫做 HKClinicalRecord 的


106
00:04:56,936 --> 00:04:59,926
新的 HK 样本子类


107
00:05:01,416 --> 00:05:02,746
如果你对于


108
00:05:02,746 --> 00:05:04,206
在 HealthKit 中操作这些样本


109
00:05:04,206 --> 00:05:06,376
并不熟悉


110
00:05:06,376 --> 00:05:08,006
我们可以深入探讨这个话题


111
00:05:08,166 --> 00:05:10,236
并且我将在最后介绍


112
00:05:10,236 --> 00:05:11,026
一些关于它的细节


113
00:05:12,656 --> 00:05:14,636
如果你打算使用 HKClinicalRecord 的话


114
00:05:14,636 --> 00:05:16,066
那么 这里有一些


115
00:05:16,066 --> 00:05:17,426
你需要了解的关键属性


116
00:05:18,016 --> 00:05:21,476
关于临床类型


117
00:05:21,476 --> 00:05:23,466
我们之前也探讨过


118
00:05:23,466 --> 00:05:25,996
它允许你去确定


119
00:05:26,196 --> 00:05:26,726
一个记录的类型


120
00:05:27,536 --> 00:05:29,936
健康记录


121
00:05:29,936 --> 00:05:31,936
就像免疫接种一样


122
00:05:32,426 --> 00:05:36,866
我们提供了一个名字


123
00:05:36,866 --> 00:05:38,566
它是一个我们在 Health 中


124
00:05:38,566 --> 00:05:40,496
用来向用户展示健康记录的


125
00:05:40,496 --> 00:05:41,446
一个字符串


126
00:05:42,226 --> 00:05:43,976
我们从 FHIR 资源中把它选择出来


127
00:05:43,976 --> 00:05:45,466
并且你能够将


128
00:05:45,466 --> 00:05:47,006
你的 App 之前的经历


129
00:05:47,006 --> 00:05:48,876
与用户所熟悉的东西


130
00:05:48,876 --> 00:05:50,086
绑定在一起


131
00:05:52,696 --> 00:05:54,616
你可以从这个实验结果中看到


132
00:05:55,576 --> 00:05:56,556
有许多可选择的


133
00:05:56,556 --> 00:05:58,776
表示方法和名称


134
00:05:58,776 --> 00:06:02,296
包括 LOINC 编码系统里的


135
00:06:02,296 --> 00:06:03,826
一个编码


136
00:06:04,096 --> 00:06:05,476
这是一个医疗信息界的


137
00:06:05,476 --> 00:06:06,816
行业标准化参考


138
00:06:06,816 --> 00:06:09,086
并且它是 FHIR


139
00:06:09,086 --> 00:06:10,806
进行观测所需要的


140
00:06:11,376 --> 00:06:14,336
从这里你可以看到


141
00:06:14,336 --> 00:06:16,366
我们已经采用 LOINC 编码并且


142
00:06:16,366 --> 00:06:18,396
执行了一个查找去


143
00:06:18,396 --> 00:06:20,126
提供一个我们将为你们


144
00:06:20,126 --> 00:06:21,976
呈现的一个规范名称


145
00:06:26,046 --> 00:06:27,426
最终 我们提供完整的


146
00:06:27,426 --> 00:06:29,646
FHIR 资源的访问端口


147
00:06:29,646 --> 00:06:30,946
但是从 HKClinicalRecord 中


148
00:06:30,946 --> 00:06:32,106
你还可以得到很多益处


149
00:06:32,106 --> 00:06:33,756
所以我现在


150
00:06:33,756 --> 00:06:35,626
先把它放在一边


151
00:06:35,626 --> 00:06:36,736
稍后我们再回来讨论


152
00:06:41,356 --> 00:06:42,696
像所有的健康数据一样


153
00:06:43,046 --> 00:06:45,236
数据的来源


154
00:06:45,236 --> 00:06:47,396
是非常重要的


155
00:06:48,626 --> 00:06:50,086
你想要知道这个健康数据


156
00:06:50,086 --> 00:06:51,406
是从哪里来的


157
00:06:51,896 --> 00:06:54,106
并且和 HealthKit 的其他部分一样


158
00:06:54,106 --> 00:06:56,326
我们使用 HKSample 的超类 HKSource


159
00:06:56,326 --> 00:07:00,366
来对其进行建模


160
00:07:02,436 --> 00:07:04,876
我们将名称设置为


161
00:07:04,876 --> 00:07:06,446
医疗机构


162
00:07:06,606 --> 00:07:08,146
跟我们分享的名称


163
00:07:09,466 --> 00:07:10,546
并且我们提供了一个


164
00:07:10,546 --> 00:07:12,416
包标识符 它是一个能够


165
00:07:12,416 --> 00:07:14,096
使该医疗机构实现


166
00:07:14,096 --> 00:07:16,416
跨多个用户和多个设备登录的


167
00:07:16,416 --> 00:07:17,976
稳定的标识符


168
00:07:23,046 --> 00:07:24,626
所以现在


169
00:07:24,626 --> 00:07:25,136
我们已经看到了这个新的样本类型


170
00:07:25,806 --> 00:07:27,146
让我们来看看 你如何授权 App


171
00:07:27,146 --> 00:07:28,976
并查找数据的吧


172
00:07:37,246 --> 00:07:39,066
可以看到 这里有个装有丰富的


173
00:07:39,106 --> 00:07:41,666
医疗记录的庞大信息库


174
00:07:41,666 --> 00:07:44,556
并且我们认为


175
00:07:44,556 --> 00:07:45,766
这对你来说


176
00:07:45,766 --> 00:07:47,376
是一个能够为你的用户提供


177
00:07:47,376 --> 00:07:49,656
关于他们的健康数据的


178
00:07:49,686 --> 00:07:51,666
绝佳体验的


179
00:07:51,666 --> 00:07:52,026
千载难逢的机会


180
00:07:52,586 --> 00:07:56,686
但是当然了


181
00:07:56,776 --> 00:07:58,576
健康记录也含有


182
00:07:58,576 --> 00:08:00,136
令人难以置信的敏感信息


183
00:08:00,606 --> 00:08:02,806
用户的健康记录或许会


184
00:08:02,806 --> 00:08:05,116
包含着他们正在服用的


185
00:08:05,116 --> 00:08:06,446
药物的详细信息


186
00:08:06,446 --> 00:08:07,706
或者是他们每天的基本生活


187
00:08:07,706 --> 00:08:09,206
伴随着的一些状况


188
00:08:10,576 --> 00:08:12,196
这可能是他们


189
00:08:12,196 --> 00:08:13,866
不愿意与他们亲近的朋友或家人


190
00:08:13,866 --> 00:08:15,536
所分享的信息


191
00:08:16,406 --> 00:08:18,936
并且伴随着用户和医疗机构


192
00:08:18,936 --> 00:08:20,496
之间的交流 这种情况


193
00:08:20,496 --> 00:08:22,756
会随着时间的推移而发生变化


194
00:08:22,756 --> 00:08:25,246
他们或许会得到


195
00:08:25,246 --> 00:08:25,776
关于这个状况的新的诊断


196
00:08:27,196 --> 00:08:28,566
所以 为了能够更好地帮助我们的用户


197
00:08:28,566 --> 00:08:31,276
去理解和管理这些数据的


198
00:08:31,276 --> 00:08:33,166
访问 我们引入了


199
00:08:33,166 --> 00:08:36,936
一个具体针对健康记录的授权流程


200
00:08:38,135 --> 00:08:39,566
当你的 App 申请授权时


201
00:08:39,566 --> 00:08:41,846
我们会提供一个


202
00:08:41,846 --> 00:08:45,446
新的针对特定临床类型的许可表


203
00:08:46,836 --> 00:08:49,516
首先 我们告知用户


204
00:08:49,516 --> 00:08:51,346
在 App 上分享数据意味着什么


205
00:08:51,346 --> 00:08:53,666
并且告知用户


206
00:08:54,346 --> 00:08:55,766
它有多么敏感


207
00:08:55,966 --> 00:08:57,446
因为我们要使用这个新的授权流程


208
00:08:57,446 --> 00:08:59,576
所以无论何时 只要你申请授权


209
00:08:59,576 --> 00:09:01,946
你需要保证


210
00:09:01,946 --> 00:09:03,316
你的授权申请时间足够


211
00:09:03,316 --> 00:09:05,446
以确保你的用户能够


212
00:09:05,446 --> 00:09:06,716
充分地理解


213
00:09:06,776 --> 00:09:09,966
这个新的流程的内容


214
00:09:12,516 --> 00:09:15,446
在这之后


215
00:09:15,446 --> 00:09:17,146
我们允许用户


216
00:09:17,146 --> 00:09:18,466
从你已经提出请求的类别中


217
00:09:18,466 --> 00:09:20,976
选择他们想要和你的 App


218
00:09:20,976 --> 00:09:21,806
实现共享的数据类型


219
00:09:23,136 --> 00:09:25,776
我们还提出了一个


220
00:09:25,776 --> 00:09:28,146
新的目标字符串


221
00:09:28,146 --> 00:09:30,326
和在 App 解释说明部分中的


222
00:09:30,326 --> 00:09:30,916
你的 App 的隐私政策


223
00:09:31,526 --> 00:09:33,176
这是一个去向用户解释


224
00:09:33,176 --> 00:09:35,796
你为什么需要去访问数据


225
00:09:35,796 --> 00:09:37,886
你将用它来做什么


226
00:09:37,886 --> 00:09:39,756
和你将如何保护他们的数据的


227
00:09:39,756 --> 00:09:42,946
千载难逢的好机会


228
00:09:43,566 --> 00:09:45,196
你一定要确保


229
00:09:45,196 --> 00:09:46,606
你的要求和你的需要


230
00:09:46,646 --> 00:09:48,526
是成比例的


231
00:09:49,266 --> 00:09:50,316
用户真的会


232
00:09:50,316 --> 00:09:53,146
很惊讶并且担心是否


233
00:09:53,146 --> 00:09:55,216
他们在这里所看到的数据类型


234
00:09:55,216 --> 00:09:56,956
并不属于你的 App 的主要功能


235
00:09:57,566 --> 00:10:00,386
并且最终会因为


236
00:10:00,386 --> 00:10:02,366
用户和他们的医疗机构的互动


237
00:10:02,366 --> 00:10:03,856
而造成数据会随着时间发生变化


238
00:10:03,856 --> 00:10:06,966
我们正在引入一个


239
00:10:06,966 --> 00:10:09,526
新的方法来控制与你的 App


240
00:10:09,526 --> 00:10:11,296
共享新数据的方式


241
00:10:11,796 --> 00:10:13,886
我们默认会去询问


242
00:10:13,886 --> 00:10:16,646
之前每一次共享的每一个数据


243
00:10:18,056 --> 00:10:19,546
这意味着每当新的数据可用时


244
00:10:19,546 --> 00:10:21,796
我们可能需要


245
00:10:22,266 --> 00:10:24,346
提交新的许可表


246
00:10:25,076 --> 00:10:27,266
所以每当你需要查询数据的时候


247
00:10:27,266 --> 00:10:29,016
你都应该去


248
00:10:29,016 --> 00:10:30,846
申请相应的权限


249
00:10:35,286 --> 00:10:37,456
好 那么我该怎样开始


250
00:10:37,456 --> 00:10:39,046
并且请求权限呢


251
00:10:40,536 --> 00:10:42,106
这个流程看上去


252
00:10:42,106 --> 00:10:43,406
会让那些之前用过 HealthKit 的人


253
00:10:43,406 --> 00:10:44,836
觉得很熟悉


254
00:10:45,756 --> 00:10:49,906
首先 我需要配置这个项目


255
00:10:50,316 --> 00:10:53,036
在进行授权请求后


256
00:10:54,356 --> 00:10:55,976
最后查询数据


257
00:10:56,586 --> 00:11:00,766
为了配置你的项目


258
00:11:00,766 --> 00:11:02,626
你需要在启动 HealthKit 以后


259
00:11:02,626 --> 00:11:04,896
在 Xcode 中


260
00:11:05,696 --> 00:11:06,976
添加一个新的


261
00:11:11,186 --> 00:11:13,746
健康记录功能


262
00:11:13,746 --> 00:11:15,326
然后你在你的 Info.plist 中


263
00:11:15,396 --> 00:11:16,586
添加一个新的


264
00:11:16,586 --> 00:11:17,546
健康记录用法说明字符串


265
00:11:20,216 --> 00:11:22,426
再次说明 这是你的好机会


266
00:11:22,426 --> 00:11:24,426
去向用户解释


267
00:11:24,426 --> 00:11:26,036
你为什么需要得到数据


268
00:11:26,036 --> 00:11:27,226
和你将利用它来做什么


269
00:11:30,276 --> 00:11:31,836
完成上述步骤后


270
00:11:31,836 --> 00:11:33,096
你可以请求权限了


271
00:11:34,416 --> 00:11:36,986
我在这里定义


272
00:11:36,986 --> 00:11:39,036
我希望访问的类型 状态


273
00:11:40,226 --> 00:11:42,976
免疫接种和药物治疗


274
00:11:47,086 --> 00:11:48,606
然后你就可以


275
00:11:48,606 --> 00:11:50,206
在健康中心中


276
00:11:50,206 --> 00:11:50,676
调用授权请求


277
00:11:52,026 --> 00:11:53,806
请确保已经处理了所有错误


278
00:11:54,456 --> 00:11:57,066
在这之后 


279
00:11:57,066 --> 00:11:57,496
你便能够进行查找了


280
00:11:58,366 --> 00:12:00,496
你应该知道


281
00:12:00,496 --> 00:12:02,526
为了维护用户的隐私


282
00:12:02,976 --> 00:12:05,066
我们不会向你透露


283
00:12:05,176 --> 00:12:07,046
哪个分类是用户已准许访问的


284
00:12:07,046 --> 00:12:08,976
或是已拒绝访问的


285
00:12:14,046 --> 00:12:14,676
现在 让我们来说查询


286
00:12:14,896 --> 00:12:17,306
因为 HKClinicalRecord 是一个


287
00:12:17,306 --> 00:12:19,306
在 HealthKit 中


288
00:12:19,306 --> 00:12:21,296
你可以很好地利用


289
00:12:21,296 --> 00:12:22,506
所有的现有样本查询基础设施的


290
00:12:22,506 --> 00:12:23,036
HKSample


291
00:12:24,006 --> 00:12:25,406
SampleQuery 


292
00:12:25,826 --> 00:12:27,266
AnchoredObjectQuery 和


293
00:12:27,266 --> 00:12:29,936
ObserverQuery 都将正常工作


294
00:12:29,936 --> 00:12:31,366
并且如果你的用户已经准许


295
00:12:31,366 --> 00:12:33,476
后台连续访问


296
00:12:33,476 --> 00:12:37,706
delivery 也将正常工作


297
00:12:38,396 --> 00:12:40,296
再次说明 你定义了


298
00:12:40,296 --> 00:12:41,496
你希望查找的类型


299
00:12:42,256 --> 00:12:45,006
我们在这里正在创建一个查找示例


300
00:12:45,006 --> 00:12:48,836
并且你可以在健康中心执行它


301
00:12:53,076 --> 00:12:54,006
以上就是最基本的


302
00:12:54,006 --> 00:12:55,146
授权流程


303
00:12:55,606 --> 00:12:57,446
但我们已经介绍过了


304
00:12:57,446 --> 00:12:59,216
一些针对于健康记录的


305
00:12:59,216 --> 00:13:00,856
特定的额外机制


306
00:13:01,516 --> 00:13:05,996
对于授权 我们有一个


307
00:13:06,036 --> 00:13:08,016
新的 API 获取请求


308
00:13:08,016 --> 00:13:09,696
它允许你去确定


309
00:13:09,696 --> 00:13:11,486
我们是否去向用户


310
00:13:11,616 --> 00:13:12,306
展示许可表


311
00:13:14,356 --> 00:13:17,246
这给了你一个机会去


312
00:13:18,186 --> 00:13:19,926
确定你的用户是否


313
00:13:19,926 --> 00:13:21,566
需要去看这个许可表


314
00:13:21,566 --> 00:13:23,676
并且选择性地展示一个 UI 


315
00:13:23,676 --> 00:13:26,116
以便在授权前给他们提供


316
00:13:26,116 --> 00:13:27,866
更多的信息


317
00:13:31,136 --> 00:13:33,636
为了做到这一点 你可以去健康中心


318
00:13:33,676 --> 00:13:35,356
访问授权请求状态


319
00:13:35,356 --> 00:13:38,436
处理错误


320
00:13:39,036 --> 00:13:42,576
并且如果请求状态是


321
00:13:42,576 --> 00:13:44,396
可以请求的话 你可以


322
00:13:44,396 --> 00:13:47,016
选择在请求权限之前


323
00:13:47,106 --> 00:13:47,976
去展示 UI


324
00:13:52,416 --> 00:13:54,456
现在 可能也会有一些


325
00:13:54,456 --> 00:13:56,006
你的 App 所需要访问的


326
00:13:56,006 --> 00:13:58,526
数据类型 来保证安全


327
00:13:58,576 --> 00:14:01,366
又或者你如果有一个需要


328
00:14:01,366 --> 00:14:04,266
获得全面的一系列类型的


329
00:14:04,266 --> 00:14:06,926
研究型 App 来


330
00:14:06,926 --> 00:14:09,056
避免有误差的结果


331
00:14:10,816 --> 00:14:13,636
我们在 Info.plist 中


332
00:14:13,636 --> 00:14:15,426
有一个新的允许你去指定这些类型


333
00:14:15,426 --> 00:14:17,276
所必需的键


334
00:14:18,136 --> 00:14:20,216
并且如果用户没有准许给这些类型授权


335
00:14:20,216 --> 00:14:22,186
可它们仍然在的话


336
00:14:22,366 --> 00:14:24,666
我们将返回一个


337
00:14:24,666 --> 00:14:26,656
新的所需类型错误


338
00:14:27,086 --> 00:14:28,656
这能够让你确定


339
00:14:28,656 --> 00:14:31,136
如何去表现


340
00:14:31,136 --> 00:14:32,376
去选择性地去向用户解释


341
00:14:32,376 --> 00:14:33,966
如果你没有这个数据的话


342
00:14:33,966 --> 00:14:34,636
你就不能够继续


343
00:14:39,066 --> 00:14:40,406
你可以通过在你的 Info.plist 中


344
00:14:40,406 --> 00:14:42,086
添加新的所需的


345
00:14:42,086 --> 00:14:43,496
阅读权限密钥


346
00:14:43,496 --> 00:14:44,536
来实现它


347
00:14:45,866 --> 00:14:47,426
在这里我说我需要


348
00:14:47,426 --> 00:14:49,606
过敏 当前状态


349
00:14:49,606 --> 00:14:50,726
和免疫接种的信息


350
00:14:51,316 --> 00:14:54,436
然后你在


351
00:14:54,436 --> 00:14:56,606
授权请求中


352
00:14:56,606 --> 00:14:56,926
处理新的错误


353
00:15:01,056 --> 00:15:02,056
你要确保能够明智地使用它


354
00:15:02,116 --> 00:15:05,006
并且尽量不去限制


355
00:15:05,006 --> 00:15:08,826
基于你可访问数据的


356
00:15:08,826 --> 00:15:09,086
App 的功能


357
00:15:09,866 --> 00:15:11,466
你真的想要确定


358
00:15:11,466 --> 00:15:13,196
无论你的用户想要


359
00:15:13,196 --> 00:15:14,406
分享多少数据


360
00:15:14,786 --> 00:15:16,326
都有尽可能多的用户


361
00:15:16,326 --> 00:15:16,976
能够从你的 App 中受益


362
00:15:22,046 --> 00:15:23,546
所以这是一个完整的授权流量


363
00:15:23,546 --> 00:15:25,536
并且这里有一些


364
00:15:25,536 --> 00:15:27,116
我希望去关注的点


365
00:15:28,406 --> 00:15:30,966
首先 你应该确保无论何时


366
00:15:30,966 --> 00:15:32,746
每一次你想要访问数据


367
00:15:32,746 --> 00:15:34,316
你都需要去请求权限


368
00:15:34,316 --> 00:15:37,296
尤其是现在


369
00:15:37,296 --> 00:15:39,456
因为用户可能希望每次有新数据进入时


370
00:15:39,526 --> 00:15:41,386
都查看这个许可表


371
00:15:41,386 --> 00:15:44,106
因此我们可能 要在每次你需要查找的时候


372
00:15:44,106 --> 00:15:45,756
去呈现这个许可表


373
00:15:48,106 --> 00:15:49,346
你还应该确保


374
00:15:49,346 --> 00:15:51,356
这个请求只会访问


375
00:15:51,356 --> 00:15:52,166
你需要的数据


376
00:15:52,726 --> 00:15:56,266
并且最后 你应该


377
00:15:56,266 --> 00:15:58,356
通过充分利用新的 API  


378
00:15:58,736 --> 00:15:59,906
来为用户提供更好的使用环境


379
00:15:59,906 --> 00:16:02,066
也为你自己


380
00:16:02,066 --> 00:16:03,456
提供充足的时间来验证请求


381
00:16:08,056 --> 00:16:08,976
我想要把


382
00:16:08,976 --> 00:16:10,756
下面的内容交给我的同事 Peyton


383
00:16:11,026 --> 00:16:12,396
让大家来看一下 他能够用我说的这些新改进


384
00:16:12,396 --> 00:16:14,026
在他的 App 里做些什么 谢谢


385
00:16:16,266 --> 00:16:16,866
>> 谢谢你 Jason


386
00:16:17,696 --> 00:16:18,846
我正在忙于一个


387
00:16:18,846 --> 00:16:20,166
为登山者们的下一次登山


388
00:16:20,166 --> 00:16:20,906
进行训练的 App 


389
00:16:21,656 --> 00:16:24,036
我已经得到一个


390
00:16:24,036 --> 00:16:26,436
包括我的所有用户走路 徒步旅行和


391
00:16:26,436 --> 00:16:27,686
爬楼梯训练的


392
00:16:27,686 --> 00:16:28,226
HealthKit 动力视图


393
00:16:28,916 --> 00:16:31,116
现在 经过广泛的市场调查


394
00:16:31,116 --> 00:16:33,266
我已经确定了


395
00:16:33,266 --> 00:16:35,156
那些去登山的登山者们


396
00:16:35,156 --> 00:16:37,786
是去山上旅行


397
00:16:38,356 --> 00:16:40,106
而旅行者应该知道他们的疫苗接种状态


398
00:16:40,486 --> 00:16:42,096
因此 通过未来发展的


399
00:16:42,096 --> 00:16:43,746
传递特性


400
00:16:43,746 --> 00:16:45,236
登山者们应该知道


401
00:16:45,236 --> 00:16:46,466
他们的疫苗接种状态


402
00:16:46,886 --> 00:16:48,646
所以 我将帮助我的用户们


403
00:16:49,156 --> 00:16:50,646
我已经开始进行一项新的实验


404
00:16:50,646 --> 00:16:52,646
一个免疫仪表板


405
00:16:53,306 --> 00:16:54,936
所以 请允许我


406
00:16:54,936 --> 00:16:55,146
点击一下这个


407
00:16:55,696 --> 00:16:58,526
这是我的免疫仪表板


408
00:16:58,526 --> 00:17:00,346
首先我将


409
00:17:00,346 --> 00:17:02,216
为我的用户展示


410
00:17:02,216 --> 00:17:04,286
他们目前的疫苗接种


411
00:17:04,286 --> 00:17:05,915
并且我将用这个


412
00:17:05,915 --> 00:17:07,836
HKClinicalRecords 来显示名称属性


413
00:17:08,646 --> 00:17:09,986
我已经在我的项目中


414
00:17:09,986 --> 00:17:11,866
添加了健康记录功能


415
00:17:12,156 --> 00:17:14,516
并且我已经创建了一个目标字符串


416
00:17:14,516 --> 00:17:16,195
来告诉我的用户们我要如何


417
00:17:16,195 --> 00:17:17,596
使用他们的免疫接种记录


418
00:17:18,516 --> 00:17:20,836
现在是时候来展示我的仪表板了


419
00:17:21,816 --> 00:17:22,695
所以现在 我正在


420
00:17:22,695 --> 00:17:24,195
ImmunizationsViewController 中


421
00:17:24,296 --> 00:17:25,256
使用这个面板


422
00:17:25,976 --> 00:17:27,856
在 HealthKit 中


423
00:17:28,006 --> 00:17:29,806
每次你的用户进入要用到 HealthKit 的 App


424
00:17:29,806 --> 00:17:31,486
的部分时都要请求权限


425
00:17:31,486 --> 00:17:33,496
是非常好的一个做法


426
00:17:34,086 --> 00:17:36,526
所以对于这个 App 来说


427
00:17:36,676 --> 00:17:37,456
ViewWillAppear 是个很棒的地方


428
00:17:38,836 --> 00:17:43,156
在这里 首先我需要说明


429
00:17:43,956 --> 00:17:44,776
我对于免疫记录样本


430
00:17:44,776 --> 00:17:46,256
很感兴趣


431
00:17:46,886 --> 00:17:50,816
接下来 调用我的


432
00:17:50,816 --> 00:17:52,306
健康中心的 requestAuthorization 方法


433
00:17:53,356 --> 00:17:54,786
在回调中 我将检查是否成功


434
00:17:54,786 --> 00:17:56,906
并且恰当地


435
00:17:56,906 --> 00:17:57,846
去处理错误


436
00:17:59,196 --> 00:18:01,476
最终 一旦我未经授权


437
00:18:02,086 --> 00:18:03,376
我将去调用这个


438
00:18:03,376 --> 00:18:04,726
我即将执行的


439
00:18:04,726 --> 00:18:06,576
查询免疫的方法


440
00:18:06,806 --> 00:18:08,466
在这个免疫接种查询中


441
00:18:08,716 --> 00:18:09,946
我将创建一个示例


442
00:18:09,946 --> 00:18:12,046
我将去遍历所有的返回样本


443
00:18:12,046 --> 00:18:13,656
并且我将让


444
00:18:13,656 --> 00:18:15,346
每一个样本的显示名称


445
00:18:15,346 --> 00:18:16,916
都通过我的数据源


446
00:18:17,526 --> 00:18:17,976
好了让我们开始吧


447
00:18:22,116 --> 00:18:23,666
在这里 我已经得到了我的查询样本


448
00:18:24,016 --> 00:18:25,716
并且我正在使用人类


449
00:18:25,716 --> 00:18:27,246
样本记录类型


450
00:18:28,166 --> 00:18:30,686
不需要足够确定 因为我想要


451
00:18:30,686 --> 00:18:32,656
所有用户的免疫接种


452
00:18:32,656 --> 00:18:35,316
并且同样没有限制因为


453
00:18:35,316 --> 00:18:36,636
我想要得到


454
00:18:36,936 --> 00:18:37,526
所有用户的免疫接种


455
00:18:37,986 --> 00:18:40,266
没有排序描述符


456
00:18:40,266 --> 00:18:41,856
这些样本以什么顺序返回


457
00:18:41,856 --> 00:18:42,616
对我来说没有关系


458
00:18:43,496 --> 00:18:45,916
并且我要根据这来检查结果


459
00:18:46,256 --> 00:18:48,556
和看是否存在


460
00:18:48,556 --> 00:18:49,426
没有被合适处理的错误


461
00:18:50,806 --> 00:18:52,936
接下来 我要遍历一遍样本


462
00:18:52,936 --> 00:18:55,216
并且我将根据显示名称让


463
00:18:55,446 --> 00:18:57,396
这些样本


464
00:18:57,966 --> 00:18:58,056
通过我的数据源


465
00:19:00,496 --> 00:19:02,116
有了我的数据源里的这些名称


466
00:19:02,936 --> 00:19:03,816
便是时候去主队列


467
00:19:03,816 --> 00:19:06,536
调用这个我之前写的


468
00:19:06,536 --> 00:19:08,456
重加载的 UI 方法了


469
00:19:09,816 --> 00:19:12,766
最后 我要在健康中心中


470
00:19:12,766 --> 00:19:14,306
执行我的这个样本查找


471
00:19:15,076 --> 00:19:15,976
以上就是整个过程


472
00:19:16,446 --> 00:19:16,976
现在让我们来建立并运行它吧


473
00:19:21,066 --> 00:19:22,336
所以 这是我的训练日志


474
00:19:22,786 --> 00:19:23,636
我将要点击我的


475
00:19:23,636 --> 00:19:24,916
免疫仪表板选项


476
00:19:25,366 --> 00:19:26,686
我看到一个新的健康记录授权表 


477
00:19:26,686 --> 00:19:28,776
它向我的用户解释


478
00:19:28,776 --> 00:19:31,276
我的 App 可能会如何


479
00:19:31,446 --> 00:19:33,896
使用用户的健康记录的


480
00:19:34,916 --> 00:19:37,306
我要点击继续


481
00:19:37,306 --> 00:19:39,596
然后在这里 我的用户可以


482
00:19:39,786 --> 00:19:41,686
准许或拒绝


483
00:19:41,686 --> 00:19:42,156
他们觉得合适的类别


484
00:19:42,966 --> 00:19:44,536
这是我早些时候


485
00:19:44,536 --> 00:19:45,976
在我的 Info.plist 中


486
00:19:45,976 --> 00:19:47,796
伴随着一个我的 App 隐私政策的链接


487
00:19:47,796 --> 00:19:48,956
所定义的目标字符串


488
00:19:49,896 --> 00:19:51,836
现在用户必须明确地


489
00:19:52,026 --> 00:19:53,556
切换每一个单一类别


490
00:19:53,556 --> 00:19:55,776
没有一个可以


491
00:19:55,776 --> 00:19:56,166
一次性打开所有类别的按钮


492
00:19:57,256 --> 00:19:59,306
所以 出于这次演示的目的


493
00:19:59,486 --> 00:20:00,386
我打算启用免疫接种


494
00:20:00,386 --> 00:20:02,766
并且去分享现在的记录


495
00:20:03,246 --> 00:20:05,056
至于未来的记录


496
00:20:05,306 --> 00:20:06,746
我将把它设成默认为在分享前进行询问


497
00:20:06,746 --> 00:20:08,506
然后我点击完成


498
00:20:09,016 --> 00:20:12,076
然后 就像这样 我拥有了一个


499
00:20:12,076 --> 00:20:13,806
我所有用户的免疫接种清单


500
00:20:13,806 --> 00:20:14,916
所以 这只是


501
00:20:15,516 --> 00:20:20,586
[ 掌声 ]


502
00:20:21,086 --> 00:20:22,146
所以这只是使用显示名称


503
00:20:22,146 --> 00:20:23,126
但是还有很多信息


504
00:20:23,126 --> 00:20:24,626
包含在拥有


505
00:20:24,626 --> 00:20:27,536
临床记录的 FHIR 资源当中


506
00:20:27,926 --> 00:20:29,166
所以 为了让你了解更多关于 FHIR 的信息


507
00:20:29,166 --> 00:20:30,066
我将把接下来的部分


508
00:20:30,066 --> 00:20:30,416
交还给 Jason


509
00:20:31,576 --> 00:20:32,196
>> 谢谢你 Peyton


510
00:20:32,846 --> 00:20:35,756
好了 Peyton 刚才给我们展示了


511
00:20:35,756 --> 00:20:38,026
在我们的 App 中 我们如何去申请权限


512
00:20:38,026 --> 00:20:41,286
如何查找数据


513
00:20:41,286 --> 00:20:43,266
以及如何在 HKClinicalRecord 上


514
00:20:43,266 --> 00:20:45,556
利用新的显示名称


515
00:20:45,556 --> 00:20:47,086
以用户们所熟悉的方法


516
00:20:47,086 --> 00:20:48,976
去显示信息


517
00:20:53,356 --> 00:20:56,116
所以 现在让我们来看看 FHIR


518
00:20:56,116 --> 00:20:57,536
以及你能够用这种


519
00:20:57,536 --> 00:21:02,626
丰富的数据格式来做些什么


520
00:21:02,626 --> 00:21:04,586
用户在一生中会与多个


521
00:21:04,586 --> 00:21:06,026
医疗保健机构进行交流


522
00:21:06,026 --> 00:21:08,446
并且它们经常运用


523
00:21:08,446 --> 00:21:10,526
不同的电子健康记录系统


524
00:21:10,526 --> 00:21:12,446
而这些系统


525
00:21:13,326 --> 00:21:15,856
并不总是以同样的方式


526
00:21:15,856 --> 00:21:16,936
来表示数据


527
00:21:17,586 --> 00:21:19,426
这便使得交互操作性


528
00:21:19,426 --> 00:21:20,536
变得非常困难


529
00:21:21,066 --> 00:21:25,016
所以为了解决这个问题


530
00:21:25,016 --> 00:21:26,516
医疗团体为了一个叫做


531
00:21:26,516 --> 00:21:27,996
Argonaut 的项目


532
00:21:27,996 --> 00:21:30,626
而聚集了起来


533
00:21:30,626 --> 00:21:33,076
这个项目利用 FHIR 


534
00:21:33,076 --> 00:21:36,556
一个灵活的表示健康记录的 JSON 表示


535
00:21:36,616 --> 00:21:38,416
并且 [ 音质不清晰 ] 


536
00:21:38,416 --> 00:21:40,936
如智能授权指南中所定义的那样


537
00:21:40,936 --> 00:21:43,646
允许连接


538
00:21:43,646 --> 00:21:45,196
与医疗机构保持持续性连接


539
00:21:45,196 --> 00:21:47,256
并且允许数据


540
00:21:47,256 --> 00:21:49,016
在一个共同格式下


541
00:21:49,016 --> 00:21:51,676
跨越多个相关的机构


542
00:21:51,676 --> 00:21:53,046
被下载下来


543
00:21:54,916 --> 00:21:58,826
FHIR 本身模拟了


544
00:21:58,886 --> 00:22:01,556
从过敏不耐症到


545
00:22:01,656 --> 00:22:04,846
视觉处方的庞大的健康数据


546
00:22:04,846 --> 00:22:08,456
并且它将这些数据


547
00:22:08,456 --> 00:22:10,196
组成不同的数据类型


548
00:22:10,196 --> 00:22:12,316
我们把这些数据类型叫做资源


549
00:22:13,046 --> 00:22:14,966
每个资源都有一个资源类型


550
00:22:14,966 --> 00:22:16,396
并且每个健康数据也


551
00:22:16,396 --> 00:22:20,996
都有一个资源类型


552
00:22:21,776 --> 00:22:23,846
如今 我们正在选择八个


553
00:22:24,046 --> 00:22:26,256
最常见的资源类型


554
00:22:26,256 --> 00:22:27,486
并且这些都是在


555
00:22:27,486 --> 00:22:29,636
Argonaut 项目中定义的


556
00:22:29,636 --> 00:22:31,336
我们将它们分成


557
00:22:31,336 --> 00:22:33,066
我们之前看到的


558
00:22:33,066 --> 00:22:33,926
七种不同的临床类型


559
00:22:35,096 --> 00:22:36,046
你会发现我们将


560
00:22:36,046 --> 00:22:39,756
得到的观测数据分成实验结果


561
00:22:39,756 --> 00:22:41,456
和基于分类的生命特征


562
00:22:41,456 --> 00:22:45,006
并且我们将


563
00:22:45,006 --> 00:22:47,006
多种药物资源类型


564
00:22:47,006 --> 00:22:51,956
归入药物类别


565
00:22:52,066 --> 00:22:54,846
因此 FHIR 将数据


566
00:22:54,846 --> 00:22:56,666
表示为一个 JSON 字典


567
00:22:56,666 --> 00:22:58,376
并且有一些关键属性


568
00:22:58,376 --> 00:23:00,666
会在所有的 FHIR 资源当中表现出来


569
00:23:01,816 --> 00:23:03,496
比如资源类型


570
00:23:04,196 --> 00:23:05,096
在这里我们看到的是一个观测数据


571
00:23:05,096 --> 00:23:08,356
并且它告诉我们


572
00:23:08,356 --> 00:23:09,806
在健康的情况下


573
00:23:09,996 --> 00:23:12,006
这是一个实验结果


574
00:23:12,006 --> 00:23:12,426
还是一个生命特征


575
00:23:14,896 --> 00:23:17,686
我们也有一个代表


576
00:23:17,766 --> 00:23:19,286
所有资源类型的 ID


577
00:23:20,246 --> 00:23:22,836
这是一个属于这个资源的


578
00:23:22,836 --> 00:23:24,346
独一无二的标识符


579
00:23:24,346 --> 00:23:26,096
但是你应该注意它只是


580
00:23:26,096 --> 00:23:27,626
在这个医疗机构中的


581
00:23:27,626 --> 00:23:29,326
这个资源类型里


582
00:23:29,326 --> 00:23:30,526
是独一无二的


583
00:23:35,436 --> 00:23:36,806
FHIR 的最基本的一个


584
00:23:36,806 --> 00:23:39,266
建筑模块就是编码


585
00:23:40,736 --> 00:23:43,016
这允许我们对


586
00:23:43,016 --> 00:23:45,216
外部编码系统中的


587
00:23:46,016 --> 00:23:48,176
唯一标识符或者编码


588
00:23:48,176 --> 00:23:48,806
能有一个参考


589
00:23:49,496 --> 00:23:50,816
有大量的在 FHIR 中


590
00:23:50,816 --> 00:23:52,776
指定的编码系统


591
00:23:52,776 --> 00:23:55,466
你可以用这些来


592
00:23:55,466 --> 00:23:57,106
找到更多在医学记录中


593
00:23:57,106 --> 00:23:58,346
所涉及的


594
00:23:58,346 --> 00:24:01,976
或是跨多个医疗机构


595
00:24:01,976 --> 00:24:03,426
相关联的


596
00:24:03,426 --> 00:24:04,826
项目信息


597
00:24:05,346 --> 00:24:09,496
在这里 我们实际上是在看一个


598
00:24:09,546 --> 00:24:12,196
类别编码 


599
00:24:12,196 --> 00:24:13,506
它告诉我们 这是一个实验结果


600
00:24:15,816 --> 00:24:18,056
当然这里还有一个


601
00:24:18,056 --> 00:24:20,466
针对于正在被测量的内容的代码


602
00:24:22,296 --> 00:24:25,376
这是在 LOINC 编码系统中


603
00:24:25,636 --> 00:24:27,806
定义的血糖


604
00:24:27,806 --> 00:24:29,266
它能够使用这段代码


605
00:24:29,266 --> 00:24:31,316
并且在 LOINC 数据库中


606
00:24:31,316 --> 00:24:32,956
查找能够替代的名称


607
00:24:32,956 --> 00:24:33,526
和更多的信息


608
00:24:34,076 --> 00:24:38,216
当然了这是一个观测


609
00:24:38,216 --> 00:24:39,966
所以我拥有


610
00:24:39,966 --> 00:24:41,076
被观察到的值


611
00:24:41,386 --> 00:24:42,786
这是每分升 60 毫克


612
00:24:42,786 --> 00:24:44,676
并且你会注意到


613
00:24:44,676 --> 00:24:46,376
即使单位都被编码过了


614
00:24:46,376 --> 00:24:49,816
我对于正在发生的事情


615
00:24:49,816 --> 00:24:49,976
有一个非常全面的了解


616
00:24:54,076 --> 00:24:56,376
FHIR 资源有很多


617
00:24:56,376 --> 00:24:59,586
额外的数据元素


618
00:24:59,586 --> 00:25:01,036
并且我鼓励你们去看看


619
00:25:01,036 --> 00:25:02,006
Argonaut 项目的文档


620
00:25:02,006 --> 00:25:04,026
来了解更多的信息


621
00:25:04,026 --> 00:25:06,146
我将在最后


622
00:25:06,636 --> 00:25:08,966
详细介绍这些


623
00:25:08,966 --> 00:25:10,716
在 HealthKit 中我们建模了一个 FHIR 资源


624
00:25:10,716 --> 00:25:12,896
来作为 HKFHIRResource


625
00:25:13,926 --> 00:25:15,606
我们提供了一些关键属性


626
00:25:15,826 --> 00:25:18,126
比如数据和对于完整的


627
00:25:18,126 --> 00:25:19,536
原始数据的访问通道


628
00:25:21,376 --> 00:25:23,596
我们表示出像


629
00:25:23,596 --> 00:25:26,206
资源类型和标识符


630
00:25:26,206 --> 00:25:26,806
这样的常见元素


631
00:25:27,426 --> 00:25:32,306
你可以利用可编码 Swift 或


632
00:25:32,306 --> 00:25:34,186
JSON 序列化


633
00:25:34,186 --> 00:25:35,186
来访问这些数据


634
00:25:35,916 --> 00:25:37,156
在这里 你可以看到


635
00:25:37,156 --> 00:25:39,076
我已经定义了我自己的可编码结构


636
00:25:39,336 --> 00:25:42,046
我的可编码观测


637
00:25:42,046 --> 00:25:43,656
并且我正在用它来


638
00:25:43,656 --> 00:25:44,966
寻找之前我们看到的量化值


639
00:25:45,516 --> 00:25:49,166
你可以认为


640
00:25:49,166 --> 00:25:50,906
数据结构是正确的


641
00:25:50,906 --> 00:25:53,606
因为我们只通过 API 


642
00:25:53,606 --> 00:25:57,726
分享有效的 FHIR 资源


643
00:25:58,196 --> 00:25:59,136
我们也引进了一些


644
00:25:59,136 --> 00:26:00,556
更为确定的信息 来使得你可以


645
00:26:00,556 --> 00:26:01,356
更好地操作


646
00:26:01,356 --> 00:26:02,566
HKClinicalRecord


647
00:26:03,316 --> 00:26:05,046
我们有一个允许你去


648
00:26:05,046 --> 00:26:08,316
按资源类型查找的推断


649
00:26:08,396 --> 00:26:10,686
在这里我在查找处方


650
00:26:10,686 --> 00:26:12,866
或者是 FHIR 的医疗订单


651
00:26:15,216 --> 00:26:16,766
我们同样也有一个


652
00:26:16,766 --> 00:26:18,716
允许你去通过其来源 资源类型


653
00:26:19,206 --> 00:26:20,946
以及标识符


654
00:26:21,166 --> 00:26:23,076
来获得唯一标识记录的推断


655
00:26:23,716 --> 00:26:25,416
这会是非常有用的


656
00:26:25,416 --> 00:26:27,066
因为 FHIR 资源能够 


657
00:26:27,156 --> 00:26:28,636
参考其他的 FHIR 资源


658
00:26:29,046 --> 00:26:30,926
例如 一个药物可能会


659
00:26:30,926 --> 00:26:32,436
参考它要


660
00:26:32,486 --> 00:26:32,956
治疗的情况


661
00:26:37,116 --> 00:26:38,346
现在 这里有一些


662
00:26:38,346 --> 00:26:39,686
当你去操作 FHIR 时你需要


663
00:26:39,686 --> 00:26:41,096
知道的额外的事项


664
00:26:42,726 --> 00:26:44,846
首先 FHIR 资源可能


665
00:26:44,846 --> 00:26:46,906
包含他们自己的日期


666
00:26:47,466 --> 00:26:49,136
举个例子 处方中可能会


667
00:26:49,136 --> 00:26:50,606
包含处方的订单数据


668
00:26:50,606 --> 00:26:52,766
而身体状况中


669
00:26:53,006 --> 00:26:54,766
可能会包含开始日期


670
00:26:54,906 --> 00:26:56,626
消减日期以及


671
00:26:56,626 --> 00:26:58,566
首次检查时的处方日期


672
00:26:59,586 --> 00:27:01,016
因此 你应该直接使用 FHIR 资源


673
00:27:01,016 --> 00:27:03,726
去为每一个


674
00:27:03,756 --> 00:27:05,356
资源类型来


675
00:27:05,396 --> 00:27:05,676
访问这些日期


676
00:27:06,746 --> 00:27:08,436
在 HKSample 的超类中


677
00:27:08,436 --> 00:27:09,786
可获得的开始日期和截止日期


678
00:27:09,786 --> 00:27:11,716
被设置为我们


679
00:27:11,716 --> 00:27:14,096
第一次在 Health 中


680
00:27:14,966 --> 00:27:16,000
加入那个资源的日期


681
00:27:18,186 --> 00:27:20,046
当你去判断一个独一无二的


682
00:27:20,046 --> 00:27:21,556
健康记录时


683
00:27:21,556 --> 00:27:23,856
你应该去使用源代码 资源


684
00:27:23,856 --> 00:27:24,346
类型和标识符


685
00:27:24,756 --> 00:27:26,476
这允许你在


686
00:27:26,476 --> 00:27:27,506
医疗机构


687
00:27:27,506 --> 00:27:29,636
更新的过程中


688
00:27:29,636 --> 00:27:31,736
识别健康记录的整个生命周期


689
00:27:32,156 --> 00:27:36,666
并且最终 你应该知道


690
00:27:36,666 --> 00:27:39,536
就数值精确度而言


691
00:27:39,536 --> 00:27:41,486
FHIR 和 JSON


692
00:27:41,486 --> 00:27:42,086
并不完全统一


693
00:27:43,286 --> 00:27:45,426
FHIR 将小数点后面的


694
00:27:45,426 --> 00:27:47,316
数字的个数赋予了重要性


695
00:27:47,316 --> 00:27:48,916
并且当你使用可编码 Swift 或


696
00:27:48,916 --> 00:27:50,986
JSON 序列化时


697
00:27:51,166 --> 00:27:52,666
它可能会丢失


698
00:27:53,176 --> 00:27:54,976
如果对于你的 App 来说


699
00:27:54,976 --> 00:27:57,396
这些信息


700
00:27:57,396 --> 00:28:00,116
非常重要的话


701
00:28:00,116 --> 00:28:01,856
那么可编码 Swift和 JSON 序列化


702
00:28:02,006 --> 00:28:03,576
或许并不是很合适的工具


703
00:28:04,596 --> 00:28:06,646
就此而言 我很乐意让


704
00:28:06,646 --> 00:28:08,496
Peyton 回来继续他的演讲


705
00:28:08,496 --> 00:28:10,376
来让我们看一下通过这个新的 API


706
00:28:10,376 --> 00:28:18,606
他都能做些什么 [ 掌声 ]


707
00:28:19,106 --> 00:28:19,686
>> 谢谢你 Jason


708
00:28:20,636 --> 00:28:21,896
那么回到之前我一直在从事的


709
00:28:21,896 --> 00:28:23,186
免疫接种仪表板上


710
00:28:23,726 --> 00:28:25,526
我正在使用 HealthKit 去获取


711
00:28:25,526 --> 00:28:27,316
我的用户的疫苗接种


712
00:28:27,316 --> 00:28:28,826
但是现在 对于用户来讲


713
00:28:28,826 --> 00:28:30,696
他们很难知道 他们有什么疫苗接种


714
00:28:30,766 --> 00:28:31,846
以及他们可能会需要接种什么疫苗


715
00:28:31,846 --> 00:28:34,616
所以我将会通过


716
00:28:34,616 --> 00:28:36,436
一个疫苗接种清单


717
00:28:36,656 --> 00:28:37,346
来解决这个问题


718
00:28:37,866 --> 00:28:39,466
用户们可以看到用


719
00:28:39,466 --> 00:28:41,706
通俗语言说明的 他们的疫苗简介


720
00:28:43,126 --> 00:28:44,816
要填充这个表的话 我需要知道的是


721
00:28:44,816 --> 00:28:46,016
这个组合疫苗


722
00:28:46,016 --> 00:28:51,136
增加抵抗水痘和 MMR 的免疫力


723
00:28:51,756 --> 00:28:54,016
卫生机构讲着不同的语言


724
00:28:54,016 --> 00:28:55,926
所以我不能仅仅


725
00:28:55,926 --> 00:28:58,596
依赖于名字


726
00:28:58,596 --> 00:28:59,806
所以 这就是 FHIR 的互操作性


727
00:28:59,806 --> 00:29:00,856
所扮演的角色


728
00:29:01,856 --> 00:29:03,356
FHIR 提供了一种方式去


729
00:29:03,416 --> 00:29:05,066
使用预定义代码而不是


730
00:29:05,066 --> 00:29:07,616
自然语言 来说明事物


731
00:29:09,156 --> 00:29:11,106
所以 在看过 FHIR 文件以后


732
00:29:11,106 --> 00:29:13,326
这便是我想到的


733
00:29:13,326 --> 00:29:14,806
能够用来


734
00:29:14,806 --> 00:29:16,736
识别水痘疫苗的算法


735
00:29:18,636 --> 00:29:20,066
首先 我将从 JSON 中


736
00:29:20,066 --> 00:29:23,406
得到免疫记录


737
00:29:23,406 --> 00:29:25,176
我将把它反序列化 


738
00:29:25,176 --> 00:29:27,046
并在 CVX 系统中


739
00:29:27,046 --> 00:29:28,646
提取疫苗代码


740
00:29:29,306 --> 00:29:31,006
CVX 是一种在免疫接种中


741
00:29:31,006 --> 00:29:32,646
常用的编码系统


742
00:29:32,646 --> 00:29:33,856
还有很多其他的


743
00:29:33,856 --> 00:29:35,616
针对不同医学领域的编码系统


744
00:29:36,916 --> 00:29:38,726
最后 我将把我在免疫接种记录中


745
00:29:38,806 --> 00:29:40,286
发现的 CVX 码和我所知道的


746
00:29:40,286 --> 00:29:42,486
能够增强对水痘的免疫力的


747
00:29:42,486 --> 00:29:44,676
疫苗清单


748
00:29:44,676 --> 00:29:45,546
进行比较


749
00:29:45,916 --> 00:29:47,636
如果它们互相匹配


750
00:29:47,636 --> 00:29:50,376
我会在我的 UI 中 水痘的旁边做一个标记


751
00:29:50,806 --> 00:29:52,976
所以 接下来让我们来讨论一下


752
00:29:52,976 --> 00:29:53,946
免疫记录 JSON


753
00:29:58,046 --> 00:29:59,956
这个结构以一个


754
00:29:59,956 --> 00:30:01,806
资源类型免疫接种开始


755
00:30:02,316 --> 00:30:05,966
这里有一个疫苗代码对象


756
00:30:07,356 --> 00:30:09,986
包含一个数组的编码


757
00:30:10,506 --> 00:30:12,566
也许会出现多个编码


758
00:30:13,556 --> 00:30:16,556
所以我需要去通过系统查找


759
00:30:16,556 --> 00:30:17,526
来找到 CVX


760
00:30:18,186 --> 00:30:19,616
在这个例子中


761
00:30:19,616 --> 00:30:23,186
第一个系统是 NDC 


762
00:30:23,186 --> 00:30:24,076
所以我往下找直到看到 CVX


763
00:30:25,086 --> 00:30:27,026
就这样我不断查找


764
00:30:27,026 --> 00:30:29,906
然后我就会看见


765
00:30:29,906 --> 00:30:30,916
我有 MMRV


766
00:30:31,476 --> 00:30:34,886
这就是这些


767
00:30:34,886 --> 00:30:36,176
免疫记录 JSON 的结构


768
00:30:37,026 --> 00:30:38,906
现在是时候来实践了


769
00:30:39,856 --> 00:30:41,646
所以我们现在回到


770
00:30:41,646 --> 00:30:42,956
我的免疫视图控制器中


771
00:30:43,676 --> 00:30:44,796
我已经提前完成了一些工作


772
00:30:44,796 --> 00:30:47,156
来使用这个清单的 UI


773
00:30:47,156 --> 00:30:50,766
并且我用


774
00:30:51,046 --> 00:30:52,596
showChecklist 属性实例化了它


775
00:30:52,596 --> 00:30:57,076
那么现在 是时候来用数据


776
00:30:57,076 --> 00:30:57,826
来填充我的清单了


777
00:30:59,226 --> 00:31:00,856
现在我在这个


778
00:31:00,856 --> 00:31:01,736
免疫方法的查询中


779
00:31:02,776 --> 00:31:04,226
当我对我的用户样本进行遍历时


780
00:31:04,226 --> 00:31:06,086
我将在一个叫做


781
00:31:06,086 --> 00:31:06,756
matchCodedVaccine 的新方法中


782
00:31:07,596 --> 00:31:09,786
添加一个调用 并且如果


783
00:31:09,786 --> 00:31:10,776
遇到的样本是 FHIR 资源的话


784
00:31:10,776 --> 00:31:12,566
我将会通过它


785
00:31:12,566 --> 00:31:12,866
好了现在让我们来实践吧


786
00:31:17,126 --> 00:31:18,106
在这里 我在资源中的 matchCodedVaccine


787
00:31:18,736 --> 00:31:20,436
并且我需要去做的是对这个 FHIR 资源数据


788
00:31:20,436 --> 00:31:22,776
进行反序列化操作


789
00:31:22,776 --> 00:31:24,896
取出接种代码


790
00:31:24,896 --> 00:31:26,896
查找 CVX


791
00:31:26,896 --> 00:31:29,416
并且将它和


792
00:31:29,416 --> 00:31:32,336
不同疾病的 CVX 代码进行比较


793
00:31:32,966 --> 00:31:35,206
在如何选择反序列化 FHIR 资源上


794
00:31:35,206 --> 00:31:37,136
我有很大的自由


795
00:31:37,136 --> 00:31:39,256
所以今天 我将使用


796
00:31:39,256 --> 00:31:40,356
可编码 Swift 


797
00:31:40,906 --> 00:31:43,396
我需要为我


798
00:31:43,396 --> 00:31:44,536
真正感兴趣的关键字


799
00:31:44,536 --> 00:31:45,676
去定义一个可编码量


800
00:31:47,796 --> 00:31:48,736
好了我已经操作完了


801
00:31:49,026 --> 00:31:51,276
每个免疫资源有一个疫苗代码


802
00:31:51,276 --> 00:31:54,896
每个疫苗代码有一个


803
00:31:54,896 --> 00:31:57,086
编码数组并且


804
00:31:57,086 --> 00:32:00,546
每个疫苗编码有一个


805
00:32:01,166 --> 00:32:02,426
系统和一个代码


806
00:32:02,636 --> 00:32:05,836
有了这些 我实例化一个 JSON 解码器


807
00:32:05,836 --> 00:32:08,436
并且用它来将一个


808
00:32:08,436 --> 00:32:10,376
FHIR 资源数据解码成一个


809
00:32:10,376 --> 00:32:11,746
免疫资源


810
00:32:12,276 --> 00:32:16,046
剩下的就是去对每个编码进行遍历


811
00:32:16,046 --> 00:32:19,396
检查一下看是否


812
00:32:19,396 --> 00:32:23,846
这个系统是 CVX


813
00:32:24,106 --> 00:32:26,296
然后将代码传递给此方法


814
00:32:26,296 --> 00:32:28,266
好把它标记在数据源中


815
00:32:28,816 --> 00:32:30,776
这个方法的任务就是


816
00:32:30,776 --> 00:32:32,976
将代码和包含每个疾病的代码的清单


817
00:32:33,046 --> 00:32:34,806
相比较 然后


818
00:32:34,806 --> 00:32:38,026
如果在 UI 中发现了匹配标示


819
00:32:38,026 --> 00:32:41,196
说明它是我们已发现的疾病


820
00:32:41,766 --> 00:32:44,176
所以 我要用它来建立


821
00:32:44,176 --> 00:32:45,916
来运行并查看


822
00:32:45,916 --> 00:32:46,936
我的免疫清单


823
00:32:47,956 --> 00:32:49,436
所以现在 我在我的训练日志中


824
00:32:50,026 --> 00:32:53,746
我要去点击免疫接种键


825
00:32:53,746 --> 00:32:55,546
就像这样 通过几行代码


826
00:32:55,546 --> 00:32:56,816
我便拥有了一个免疫清单


827
00:32:57,516 --> 00:33:02,316
[ 掌声 ]


828
00:33:02,816 --> 00:33:04,286
这就是一个用 FHIR 来


829
00:33:04,286 --> 00:33:05,626
解决问题的例子


830
00:33:06,426 --> 00:33:11,226
现在我将把时间


831
00:33:11,226 --> 00:33:12,136
留给 Jason


832
00:33:13,226 --> 00:33:19,546
Jason [ 掌声 ]


833
00:33:20,046 --> 00:33:20,856
>> 谢谢你 Peyton


834
00:33:20,856 --> 00:33:25,196
所以 Peyton 已经向我们展示了


835
00:33:25,196 --> 00:33:27,586
我们该如何运用丰富的 FHIR 数据


836
00:33:28,076 --> 00:33:29,756
和如何合理地利用我们


837
00:33:29,756 --> 00:33:31,536
所提供的编码


838
00:33:31,536 --> 00:33:33,336
这真的为我们的用户


839
00:33:33,336 --> 00:33:34,926
在他们的健康记录方面


840
00:33:34,926 --> 00:33:36,806
提供了非常有意义的全面的使用


841
00:33:39,596 --> 00:33:41,736
现在 让我们来想一想


842
00:33:41,736 --> 00:33:43,366
在这个领域


843
00:33:43,366 --> 00:33:46,256
你该如何保护你的用户的隐私


844
00:33:47,526 --> 00:33:48,846
正如你所看到的一样


845
00:33:48,846 --> 00:33:50,446
这是一个令人难以置信的敏感数据


846
00:33:51,716 --> 00:33:53,646
我们已经从头开始


847
00:33:53,646 --> 00:33:57,166
建立了隐私


848
00:33:57,166 --> 00:33:59,646
并与医疗机构


849
00:33:59,646 --> 00:34:00,746
建立了直接的安全连接


850
00:34:01,876 --> 00:34:04,156
能够直接从用户的


851
00:34:04,216 --> 00:34:05,946
iOS 设备上下载数据


852
00:34:06,486 --> 00:34:08,255
把它安全地


853
00:34:08,255 --> 00:34:08,896
存储在 HealthKit 中


854
00:34:09,806 --> 00:34:11,406
并且围绕着这个


855
00:34:11,406 --> 00:34:13,886
数据的访问端口


856
00:34:13,886 --> 00:34:16,206
提供了全面的管理工具


857
00:34:16,396 --> 00:34:18,876
你的用户们将期望你去


858
00:34:18,876 --> 00:34:20,896
以同样的关心和关注程度


859
00:34:20,896 --> 00:34:22,596
去对待他们的数据


860
00:34:25,016 --> 00:34:27,626
你在这里做的每一个选择


861
00:34:27,896 --> 00:34:30,266
都将直接影响到每个用户


862
00:34:31,456 --> 00:34:33,126
这可能是一个积极的影响


863
00:34:33,176 --> 00:34:35,065
并且这就是我们选择


864
00:34:35,065 --> 00:34:36,896
去提供这个 API 的原因


865
00:34:36,966 --> 00:34:40,326
但是 这个影响也可能是负面的


866
00:34:41,056 --> 00:34:42,896
如果用户觉得这个数据


867
00:34:42,896 --> 00:34:45,386
不受他们的控制


868
00:34:45,386 --> 00:34:47,275
或更糟的是


869
00:34:47,275 --> 00:34:47,966
数据会未经他们同意被分享出去


870
00:34:49,306 --> 00:34:50,846
你可以对你的用户表现出尊重


871
00:34:50,846 --> 00:34:52,876
并且通过给他们


872
00:34:52,876 --> 00:34:55,025
提供关于数据的清晰的政策


873
00:34:55,025 --> 00:34:56,376
去告诉他们


874
00:34:56,376 --> 00:34:59,736
你要用这个数据做什么


875
00:34:59,736 --> 00:35:01,746
来建立一段可信的关系


876
00:35:02,376 --> 00:35:03,736
从你的 App


877
00:35:03,736 --> 00:35:05,736
你的目标字符串


878
00:35:05,736 --> 00:35:08,016
你的隐私政策开始


879
00:35:08,176 --> 00:35:09,916
到你处理该数据时


880
00:35:09,916 --> 00:35:12,206
的每一步


881
00:35:12,206 --> 00:35:14,246
都需要这种可信的关系


882
00:35:15,666 --> 00:35:17,286
举个例子 你应该确保


883
00:35:17,286 --> 00:35:20,836
你为你的用户提供了


884
00:35:20,836 --> 00:35:22,926
你是如何管理他们的数据的细节


885
00:35:23,536 --> 00:35:24,996
你应该发布清楚的


886
00:35:24,996 --> 00:35:27,096
保留政策 并且


887
00:35:27,096 --> 00:35:28,496
你应该给他们提供工具


888
00:35:28,496 --> 00:35:30,296
去允许他们删除


889
00:35:30,296 --> 00:35:32,436
他们不再想要与你分享的数据


890
00:35:32,956 --> 00:35:36,976
最终 你应该确保


891
00:35:36,976 --> 00:35:38,786
你请求的数据


892
00:35:39,426 --> 00:35:41,776
和你所要用到的是成正比的


893
00:35:42,416 --> 00:35:43,906
你永远都不该去要求


894
00:35:43,906 --> 00:35:44,926
比你所需要的更多的数据


895
00:35:49,046 --> 00:35:50,146
我鼓励大家去看看


896
00:35:50,146 --> 00:35:51,996
星期四下午 4 点的


897
00:35:51,996 --> 00:35:53,386
隐私对话 


898
00:35:53,386 --> 00:35:55,706
通过更好的隐私建立更好的 App


899
00:35:55,706 --> 00:35:58,486
它包含了整个生态系统


900
00:35:58,606 --> 00:36:00,616
所以这是个 去发现更多信息的好机会


901
00:36:01,286 --> 00:36:02,886
所以 我们已经看到了我们


902
00:36:02,986 --> 00:36:04,376
早就介绍过的支持健康记录的


903
00:36:04,376 --> 00:36:05,756
新的样本类型


904
00:36:06,496 --> 00:36:10,816
我们明白如何在我们的 App 中


905
00:36:10,816 --> 00:36:12,566
配置授权和隐私字符串


906
00:36:12,566 --> 00:36:14,596
以请求权限和查找数据


907
00:36:16,856 --> 00:36:19,066
希望我所展示的东西


908
00:36:19,066 --> 00:36:20,826
足以激起你的兴趣


909
00:36:20,826 --> 00:36:24,706
去探索和发现更多关于 FHIR 的信息


910
00:36:24,806 --> 00:36:26,706
并且我们已经看到了


911
00:36:26,706 --> 00:36:28,396
为了帮助用户们保护他们的隐私


912
00:36:28,396 --> 00:36:28,896
你还能做什么


913
00:36:36,046 --> 00:36:37,826
我们为我们的开发团队


914
00:36:37,826 --> 00:36:39,496
所创造的精彩的 App


915
00:36:39,496 --> 00:36:41,746
和当它访问用户的健康数据时


916
00:36:41,806 --> 00:36:44,096
赋予用户


917
00:36:44,096 --> 00:36:45,846
真正的权力 而感到惊喜


918
00:36:47,356 --> 00:36:49,036
这是一个我们基于健康


919
00:36:49,036 --> 00:36:51,206
和 HealthKit 的探究


920
00:36:51,206 --> 00:36:53,606
并且它也是


921
00:36:53,606 --> 00:36:55,776
我们对于 ResearchKit


922
00:36:56,106 --> 00:36:57,026
和 CareKit 的延续


923
00:36:57,826 --> 00:36:59,746
今天 伴随着健康记录


924
00:36:59,746 --> 00:37:02,686
和 HealthKit


925
00:37:02,816 --> 00:37:04,576
我们非常激动地


926
00:37:04,576 --> 00:37:05,766
跟大家一起探讨这些


927
00:37:06,996 --> 00:37:08,586
我们已经迫不及待地想知道


928
00:37:08,586 --> 00:37:12,676
你们能够开发出什么


929
00:37:13,826 --> 00:37:15,556
你可以从我身后的 URL 中


930
00:37:15,556 --> 00:37:16,816
和我们拥有的一些实验室中


931
00:37:16,816 --> 00:37:21,416
找到我之前说过的文件


932
00:37:21,416 --> 00:37:22,926
在这次谈话以后


933
00:37:22,926 --> 00:37:24,636
会有一个健康和健身实验室


934
00:37:24,636 --> 00:37:25,776
我们会在那里


935
00:37:25,776 --> 00:37:27,456
与你一起体验这个新的 API


936
00:37:27,456 --> 00:37:30,916
我们的同事 Anherika 和


937
00:37:30,916 --> 00:37:32,816
Kareem 将在明天早上进行一个会谈


938
00:37:32,816 --> 00:37:36,176
来介绍新的运动方式


939
00:37:36,746 --> 00:37:38,636
并且我们明天


940
00:37:38,636 --> 00:37:40,146
还有一项关于健康健身的研究


941
00:37:40,146 --> 00:37:41,906
那对你来说将是一个


942
00:37:41,906 --> 00:37:45,126
了解别人和与我们交流的好机会


943
00:37:45,666 --> 00:37:49,656
所以请你们明天一定不要错过


944
00:37:49,796 --> 00:37:51,206
对此 非常感谢大家


945
00:37:51,206 --> 00:37:52,976
希望大家有一个精彩的会议


946
00:37:53,516 --> 00:37:56,500
[ 掌声 ]

