1
00:00:17,784 --> 00:00:22,656 line:0
（按钮的一生 演讲804）


2
00:00:31,198 --> 00:00:32,499 line:-1
大家好


3
00:00:33,200 --> 00:00:34,168 line:-1
我是Julian


4
00:00:34,701 --> 00:00:39,506 line:-2
稍后Hugo会加入我们
他是我们产品的声音设计师


5
00:00:40,607 --> 00:00:43,710 line:-1
开始之前 我想稍微解释下


6
00:00:43,777 --> 00:00:46,480 line:-2
为什么我们要在此花时间
讲述一个按钮


7
00:00:47,447 --> 00:00:49,716 line:-1
我为未来的硬件设备设计


8
00:00:50,751 --> 00:00:52,886 line:-1
并制作用户界面原型


9
00:00:53,887 --> 00:00:57,791 line:-2
由于我工作的性质
我不能始终都使用UIKit


10
00:00:58,926 --> 00:01:03,330 line:-1
我建造并重建了很多基本的UI元素


11
00:01:03,397 --> 00:01:07,267 line:-2
例如滚动、缩放、分页
当然还有按钮


12
00:01:08,001 --> 00:01:09,269 line:-1
我也了解了很多


13
00:01:09,970 --> 00:01:11,205 line:-1
设计和建造


14
00:01:11,939 --> 00:01:14,575 line:-1
这些控件过程中涉及的细节


15
00:01:16,910 --> 00:01:20,781 line:-2
因此我要在此与你们
稍微分享我所学到的东西


16
00:01:22,182 --> 00:01:25,552 line:-2
我要向你们展示像按钮
这样简单的东西


17
00:01:26,753 --> 00:01:29,823 line:-1
其实背后有很多复杂的考虑因素


18
00:01:31,325 --> 00:01:34,995 line:-2
我希望通过了解按钮这个控件
你们能够学到一些东西


19
00:01:36,029 --> 00:01:39,666 line:-1
我希望你们能更用心去使用标准控件


20
00:01:41,001 --> 00:01:44,271 line:-2
去考虑什么时候
该制作自己的自定义控件


21
00:01:45,672 --> 00:01:47,541 line:-1
而当你们确实制作自定义控件时


22
00:01:47,608 --> 00:01:51,211 line:-2
我希望你们能够
透彻地考虑整个互动过程


23
00:01:52,579 --> 00:01:53,580 line:-1
那让我们开始吧


24
00:01:55,616 --> 00:02:00,888 line:-2
Hugo和我正扩大我们的
手工烤面包app王国


25
00:02:02,389 --> 00:02:08,862 line:-2
我们正在建造一款更简单的
全新烤面包机app


26
00:02:10,464 --> 00:02:13,567 line:-2
如果你们稍稍想象一下
你们早上做好一切准备


27
00:02:14,368 --> 00:02:16,870 line:-1
你们希望在即将出门前


28
00:02:17,037 --> 00:02:19,039 line:-1
自己的早餐已经准备就绪


29
00:02:20,107 --> 00:02:22,142 line:-2
你们需要做的就是
打开我们做的app


30
00:02:22,743 --> 00:02:25,712 line:-1
按下按钮并等待一块新鲜的吐司面包


31
00:02:25,779 --> 00:02:27,347 line:-1
做好后在厨房等你享用


32
00:02:29,616 --> 00:02:33,520 line:-2
现在 我们的联网烤面包机
能帮你实现这个


33
00:02:34,054 --> 00:02:36,957 line:-2
我们的联网烤面包机
会经历若干不同的状态


34
00:02:37,524 --> 00:02:39,893 line:-1
首先它准备好并等待你放入新鲜吐司


35
00:02:40,360 --> 00:02:44,164 line:-2
然后它制作吐司 最终
最重要的一步是做好吐司


36
00:02:45,599 --> 00:02:49,536 line:-2
不过我们的联网烤面包
在这种状态间的切换是通过


37
00:02:50,404 --> 00:02:52,139 line:-1
使用app的人来完成的


38
00:02:52,973 --> 00:02:54,341 line:-1
当人们使用我们的app时


39
00:02:55,175 --> 00:02:56,677 line:-1
他们可以要求加入一片吐司


40
00:02:57,644 --> 00:02:59,046 line:-1
让烤面包机开始工作


41
00:03:00,681 --> 00:03:03,350 line:-1
当吐司做好后 当然人们会吃掉它


42
00:03:04,084 --> 00:03:06,086 line:-2
也许由于某种原因
人们会想取消制作过程


43
00:03:06,153 --> 00:03:07,554 line:-1
虽然对这个我实际不太确定


44
00:03:08,222 --> 00:03:11,992 line:-2
当然 我们希望确保烤面包机
能始终准备好去服务


45
00:03:12,759 --> 00:03:14,828 line:-1
我不会透露这个确切怎么实现


46
00:03:14,895 --> 00:03:16,430 line:-2
但相信我
它能做到且做得很好


47
00:03:18,432 --> 00:03:22,536 line:-2
对于未来我们也有伟大的计划
我们可以制作AR吐司


48
00:03:22,769 --> 00:03:25,506 line:-1
吐司队列 每家都有几个烤面包机


49
00:03:25,906 --> 00:03:29,076 line:-2
最终我们会将这些连接到
我们的吐司社交网络


50
00:03:30,210 --> 00:03:32,412 line:-2
我要说的是
这其中有很多事情在进行当中


51
00:03:35,349 --> 00:03:38,585 line:-1
而在今天的演讲中 我们将深入


52
00:03:38,886 --> 00:03:42,990 line:-2
了解一个屏幕的细节
实际上是我们app


53
00:03:43,357 --> 00:03:45,659 line:-1
一个屏幕上的一个按钮


54
00:03:45,726 --> 00:03:47,327 line:-1
（最重要的交互）


55
00:03:47,394 --> 00:03:50,731 line:-2
如果我们能正确做好
我们最重要交互的细节


56
00:03:51,331 --> 00:03:52,799 line:-1
其它的会水到渠成


57
00:03:54,668 --> 00:03:56,036 line:-1
如果我们再看一下这个系统


58
00:03:57,337 --> 00:04:01,108 line:-1
我认为这里最重要的交互


59
00:04:01,441 --> 00:04:03,210 line:-1
实际是我们要求烤面包的过程


60
00:04:03,977 --> 00:04:06,213 line:-1
显然 其它环节也必须好用


61
00:04:06,780 --> 00:04:08,949 line:-1
但要求烤面包是第一个印象


62
00:04:09,316 --> 00:04:11,852 line:-1
如果人们都没法启动烤面包机


63
00:04:12,085 --> 00:04:13,620 line:-1
其余的环节实际都毫无意义


64
00:04:18,492 --> 00:04:19,959 line:-1
今天为了做好这一点


65
00:04:20,360 --> 00:04:22,963 line:-1
我们会首先稍微介绍下什么是按钮


66
00:04:24,565 --> 00:04:29,069 line:-2
然后我会跟各位分享
一种对交互控件的思考方式


67
00:04:30,971 --> 00:04:33,774 line:-2
最后Hugo会加入我们
给按钮添加声音


68
00:04:38,078 --> 00:04:39,413 line:-1
那么 按钮究竟是什么呢？


69
00:04:41,381 --> 00:04:43,483 line:-1
我们今天要讨论的按钮


70
00:04:43,951 --> 00:04:46,587 line:-1
是UI屏幕上的控件


71
00:04:47,988 --> 00:04:51,258 line:-1
按钮是行为的间接控件


72
00:04:52,593 --> 00:04:55,696 line:-1
我这么说的意思是当你按下按钮


73
00:04:56,396 --> 00:04:58,465 line:-1
行为是发生在别处


74
00:04:59,466 --> 00:05:02,736 line:-1
这个跟直接交互是相对的


75
00:05:04,238 --> 00:05:07,574 line:-1
直接交互是我抓住并直接操纵控制杆


76
00:05:09,076 --> 00:05:13,447 line:-2
直接交互能与真实世界的
体验形成参照


77
00:05:13,514 --> 00:05:14,815 line:-1
并且感觉更有趣


78
00:05:15,616 --> 00:05:19,286 line:-1
但按钮这种间接交互的真正威力


79
00:05:19,620 --> 00:05:21,989 line:-1
在于它由于这种分离


80
00:05:22,055 --> 00:05:23,657 line:-1
能够做到更清晰、更强大


81
00:05:25,626 --> 00:05:26,827 line:-1
而这里有趣的事情是


82
00:05:26,894 --> 00:05:30,664 line:-1
即使这些屏幕按钮模仿的物理按钮


83
00:05:31,164 --> 00:05:32,099 line:-1
也是间接的


84
00:05:36,537 --> 00:05:41,375 line:-1
即使作为结果的行为发生在别处


85
00:05:42,242 --> 00:05:43,877 line:-1
按钮也能控制该行为


86
00:05:44,511 --> 00:05:47,281 line:-1
正如你能设计作为结果的行为


87
00:05:47,714 --> 00:05:49,082 line:-1
你也能设计按钮


88
00:05:49,483 --> 00:05:52,653 line:-2
我们可以分开或相互关联地
去考虑这二者


89
00:05:55,255 --> 00:05:56,423 line:-1
而今天为做到这一点


90
00:05:56,490 --> 00:06:02,796 line:-2
我们将重点来看
设计的一个视角 即反馈


91
00:06:04,698 --> 00:06:08,969 line:-2
反馈是一种方式 通过它
你向人们解释你的app在做什么


92
00:06:10,671 --> 00:06:14,107 line:-2
我肯定你们很多人
都想过各种不同的方法


93
00:06:14,474 --> 00:06:18,111 line:-2
去在app内提供反馈
并且已经付诸行动


94
00:06:18,912 --> 00:06:19,746 line:-1
然而…


95
00:06:20,514 --> 00:06:23,650 line:-1
我认为有两大类反馈


96
00:06:25,319 --> 00:06:27,788 line:-1
第一类是你告诉人们


97
00:06:28,822 --> 00:06:32,326 line:-2
你实际可以在屏幕上放上文字
解释在发生的事情


98
00:06:32,793 --> 00:06:34,928 line:-1
或设计能进行解释的图表


99
00:06:37,030 --> 00:06:39,366 line:-1
第二类是你向人们展示


100
00:06:40,100 --> 00:06:44,371 line:-1
你能让人们以更接近现实世界的方式


101
00:06:44,838 --> 00:06:46,039 line:-1
体验他们行为的结果


102
00:06:47,307 --> 00:06:51,879 line:-2
方法可以是图像、声音
甚至是触觉随着时间的变化


103
00:06:55,782 --> 00:07:01,421 line:-2
现在我们把反馈
应用到交互的三个阶段


104
00:07:03,290 --> 00:07:04,758 line:-1
而不仅限于完成阶段


105
00:07:05,792 --> 00:07:08,695 line:-2
我们可以从物理按钮的角度
来看这些阶段


106
00:07:11,398 --> 00:07:13,166 line:-1
在我按下按钮前


107
00:07:14,001 --> 00:07:15,235 line:-1
按钮就固定在那里


108
00:07:17,971 --> 00:07:21,341 line:-2
在我跟按钮交互期间
按钮被按下了


109
00:07:24,111 --> 00:07:26,713 line:-1
最终 在我按完按钮后


110
00:07:26,980 --> 00:07:30,217 line:-1
我的手指脱离它 按钮回归原位


111
00:07:34,021 --> 00:07:37,157 line:-1
那么在我还没跟按钮交互前


112
00:07:38,058 --> 00:07:41,061 line:-1
就提供反馈 这有什么意思？


113
00:07:41,128 --> 00:07:43,797 line:-2
如果按钮就在那里
反馈有什么必要吗 对吧？


114
00:07:45,032 --> 00:07:47,734 line:-1
如果我们稍稍思考下iPhone


115
00:07:48,836 --> 00:07:52,005 line:-1
iPhone屏幕就是一块玻璃


116
00:07:53,273 --> 00:07:56,410 line:-1
这块玻璃下恰巧有发光的像素


117
00:07:56,944 --> 00:08:00,347 line:-2
而重要的是人们觉得
这些像素意味着什么


118
00:08:01,815 --> 00:08:05,085 line:-1
玻璃不会告诉你你可以去点击它


119
00:08:06,053 --> 00:08:07,554 line:-1
但屏幕上的内容可以


120
00:08:09,156 --> 00:08:11,525 line:-1
你可以看到你能够翻页


121
00:08:13,060 --> 00:08:14,061 line:-1
拖拽


122
00:08:15,329 --> 00:08:18,765 line:-2
当然 跟我的演讲相关的是
你还可以点击


123
00:08:21,034 --> 00:08:24,271 line:0
我说的这些有个学术上的术语


124
00:08:24,338 --> 00:08:26,206 line:0
即“感知的可供性”


125
00:08:27,441 --> 00:08:30,711 line:0
可供性是指物体与跟物体互动的人


126
00:08:31,311 --> 00:08:33,347 line:0
之间的联系


127
00:08:33,780 --> 00:08:38,284 line:0
一个人可能知道自己能够
抓住把手或按下物理按钮


128
00:08:38,986 --> 00:08:40,520 line:0
而这其中的感知部分


129
00:08:40,988 --> 00:08:45,759 line:0
就是讨论人们对屏幕上的
发光像素有什么了解


130
00:08:46,426 --> 00:08:49,696 line:0
人们之所以知道自己能够
跟iPhone屏幕上哪些元素互动


131
00:08:49,930 --> 00:08:51,798 line:0
是因为他们之前的体验


132
00:08:52,199 --> 00:08:53,433 line:0
因为他们之前用过iOS


133
00:08:53,967 --> 00:08:56,103 line:-1
以及因为他们目前的环境


134
00:08:56,170 --> 00:08:57,971 line:-1
即他们在使用手机上


135
00:08:58,238 --> 00:09:00,941 line:-1
一个他们了解或者不了解的app


136
00:09:03,076 --> 00:09:07,047 line:-2
那么 让我们将这个应用到
烤面包app上 当然了


137
00:09:08,949 --> 00:09:11,652 line:-2
我怎么知道点击这个按钮后
会发生什么？


138
00:09:11,952 --> 00:09:14,688 line:-2
我可以简单把按钮放上去
然后把它命名为OK 是吧？不


139
00:09:16,557 --> 00:09:18,458 line:-1
我们的做法是提供标签


140
00:09:18,859 --> 00:09:20,794 line:-1
标签是一种反馈


141
00:09:21,061 --> 00:09:24,531 line:-2
通过它
你告诉人们实际即将发生什么


142
00:09:26,066 --> 00:09:28,802 line:-2
在这个特定例子中
我尝试了标签Toast


143
00:09:29,169 --> 00:09:32,506 line:-2
但不幸的是
Toast可以指动词“祝酒”


144
00:09:32,806 --> 00:09:35,008 line:-1
也可以指你早餐会吃的


145
00:09:35,075 --> 00:09:36,944 line:-1
可口的面包片


146
00:09:37,010 --> 00:09:40,013 line:-2
我们该怎么叫这个标签呢
是toast toast吗？


147
00:09:42,182 --> 00:09:45,819 line:-1
我们可以给这个按钮设计图标


148
00:09:46,653 --> 00:09:48,488 line:-1
但我觉得这也不特别清楚


149
00:09:48,555 --> 00:09:50,757 line:-1
尤其是对于人们在陌生环境中


150
00:09:50,824 --> 00:09:53,126 line:-1
首次遇到的一些东西


151
00:09:53,827 --> 00:09:55,462 line:-1
所以我们稍微思考了下


152
00:09:55,529 --> 00:09:57,764 line:-2
然后想出了短语
Make Toast（烤吐司）


153
00:09:58,532 --> 00:10:01,835 line:-2
我知道在图表中我们把这个称作
Request Toast（要求烤吐司）


154
00:10:01,902 --> 00:10:03,670 line:-1
不过我们花了点时间去思考


155
00:10:04,671 --> 00:10:07,474 line:-1
使用我们app的人可能会怎么理解


156
00:10:08,208 --> 00:10:10,511 line:-2
以及我们的app怎么做
才是感觉最舒适的


157
00:10:14,181 --> 00:10:17,384 line:-2
下一件要思考的事情是：
我要怎么知道这是按钮？


158
00:10:17,818 --> 00:10:21,655 line:-2
仅仅是漂浮在黑色背景上的
方块可能并不够清晰


159
00:10:22,789 --> 00:10:25,659 line:-2
但如果你能添加一些背景
比如一个iPhone屏幕


160
00:10:26,660 --> 00:10:30,330 line:-2
你可能就能理解了
或者你可以添加之前的体验


161
00:10:30,864 --> 00:10:32,533 line:-1
这可以是按钮的形状


162
00:10:34,034 --> 00:10:35,602 line:-1
按钮呈现的方式


163
00:10:36,870 --> 00:10:40,674 line:-2
或者如果你足够持续地使用它
也可仅通过文本颜色表示


164
00:10:42,876 --> 00:10:44,011 line:-1
在这个例子中


165
00:10:45,279 --> 00:10:47,581 line:-1
我不觉得人们会很熟悉我们的app


166
00:10:47,648 --> 00:10:49,316 line:-1
他们会每天打开一次app


167
00:10:49,383 --> 00:10:50,484 line:-2
或如果我们幸运
会打开多次…


168
00:10:51,451 --> 00:10:54,788 line:-2
所以我们会关注
更为标准的iOS按钮形状


169
00:10:54,855 --> 00:10:56,957 line:-1
因为我们不想加入新东西


170
00:10:57,658 --> 00:10:59,560 line:-1
所以我们在屏幕上尝试了这些


171
00:11:04,398 --> 00:11:07,267 line:-2
在开始使用这个按钮前
我们可以思考


172
00:11:07,334 --> 00:11:09,269 line:-1
反馈的另一件事是：


173
00:11:09,636 --> 00:11:12,206 line:-1
我怎么知道这个按钮跟什么相关？


174
00:11:13,140 --> 00:11:16,710 line:-2
你可以根据按钮
在app中的位置判断


175
00:11:17,077 --> 00:11:19,112 line:-1
这些按钮有不同的含义和感觉


176
00:11:20,747 --> 00:11:24,084 line:-2
或者你可以根据
按钮跟其它控件归类的方式


177
00:11:25,586 --> 00:11:27,855 line:-2
或者看按钮跟屏幕上的
其它物体有多近


178
00:11:30,224 --> 00:11:31,992 line:-1
我觉得最后这个设计不错


179
00:11:32,059 --> 00:11:35,095 line:-1
所以我们在真实屏幕上试用下


180
00:11:35,963 --> 00:11:39,099 line:-2
我在Keynote演讲中画好
这个UI并将它放到手机上


181
00:11:39,466 --> 00:11:41,201 line:-1
我在卧室里拿着手机


182
00:11:41,268 --> 00:11:44,571 line:-2
早上订吐司前
我可能在卧室里会用到手机


183
00:11:44,638 --> 00:11:48,842 line:-2
而我是要努力了解…
我会知道这个按钮是做什么的吗？


184
00:11:52,913 --> 00:11:54,681 line:-1
我们要思考的下一件事是


185
00:11:54,748 --> 00:11:58,318 line:-1
我跟这个按钮交互期间发生的事情


186
00:11:59,019 --> 00:12:00,120 line:-1
对于物理按钮


187
00:12:01,121 --> 00:12:02,222 line:-1
这期间我会按下它


188
00:12:07,794 --> 00:12:10,597 line:0
现在说下“反馈”这个词


189
00:12:11,031 --> 00:12:15,736 line:0
它是指告诉人们
发生事情所引起的结果


190
00:12:16,737 --> 00:12:19,840 line:0
在这个例子中
我们实际还什么都没做


191
00:12:20,440 --> 00:12:23,277 line:0
所以我们在此可以用
“前馈”这个术语


192
00:12:25,212 --> 00:12:30,083 line:0
因为“前馈”是指帮助人们理解


193
00:12:30,384 --> 00:12:34,188 line:0
他们跟这个按钮互动时发生的事情


194
00:12:36,156 --> 00:12:39,960 line:-2
“前馈”是让交互流畅的
一个组成部分


195
00:12:40,460 --> 00:12:44,631 line:-1
你可以对立体触碰、捏合


196
00:12:44,998 --> 00:12:46,900 line:-1
或滑动操作产生反应


197
00:12:49,903 --> 00:12:53,140 line:-1
思考“前馈”是怎样应用到按钮上时


198
00:12:53,507 --> 00:12:56,076 line:-1
我们应思考正在发生的事情


199
00:12:56,143 --> 00:12:59,847 line:-1
当我的手指触碰屏幕和按钮时


200
00:12:59,913 --> 00:13:00,747 line:-1
正在发生什么


201
00:13:02,349 --> 00:13:04,785 line:-1
对于我们的整个烤面包系统


202
00:13:05,719 --> 00:13:09,022 line:-2
我们是处在按下按钮
要求烤吐司的阶段


203
00:13:09,890 --> 00:13:13,493 line:-1
所以我们要关注的是准备好烤面包机


204
00:13:13,760 --> 00:13:17,297 line:-1
并最终过渡到烤面包机烤吐司的阶段


205
00:13:18,799 --> 00:13:21,335 line:-1
我们应该思考正在发生什么


206
00:13:21,401 --> 00:13:23,837 line:-2
以及我该怎样通过提示
过渡到即将发生的事情


207
00:13:28,275 --> 00:13:30,344 line:-1
比如我开始触碰这个按钮了


208
00:13:31,678 --> 00:13:34,248 line:-1
我怎么知道我已经点击这个按钮了？


209
00:13:34,314 --> 00:13:35,616 line:-1
这个又有什么关系？


210
00:13:36,416 --> 00:13:37,918 line:-1
好 其一


211
00:13:38,151 --> 00:13:40,354 line:-2
这个按钮的命中区域
可能跟你想的不一样


212
00:13:40,420 --> 00:13:44,458 line:-2
如果你仔细看这个圆圈
也许我实际没触碰到它


213
00:13:45,459 --> 00:13:49,162 line:-1
但也许命中区域实际比视觉图片稍大


214
00:13:49,363 --> 00:13:52,099 line:-1
这一点对于很小的控件来说尤其重要


215
00:13:52,165 --> 00:13:53,867 line:-1
如果我们让那个控制杆实现交互


216
00:13:57,304 --> 00:13:59,173 line:-2
我怎么知道
我已经点击这个按钮了？


217
00:13:59,573 --> 00:14:03,277 line:-1
你也许会想给按钮做动画效果


218
00:14:03,810 --> 00:14:06,113 line:-1
让它淡入或逐渐变大


219
00:14:06,880 --> 00:14:09,049 line:-1
但这样会感觉反应不灵敏


220
00:14:09,883 --> 00:14:13,253 line:-1
这种动画可能适用于立体触碰


221
00:14:13,320 --> 00:14:16,023 line:-2
就是如果我按下过程中
按钮能持续反应的情况


222
00:14:16,690 --> 00:14:21,595 line:-2
但对于快速触碰屏幕的操作
我们也许应该速度稍快些


223
00:14:21,662 --> 00:14:23,630 line:-1
如果要做动画效果 就要非常快


224
00:14:25,599 --> 00:14:28,635 line:-1
所以我们的做法是提供确定声音


225
00:14:29,002 --> 00:14:31,071 line:-1
触觉或视觉变化


226
00:14:31,805 --> 00:14:34,575 line:-1
在这个例子中 我们会立即突出强调


227
00:14:35,576 --> 00:14:37,177 line:-1
让速度感觉稍快些


228
00:14:37,811 --> 00:14:41,315 line:-2
这也能让我们知道按钮被激活了
且按钮是好用的


229
00:14:44,218 --> 00:14:48,922 line:-1
也许我们该试着将按钮的前馈


230
00:14:49,323 --> 00:14:51,458 line:-1
与烤面包机本身的前馈相关联


231
00:14:51,525 --> 00:14:53,694 line:-2
正如我所说 我们就能开始
按提示过渡到即将发生的事


232
00:14:54,061 --> 00:14:56,830 line:-2
所以在此我尝试的是
在触碰按钮的同时


233
00:14:57,097 --> 00:14:59,600 line:-1
也许我们可以显示吐司片开始出现


234
00:15:00,467 --> 00:15:02,970 line:-2
不过我感觉对于这个按钮
这样设计可能有点过头


235
00:15:03,036 --> 00:15:05,105 line:-2
所以我不会继续这么做
但我尝试了


236
00:15:07,574 --> 00:15:10,010 line:-1
对于前馈我们应该思考的另一件事是


237
00:15:10,677 --> 00:15:12,446 line:-1
如果我改主意了该怎么办？


238
00:15:13,247 --> 00:15:15,115 line:-1
比如我早上有点头昏脑涨


239
00:15:15,182 --> 00:15:17,784 line:-1
我拿起手机 不小心触碰到这个按钮


240
00:15:18,118 --> 00:15:20,153 line:-1
但我实际还不想启动烤面包机


241
00:15:20,921 --> 00:15:25,626 line:-2
对于大多按钮
我实际可以把手指拖拽到按钮以外


242
00:15:25,993 --> 00:15:27,160 line:-1
以开始取消操作


243
00:15:29,162 --> 00:15:30,864 line:-1
这种操作实际对于所有类型的


244
00:15:30,931 --> 00:15:33,033 line:-1
流动交互都很重要


245
00:15:33,267 --> 00:15:37,137 line:-2
因为正是它使得流动交互
具备了不确定性


246
00:15:37,804 --> 00:15:40,641 line:-1
如果你在不同的屏幕间翻页


247
00:15:41,208 --> 00:15:44,344 line:-2
在抬起手指前
你不会知道你最终会翻到哪一页


248
00:15:44,845 --> 00:15:47,314 line:-1
同样的道理也适用于一个简单的按钮


249
00:15:47,481 --> 00:15:50,117 line:-1
我可以把手指再拖回按钮内


250
00:15:50,484 --> 00:15:54,488 line:-2
并获得同样的前馈
显示我现在又要激活这个按钮了


251
00:15:57,824 --> 00:16:01,595 line:-2
既然我们已经稍稍决定了
我们会得到的前馈


252
00:16:01,662 --> 00:16:03,864 line:-1
我们同样也该在设备上试试这个


253
00:16:04,431 --> 00:16:07,568 line:-2
同样 我知道这个对于按钮来说
是非常简单的道理


254
00:16:07,901 --> 00:16:12,906 line:-2
但它对于滚动页面、捏合
和翻页操作


255
00:16:13,407 --> 00:16:15,142 line:-1
以及很多触摸交互来说 非常重要


256
00:16:19,780 --> 00:16:22,182 line:-2
最终 我们应该思考
在我抬起手指脱离按钮后


257
00:16:22,516 --> 00:16:25,419 line:-1
我们应该怎样利用反馈


258
00:16:26,153 --> 00:16:28,956 line:-1
对于物理按钮 这之后它会返回原位


259
00:16:29,723 --> 00:16:31,191 line:-1
对于屏幕按钮


260
00:16:32,092 --> 00:16:34,962 line:-1
我们会抬起手指 脱离屏幕


261
00:16:36,897 --> 00:16:40,567 line:0
当然 这是各位大多数人


262
00:16:41,034 --> 00:16:42,803 line:0
都熟悉的经典反馈领域


263
00:16:43,604 --> 00:16:47,140 line:0
但我在此想要指出的是
我们对反馈的思考可以是


264
00:16:47,508 --> 00:16:51,078 line:0
同时针对按钮本身和行为


265
00:16:51,278 --> 00:16:53,013 line:0
也就是发生的结果


266
00:16:53,680 --> 00:16:55,616 line:0
我们可以思考如何将这二者连接


267
00:16:55,682 --> 00:16:58,285 line:0
从而让人们理解已经发生了什么


268
00:17:00,821 --> 00:17:03,957 line:-2
还是 在我们的系统中
我们在此唯一关注的


269
00:17:04,324 --> 00:17:07,261 line:-1
是让人们能够烤吐司


270
00:17:09,663 --> 00:17:12,432 line:-1
我的手指脱离按钮后会发生什么？


271
00:17:13,800 --> 00:17:16,002 line:-1
按钮会立即变暗吗？


272
00:17:16,569 --> 00:17:21,541 line:-2
会有一点延迟从而
让甚至更快的点击也被看到吗？


273
00:17:22,643 --> 00:17:25,378 line:-1
有计时器吗？按钮支持双击吗？


274
00:17:25,746 --> 00:17:29,316 line:-2
如果是这样 我可能就得等一下
才能看到系统确认我的操作？


275
00:17:32,019 --> 00:17:34,755 line:-1
如果我们回顾下两种反馈类型


276
00:17:36,490 --> 00:17:39,826 line:-1
我们可以直接告诉人们正在发生什么


277
00:17:40,827 --> 00:17:42,262 line:-1
我可以在屏幕上加一些文字


278
00:17:42,496 --> 00:17:43,997 line:-1
我觉得这样做很清楚


279
00:17:44,064 --> 00:17:46,700 line:-1
但这也需要你阅读并需要更多文本


280
00:17:48,569 --> 00:17:50,537 line:-1
所以也许我们可以向人们显示


281
00:17:51,071 --> 00:17:55,209 line:-2
也许按钮本身提供一些反馈
在此按钮是在闪动


282
00:17:57,311 --> 00:18:01,448 line:-2
也许我们可以用某个动画
去代表提供反馈的行动


283
00:18:02,249 --> 00:18:05,719 line:-1
例如 吐司图标本身


284
00:18:06,053 --> 00:18:08,222 line:-1
可以显示已经开始烤吐司了


285
00:18:10,757 --> 00:18:12,826 line:-1
或者我们可以同时采取二者


286
00:18:13,560 --> 00:18:16,864 line:-1
我在屏幕上加文字同时显示烤面包机


287
00:18:17,364 --> 00:18:19,733 line:-1
这样做很棒 因为我可能会错过动画


288
00:18:19,800 --> 00:18:22,336 line:-1
但我仍能看到烤面包机所处的状态


289
00:18:24,371 --> 00:18:30,544 line:-1
跟与按钮和前馈的交互相似的是


290
00:18:30,777 --> 00:18:33,714 line:-1
我该思考如果我改主意了会发生什么


291
00:18:35,115 --> 00:18:38,018 line:-2
我已经开始烤吐司了
但也许我想取消操作


292
00:18:38,085 --> 00:18:39,686 line:-1
也许我想让烤面包机停止工作


293
00:18:39,887 --> 00:18:43,023 line:-2
我们可以将这个按钮换成
“停止烤面包”按钮


294
00:18:43,357 --> 00:18:45,459 line:-1
但我觉得这不是特别清楚


295
00:18:45,526 --> 00:18:47,327 line:-1
因为这个按钮非常地像


296
00:18:47,594 --> 00:18:51,365 line:-1
之前的“烤吐司”按钮


297
00:18:53,033 --> 00:18:55,135 line:-2
也许我们可以加一个
单独的“停止”按钮


298
00:18:56,470 --> 00:18:59,373 line:-1
我感觉红色有点过头了


299
00:18:59,840 --> 00:19:02,843 line:-1
所以我们也许可以试一下相同的按钮


300
00:19:04,478 --> 00:19:06,413 line:-1
但跟烤吐司按钮是独立开的


301
00:19:07,414 --> 00:19:08,949 line:-1
现在感觉好点了


302
00:19:10,250 --> 00:19:13,053 line:-1
所以我该做的是 再在设备上试一下


303
00:19:15,589 --> 00:19:19,059 line:-1
我们应该看看按钮本身的反馈


304
00:19:19,726 --> 00:19:22,196 line:-1
是怎么与来自烤面包机的反馈相关联


305
00:19:22,729 --> 00:19:24,898 line:-1
并告诉人们发生了什么的


306
00:19:28,302 --> 00:19:30,537 line:-1
稍微总结下我讲过的…


307
00:19:32,739 --> 00:19:37,010 line:-2
反馈是一种方式 通过它
你让人们知道你的app在做什么


308
00:19:38,278 --> 00:19:43,150 line:-2
你可以直接告诉人们
你可以在屏幕上加文字 这没问题


309
00:19:43,884 --> 00:19:45,752 line:-1
或者你可以向人们展示


310
00:19:45,953 --> 00:19:49,022 line:-1
你可以让人们体会随着时间的改变


311
00:19:50,991 --> 00:19:55,495 line:-2
我们可以把反馈应用到
交互的所有三个阶段


312
00:19:56,930 --> 00:19:58,131 line:-1
即使用在简单的按钮上


313
00:19:59,967 --> 00:20:02,002 line:-1
而我在此潜意识做的一件事还有


314
00:20:02,269 --> 00:20:07,174 line:-2
尝试各种选项
去理解设计是否不足或过头


315
00:20:07,741 --> 00:20:10,611 line:-2
要实际了解某个动画
是否合适的唯一方法


316
00:20:10,677 --> 00:20:11,645 line:-1
是去试用一下


317
00:20:16,049 --> 00:20:19,453 line:-2
那么 我们在此已经设计了
一个更广泛系统的


318
00:20:19,686 --> 00:20:21,522 line:-1
非常重要的一部分


319
00:20:22,789 --> 00:20:24,825 line:-1
但我觉得这样做会更简单些…


320
00:20:25,926 --> 00:20:27,594 line:-1
就是在做好这个控件后


321
00:20:27,661 --> 00:20:29,396 line:-1
去弄清余下的流程如何


322
00:20:31,832 --> 00:20:35,636 line:-1
既然我们的按钮已经设计得相当好了


323
00:20:36,203 --> 00:20:38,172 line:-1
我觉得我们可以开始思考音效了


324
00:20:38,238 --> 00:20:40,440 line:-1
所以我想请Hugo上台


325
00:20:46,947 --> 00:20:48,115 line:-1
谢谢Julian


326
00:20:48,849 --> 00:20:49,850 line:-1
大家好


327
00:20:53,020 --> 00:20:53,921 line:-1
现在


328
00:20:54,454 --> 00:21:00,060 line:-2
我们可以迅速给这个按钮
添加一个简单的点击音效


329
00:21:02,162 --> 00:21:03,163 line:-1
听起来不错？


330
00:21:03,897 --> 00:21:05,132 line:-1
还是可以再好点？


331
00:21:06,567 --> 00:21:08,135 line:-1
Julian能做得更好


332
00:21:08,202 --> 00:21:11,071 line:-1
早些让我参与这个过程吗？


333
00:21:14,575 --> 00:21:17,678 line:-2
我想要跟大家分享几点
告诉大家我作为声音设计师


334
00:21:17,744 --> 00:21:19,479 line:-1
是如何去处理这样的项目的


335
00:21:21,114 --> 00:21:24,051 line:-1
我会介绍到哪里去寻找


336
00:21:24,384 --> 00:21:26,253 line:-1
设计声音的灵感


337
00:21:27,387 --> 00:21:30,457 line:-2
以及在这个过程中
我们使用的若干关键的构建模块


338
00:21:32,659 --> 00:21:35,462 line:-2
但在深入探讨前 我来解释下
为什么要讨论音效？


339
00:21:37,064 --> 00:21:42,769 line:-2
你们可能有人会想我们的用户
经常关闭手机上的音效


340
00:21:43,570 --> 00:21:47,140 line:-1
有必要为我的app加音效吗？


341
00:21:48,942 --> 00:21:50,043 line:-1
当然 取决于你自己


342
00:21:50,110 --> 00:21:54,748 line:-2
但George Lucas曾说过
一部电影50%的体验


343
00:21:54,815 --> 00:21:56,650 line:-1
是由我们听到的声音决定的


344
00:21:57,284 --> 00:21:59,419 line:-1
由音乐和声音设计决定的


345
00:22:00,521 --> 00:22:05,459 line:-2
我们周围到处是声音
我们使用声音探索世界


346
00:22:07,861 --> 00:22:12,499 line:-1
声音能够丰富产品的体验


347
00:22:14,268 --> 00:22:18,472 line:-1
声音能帮我们记住你app的体验


348
00:22:18,539 --> 00:22:24,044 line:-2
以及你的品牌
所以声音能产生重大的影响


349
00:22:25,846 --> 00:22:29,816 line:-2
那么当我们想为按钮设计音效时
该从哪里寻求灵感？


350
00:22:30,350 --> 00:22:32,753 line:-1
我们可以先绕个圈子


351
00:22:32,819 --> 00:22:35,822 line:-1
去看看现实世界的一些按钮


352
00:22:37,291 --> 00:22:42,963 line:-2
有些按钮是廉价材料做出的
发出的声音是这样的


353
00:22:43,730 --> 00:22:47,434 line:-2
有些是高质量材料做成的
发出的声音是这样的


354
00:22:49,203 --> 00:22:53,340 line:-2
这实际是iPhone X
音量按钮的录音


355
00:22:54,174 --> 00:22:56,009 line:-1
当然 我们将它放大了不少


356
00:22:57,744 --> 00:22:58,812 line:-1
（发声还是不发声？）


357
00:22:58,879 --> 00:23:02,349 line:-1
不过这些声音本质上只是副产品


358
00:23:02,416 --> 00:23:04,852 line:-1
它们不一定是设计出来的


359
00:23:04,918 --> 00:23:07,955 line:-1
它们是由按钮的制作材料决定的


360
00:23:09,289 --> 00:23:12,426 line:-2
但因为我们是设计软件
所以我们有很多自由空间


361
00:23:13,193 --> 00:23:18,932 line:-2
我们可以选择根本没有任何音效
而且我们经常是这么做的


362
00:23:20,801 --> 00:23:22,703 line:-1
但如果我们确实认定了


363
00:23:22,870 --> 00:23:27,007 line:-1
在UI元素中加音效是有用的


364
00:23:27,774 --> 00:23:30,544 line:-2
那么我们可以从现实世界的
类似事物中寻找线索


365
00:23:31,311 --> 00:23:36,216 line:-2
赋予这些UI音效以意义
并帮助用户理解它们


366
00:23:39,253 --> 00:23:41,188 line:-1
你想为你的app添加音效吗？


367
00:23:41,255 --> 00:23:45,759 line:-2
这要看情况
去想想你的app是哪种类别


368
00:23:46,527 --> 00:23:49,329 line:-2
app的使用者是谁
用户的期待是什么


369
00:23:49,830 --> 00:23:53,700 line:-2
使用环境是什么
人们会在什么地方使用app


370
00:23:54,935 --> 00:23:59,740 line:-2
我们知道我们app的使用者
将是那些喜欢吃吐司的人


371
00:24:00,274 --> 00:24:02,643 line:-1
他们习惯在厨房烤吐司


372
00:24:03,577 --> 00:24:06,313 line:-2
但从现在开始 他们可以
在家里任何地方烤吐司了


373
00:24:07,881 --> 00:24:10,918 line:-1
然而 他们仍可以使用自己经常


374
00:24:10,984 --> 00:24:13,387 line:-2
从厨房烤面包机中
接收的声音作为线索


375
00:24:14,021 --> 00:24:16,823 line:-1
由于这个原因 我们认为这个app


376
00:24:17,057 --> 00:24:19,059 line:-1
是使用音效的完美对象


377
00:24:21,228 --> 00:24:25,065 line:-1
那么 让我们看看烤吐司的过程


378
00:24:26,133 --> 00:24:28,335 line:-1
并倾听我们遇到的声音


379
00:24:30,604 --> 00:24:33,040 line:-1
让我们确定这些声音是否有用


380
00:24:33,707 --> 00:24:36,410 line:-2
如果有用
我们是否要在设计中使用它们


381
00:24:36,476 --> 00:24:37,978 line:-1
好 我们会使用


382
00:24:38,445 --> 00:24:39,980 line:-1
Julian的烤吐司时间线


383
00:24:41,181 --> 00:24:43,584 line:-1
并倾听烤面包机发出的声音


384
00:24:45,152 --> 00:24:51,325 line:-2
首先 我们拉下控制杆 然后
然后按到合适的位置


385
00:24:53,594 --> 00:24:56,630 line:-1
接着我们会听到烤面包机在加热


386
00:24:56,697 --> 00:24:58,732 line:-1
有线圈微弱的嗡嗡声


387
00:25:03,070 --> 00:25:08,141 line:-1
吐司烤好后 烤面包机吐出吐司


388
00:25:09,843 --> 00:25:13,113 line:-1
现在让我们一步步看一下这些步骤


389
00:25:16,984 --> 00:25:18,752 line:-1
首先 我们拉下操纵杆


390
00:25:18,819 --> 00:25:23,490 line:-1
在压下时 我们感到弹簧的阻力


391
00:25:24,057 --> 00:25:26,994 line:-2
这几乎就像… 如果我们将其
与app中的情况相比较


392
00:25:27,060 --> 00:25:31,698 line:-1
这就好比设计声音触觉和动画


393
00:25:31,765 --> 00:25:33,300 line:-1
并将它们同步到一起


394
00:25:33,867 --> 00:25:37,070 line:-2
但在我们的app中
我们决定用简单的按钮替换这些


395
00:25:37,137 --> 00:25:40,207 line:-1
所以我们不需要为它设计声音


396
00:25:41,508 --> 00:25:44,912 line:-2
但当我们要求烤吐司时
就是我们按下按钮时


397
00:25:45,879 --> 00:25:49,483 line:-2
下一步是Julian要求
我设计声音的一步


398
00:25:49,550 --> 00:25:51,552 line:-1
那么 让我们着手去做这件事


399
00:25:52,819 --> 00:25:58,425 line:-2
我们可以录下声音
我们可以使用电子仪器


400
00:25:58,592 --> 00:26:00,994 line:-1
以及合成器来生成声音


401
00:26:01,061 --> 00:26:06,500 line:-2
然后我们可以使用软件
把这些声音做成合适的状态


402
00:26:06,667 --> 00:26:08,869 line:0
我现在不会详细介绍这部分


403
00:26:08,936 --> 00:26:12,339 line:0
不过请大家观看
去年的演讲“音效设计”


404
00:26:12,806 --> 00:26:14,274 line:0
去更多地了解这个过程


405
00:26:15,909 --> 00:26:18,846 line:-1
最后 我们做出三种不同的选项


406
00:26:20,080 --> 00:26:21,081 line:-1
这是选项A


407
00:26:24,084 --> 00:26:25,085 line:-1
这是选项B


408
00:26:27,721 --> 00:26:28,956 line:-1
这是选项C


409
00:26:32,259 --> 00:26:35,696 line:-1
好 选项A是极简风格的


410
00:26:36,763 --> 00:26:37,764 line:-1
它非常简单


411
00:26:37,931 --> 00:26:40,868 line:-1
它与app的简单UI相当适宜


412
00:26:43,237 --> 00:26:46,139 line:-1
但感觉好像缺了点什么


413
00:26:46,673 --> 00:26:48,942 line:-1
在设计的过程中我们发现


414
00:26:49,009 --> 00:26:52,746 line:-2
如果声音有两次点击声
效果会更令人满意


415
00:26:52,813 --> 00:26:55,983 line:-2
按下时一次点击声
抬起手指时又一次点击声


416
00:26:57,518 --> 00:26:59,786 line:-1
而选项B有这种特点


417
00:27:02,422 --> 00:27:05,158 line:-1
不过… 虽然这是现实感更强的声音


418
00:27:06,260 --> 00:27:07,861 line:-1
它听起来实际不像烤面包机


419
00:27:07,928 --> 00:27:10,163 line:-1
不过它确实有一种实物的感觉


420
00:27:11,064 --> 00:27:13,834 line:-2
但由于相同的原因
它听起来确实有点刺耳


421
00:27:13,901 --> 00:27:15,369 line:-1
并有点金属感


422
00:27:18,338 --> 00:27:19,540 line:-1
接下来是选项C


423
00:27:22,342 --> 00:27:23,677 line:-1
这个声音有点奇怪


424
00:27:23,977 --> 00:27:27,948 line:-2
不过它确实有特色
是那种我再次使用app时


425
00:27:28,015 --> 00:27:30,317 line:-1
再次听到后会认出的声音


426
00:27:32,419 --> 00:27:33,654 line:-1
这个声音的另一个好处是


427
00:27:33,720 --> 00:27:37,057 line:-1
它通过音调传达一种确认的信息


428
00:27:37,124 --> 00:27:40,561 line:-2
就好像是打上对勾
告诉你操作已经成功


429
00:27:40,761 --> 00:27:43,096 line:-1
我再播放一次看看大家能否听出来


430
00:27:46,166 --> 00:27:49,570 line:-1
由于这些原因 我认为选项C


431
00:27:49,636 --> 00:27:51,805 line:-1
是我会推荐去使用的


432
00:27:53,473 --> 00:27:57,711 line:-1
这个声音很简单 有种友好的特点


433
00:27:58,712 --> 00:27:59,947 line:-1
而且它有独特性


434
00:28:00,013 --> 00:28:03,650 line:-2
不是那种我在其它app中
会听出来的声音


435
00:28:05,219 --> 00:28:07,087 line:-1
好 看起来我们完成任务了


436
00:28:07,988 --> 00:28:10,023 line:-1
至少我们做出了按钮点击声


437
00:28:11,291 --> 00:28:13,527 line:-1
但我们还没烤好吐司呢 所以…


438
00:28:14,194 --> 00:28:17,364 line:-1
让我们继续 也许app中有一些


439
00:28:17,698 --> 00:28:19,199 line:-1
使用音效的其它机会


440
00:28:19,266 --> 00:28:22,369 line:-2
因为作为声音设计师
我们想要讲述整个故事


441
00:28:23,504 --> 00:28:27,508 line:-2
所以 在按下按钮后
烤面包机开始加热


442
00:28:27,574 --> 00:28:29,910 line:-1
我们听到这种微弱的嗡嗡声


443
00:28:32,980 --> 00:28:36,183 line:-1
现在我们可以…这个声音有用吗？


444
00:28:36,783 --> 00:28:39,987 line:-1
也许有用 它能告诉我们设备的状态


445
00:28:40,687 --> 00:28:45,192 line:-2
所以我们也可以选择在app中
播放类似的声音


446
00:28:45,259 --> 00:28:47,895 line:-1
也许播放连续的声音 比如这个


447
00:28:52,132 --> 00:28:54,434 line:-1
但烤吐司可能会花几分钟


448
00:28:54,501 --> 00:28:56,803 line:-1
而一遍遍反复播放这个声音


449
00:28:57,271 --> 00:28:59,706 line:-1
可能不是我们想要的体验 对吧？


450
00:29:00,707 --> 00:29:03,177 line:-2
采用更为微妙的声音如何？
比如每半分钟左右


451
00:29:03,243 --> 00:29:05,846 line:-1
渐强和渐弱的计时器的声音


452
00:29:09,049 --> 00:29:10,050 line:-1
这个似乎可行


453
00:29:11,418 --> 00:29:13,287 line:-1
但这个过程实际需要音效吗？


454
00:29:13,353 --> 00:29:16,023 line:-2
因为我们实际在等待的是
接下来的事件


455
00:29:16,089 --> 00:29:19,860 line:-2
是烤吐司完成的时候
这是我们应该通知用户的事件


456
00:29:20,594 --> 00:29:22,062 line:-1
这是重要的时刻


457
00:29:22,696 --> 00:29:27,534 line:-1
所以我们应该播放简洁的通知声音


458
00:29:27,734 --> 00:29:30,237 line:-1
让用户不要错过 比如这个


459
00:29:32,840 --> 00:29:35,742 line:-1
好 现在我们一起听下这些声音


460
00:29:36,743 --> 00:29:38,345 line:-1
首先 我们按下按钮


461
00:29:41,882 --> 00:29:43,283 line:-1
然后对于下一步我们决定


462
00:29:43,350 --> 00:29:46,186 line:-2
当这个过程激活时
我们实际不需要音效


463
00:29:46,386 --> 00:29:48,789 line:-2
一直到我们收到通知
完成烤吐司过程


464
00:29:50,457 --> 00:29:53,293 line:-1
非常重要的是 一起倾听这些声音


465
00:29:54,328 --> 00:29:56,296 line:-1
确保它们和谐融洽


466
00:29:56,363 --> 00:29:59,900 line:-2
因为这是我们的app
与用户的沟通方式


467
00:29:59,967 --> 00:30:01,969 line:-1
这是我们app的声音


468
00:30:05,906 --> 00:30:08,509 line:-1
好 现在app设计好了


469
00:30:09,176 --> 00:30:12,312 line:-1
我想跟大家分享设计任何种类声音时


470
00:30:13,180 --> 00:30:16,250 line:-1
我们使用的一些关键构建模块


471
00:30:16,416 --> 00:30:17,251 line:-1
第一个


472
00:30:17,818 --> 00:30:19,620 line:-1
是音色


473
00:30:21,488 --> 00:30:24,091 line:-1
大多人能立即听出这个声音


474
00:30:26,560 --> 00:30:27,594 line:-1
是钢琴声 对吧？


475
00:30:28,896 --> 00:30:30,998 line:-1
但我们是怎么知道它是钢琴的？


476
00:30:32,332 --> 00:30:34,868 line:-1
我们怎么知道它不是颤音琴？


477
00:30:39,039 --> 00:30:43,777 line:-1
这取决于乐器的制作材料


478
00:30:44,678 --> 00:30:47,247 line:-1
取决于形状和乐器的演奏方式


479
00:30:47,314 --> 00:30:50,817 line:-2
是使用木槌、锤子
琴弓还是手演奏的


480
00:30:51,752 --> 00:30:55,789 line:-2
所以这些乐器能演奏完全一样的曲调
但听起来却完全不同


481
00:30:56,757 --> 00:30:59,593 line:-2
对于我们的app
我们觉得采取的特色是


482
00:30:59,793 --> 00:31:04,298 line:-2
一种友好的不太刺耳
或金属感过强的音色


483
00:31:06,733 --> 00:31:10,237 line:-1
下一个是声音的频率或音调


484
00:31:11,138 --> 00:31:13,707 line:-1
有些乐器演奏频率非常高


485
00:31:14,608 --> 00:31:16,910 line:-1
而有些频率非常低


486
00:31:19,413 --> 00:31:22,015 line:-1
不过非音乐的声音


487
00:31:22,649 --> 00:31:25,385 line:-1
也可以有很高或很低的频率


488
00:31:25,919 --> 00:31:31,758 line:-2
通过采取不同的频率
我们可以暗示物体的大小


489
00:31:32,059 --> 00:31:38,065 line:-2
如果我们拿烤面包机
录下吐出吐司的声音


490
00:31:39,233 --> 00:31:42,903 line:-2
我们以很高的频率播放声音
它听起来就像一台小型烤面包机


491
00:31:46,173 --> 00:31:49,610 line:-1
但如果我们以低频率播放同一个声音


492
00:31:50,544 --> 00:31:53,113 line:-1
它听起来会像一个大型烤面包机


493
00:31:57,818 --> 00:31:58,719 line:-1
所以…


494
00:32:00,020 --> 00:32:04,124 line:-1
接下来是声音的持续时间或长度


495
00:32:05,425 --> 00:32:07,294 line:-1
声音可以非常简短…


496
00:32:08,462 --> 00:32:09,830 line:-1
或者持续更长时间…


497
00:32:13,100 --> 00:32:14,935 line:-1
如果我们设计UI音效


498
00:32:15,135 --> 00:32:19,406 line:-1
我们知道按钮会连续多次被按下


499
00:32:20,574 --> 00:32:23,810 line:-1
我们就有必要把声音做得简短微妙


500
00:32:25,279 --> 00:32:26,847 line:-1
但如果按钮只是偶尔被按下


501
00:32:26,914 --> 00:32:28,949 line:-2
实际我们的烤吐司app
就是这个情况


502
00:32:29,249 --> 00:32:32,452 line:-1
那么就可以使用稍长稍复杂的声音


503
00:32:35,856 --> 00:32:36,690 line:-1
实际上


504
00:32:37,157 --> 00:32:40,093 line:-2
这个声音只会
在我们使用app时播放一次


505
00:32:42,629 --> 00:32:43,931 line:-1
接下来是响度


506
00:32:44,565 --> 00:32:46,500 line:-1
或者说振幅或音量


507
00:32:48,101 --> 00:32:51,205 line:-1
在设计铃声或闹铃时


508
00:32:52,506 --> 00:32:54,508 line:-1
我们不希望用户错过声音


509
00:32:54,575 --> 00:32:56,877 line:-1
我们不希望用户错过电话


510
00:32:56,944 --> 00:32:58,645 line:-1
或闹钟响了却睡过头


511
00:33:04,251 --> 00:33:06,820 line:-2
我们的声音工程师Mitch
从屋后给我打来电话


512
00:33:07,788 --> 00:33:09,823 line:-1
我能听到清晰响亮的铃声


513
00:33:10,490 --> 00:33:15,028 line:-2
但如果UI声音这么响亮
它会迅速让人感到不适


514
00:33:16,330 --> 00:33:20,234 line:-1
UI音效只需加一层微妙的交互感


515
00:33:21,335 --> 00:33:22,970 line:-1
让我们快速回复Mitch


516
00:33:32,045 --> 00:33:36,149 line:-1
如果我因为环境嘈杂而听不到键盘音


517
00:33:36,617 --> 00:33:38,085 line:-1
这实际不是问题


518
00:33:38,852 --> 00:33:41,488 line:-1
但我绝对是不想错过铃声的


519
00:33:44,124 --> 00:33:47,528 line:-1
现在 回顾下声音的四大构建模块


520
00:33:47,928 --> 00:33:52,866 line:-1
即音质、频率、持续时间和响度


521
00:33:53,333 --> 00:33:55,235 line:-1
当你开始考虑


522
00:33:55,702 --> 00:33:58,071 line:-1
为你的app设计并添加音效时


523
00:33:58,372 --> 00:34:00,174 line:-1
谨记这些真的很有好处


524
00:34:02,676 --> 00:34:05,279 line:-1
我今天想跟大家做的分享到此结束了


525
00:34:06,013 --> 00:34:08,482 line:-1
但在我们结束演讲前


526
00:34:09,716 --> 00:34:14,521 line:-2
以下是Julian和我想要
给大家留下的重要建议


527
00:34:17,190 --> 00:34:18,859 line:-1
细节是设计而来的


528
00:34:19,726 --> 00:34:21,128 line:-1
即便细节看起来显而易见


529
00:34:21,962 --> 00:34:24,364 line:-1
即便是像按钮这么简单的东西


530
00:34:25,199 --> 00:34:27,967 line:-1
即便是像点击声这么简单的东西


531
00:34:30,304 --> 00:34:34,341 line:-1
你可以从现实世界的元素中获取灵感


532
00:34:35,509 --> 00:34:37,710 line:-1
但却没有必要逐个照搬


533
00:34:39,179 --> 00:34:43,449 line:-2
同时请利用软件设计的
自由性和灵活性


534
00:34:43,516 --> 00:34:47,588 line:-1
去创造出完全独特和新鲜的东西


535
00:34:51,391 --> 00:34:56,830 line:-1
然后我们看到的动画 感受到的触觉


536
00:34:57,030 --> 00:34:58,732 line:-1
听到的声音


537
00:34:59,066 --> 00:35:02,970 line:-1
所有这些都会融合成同一个体验


538
00:35:04,738 --> 00:35:05,672 line:-1
最后


539
00:35:07,007 --> 00:35:10,844 line:-1
也是最重要的 请通过尝试去学习


540
00:35:12,212 --> 00:35:14,348 line:-1
今天我们做了很多尝试


541
00:35:15,315 --> 00:35:20,020 line:-2
有一些尝试效果不太好
有一些效果很好


542
00:35:20,621 --> 00:35:23,790 line:-2
但发现效果的唯一途径
是先去试验一下


543
00:35:26,560 --> 00:35:31,498 line:-2
现在 我希望这些
能够激励大家花更多时间


544
00:35:31,765 --> 00:35:34,468 line:-1
去钻研你可能通常想当然的细节


545
00:35:36,170 --> 00:35:41,542 line:-2
如果你把这些细节设计好了
你的app就会更精彩


546
00:35:43,310 --> 00:35:45,345 line:-2
谢谢各位的倾听
祝各位度过美好的一天

