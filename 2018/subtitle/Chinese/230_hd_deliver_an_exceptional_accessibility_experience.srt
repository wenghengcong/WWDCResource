1
00:00:07,516 --> 00:00:15,500
［ 音乐 ］


2
00:00:21,516 --> 00:00:25,646
［ 掌声 ］


3
00:00:26,146 --> 00:00:27,106
>> 大家好


4
00:00:27,236 --> 00:00:27,916
周五好


5
00:00:28,786 --> 00:00:30,516
我叫 Skylar Peterson


6
00:00:30,716 --> 00:00:32,526
我是 Apple iOS 


7
00:00:32,526 --> 00:00:34,646
辅助功能团队的工程师


8
00:00:34,646 --> 00:00:37,336
今天我的搭档是 Bhavya Apple Mac


9
00:00:37,336 --> 00:00:38,596
辅助功能团队的工程师


10
00:00:39,096 --> 00:00:40,246
我们将一起探究


11
00:00:40,246 --> 00:00:42,376
当说起辅助功能时


12
00:00:42,376 --> 00:00:44,086
用你的 App 创造出色


13
00:00:44,086 --> 00:00:46,266
体验是什么意思


14
00:00:47,306 --> 00:00:50,076
快速回顾一下 


15
00:00:50,076 --> 00:00:51,286
我们倾向于认为


16
00:00:51,286 --> 00:00:53,756
辅助功能的作用是


17
00:00:53,756 --> 00:00:54,476
人人皆可使用科技


18
00:00:55,176 --> 00:00:57,606
在 Apple


19
00:00:57,606 --> 00:00:59,286
我们将研发这种科技的方式


20
00:00:59,286 --> 00:01:01,216
分为四大类


21
00:01:01,216 --> 00:01:08,526
认知 活动 视觉和听觉


22
00:01:08,776 --> 00:01:12,326
现在 我们在这些所有的方面


23
00:01:12,326 --> 00:01:14,086
创造了很多很棒的特色


24
00:01:14,086 --> 00:01:16,396
但是总而言之


25
00:01:16,396 --> 00:01:18,536
是你的贡献


26
00:01:18,536 --> 00:01:20,106
和我们的辅助技术一起


27
00:01:20,106 --> 00:01:21,796
共同使我们


28
00:01:21,796 --> 00:01:22,826
为残障人士建立的平台


29
00:01:22,826 --> 00:01:23,536
变得更加出色


30
00:01:24,426 --> 00:01:25,866
让你创造的内容


31
00:01:25,866 --> 00:01:27,376
适用于每一个人


32
00:01:27,376 --> 00:01:29,476
可以使我们的世界


33
00:01:29,476 --> 00:01:31,636
更美好 更包容


34
00:01:31,636 --> 00:01:33,636
而且可以从根本上


35
00:01:33,636 --> 00:01:35,186
提升全世界数百万人的


36
00:01:35,186 --> 00:01:36,236
生活质量


37
00:01:37,976 --> 00:01:39,746
在今天的介绍中


38
00:01:39,746 --> 00:01:41,666
我们会省略


39
00:01:41,666 --> 00:01:42,876
很多基础辅助功能的介绍


40
00:01:43,606 --> 00:01:45,026
但是 如果这是你第一次


41
00:01:45,026 --> 00:01:46,966
接触辅助功能


42
00:01:46,966 --> 00:01:48,116
或者你之前从未了解过


43
00:01:48,116 --> 00:01:49,866
我们的辅助功能 API


44
00:01:50,196 --> 00:01:51,526
那么我强烈推荐


45
00:01:51,526 --> 00:01:52,876
看一下去年的一些 WWDC 视频


46
00:01:52,876 --> 00:01:53,806
了解一下基础部分


47
00:01:53,806 --> 00:01:56,156
但是现在你依旧能够


48
00:01:56,156 --> 00:01:57,306
从我们的讨论会中


49
00:01:57,306 --> 00:01:58,016
了解很多内容


50
00:01:58,366 --> 00:01:59,626
只是你可能会觉得


51
00:01:59,626 --> 00:02:01,546
进度有点快


52
00:02:01,546 --> 00:02:02,816
因为今天我们


53
00:02:02,816 --> 00:02:05,456
会略过基础部分


54
00:02:05,516 --> 00:02:07,306
我想以一个词开场


55
00:02:07,306 --> 00:02:09,966
“可用的”


56
00:02:11,116 --> 00:02:13,276
能够做到可用 很棒


57
00:02:13,276 --> 00:02:14,656
关键一步是


58
00:02:14,656 --> 00:02:16,116
确保你 App 上所有的内容


59
00:02:16,116 --> 00:02:18,796
甚至对于辅助科技都是可见的


60
00:02:18,876 --> 00:02:21,466
但是话说回来


61
00:02:21,466 --> 00:02:23,036
我们并不仅仅满足于


62
00:02:23,036 --> 00:02:24,196
让 App 是可用的


63
00:02:24,756 --> 00:02:25,786
没有人会吹嘘


64
00:02:25,786 --> 00:02:28,356
他们的 App 是可用的


65
00:02:29,306 --> 00:02:31,396
他们希望自己的 App 是出色的


66
00:02:31,786 --> 00:02:33,696
我们希望用户在使用的时候


67
00:02:33,696 --> 00:02:35,296
感到开心


68
00:02:36,166 --> 00:02:37,336
说起辅助功能


69
00:02:37,336 --> 00:02:38,926
你可能不是很清楚


70
00:02:38,926 --> 00:02:40,796
它到底指什么


71
00:02:40,796 --> 00:02:41,806
所以今天我们会讨论它


72
00:02:41,806 --> 00:02:43,536
并且我希望能够


73
00:02:43,536 --> 00:02:45,326
针对怎样处理辅助功能


74
00:02:45,326 --> 00:02:46,836
给大家提供一些有用的指导


75
00:02:47,916 --> 00:02:50,286
我将集中介绍两个部分


76
00:02:50,286 --> 00:02:51,416
以及当评价


77
00:02:51,416 --> 00:02:52,616
你的 App 的


78
00:02:52,616 --> 00:02:54,666
辅助功能时


79
00:02:54,866 --> 00:02:56,196
你对每个部分的


80
00:02:56,196 --> 00:02:56,406
不同想法


81
00:02:56,966 --> 00:02:59,336
首先是视觉设计


82
00:02:59,336 --> 00:03:00,956
然后是辅助科技用户


83
00:03:00,956 --> 00:03:02,386
会用什么方式


84
00:03:02,386 --> 00:03:03,796
体验你的 App


85
00:03:05,286 --> 00:03:06,886
我们先说视觉设计


86
00:03:07,436 --> 00:03:12,766
首先我想先谈一下


87
00:03:12,766 --> 00:03:14,116
透明和模糊效果


88
00:03:15,476 --> 00:03:17,166
我们在 iOS 的很多部分


89
00:03:17,166 --> 00:03:19,126
都使用了二者


90
00:03:20,026 --> 00:03:21,616
它可以让你的


91
00:03:21,616 --> 00:03:22,956
操作系统鲜活


92
00:03:22,956 --> 00:03:23,456
独特


93
00:03:24,116 --> 00:03:25,426
但是对于一些人来说


94
00:03:25,666 --> 00:03:26,646
尤其是对于视力不好的人


95
00:03:26,646 --> 00:03:28,306
这两种效果


96
00:03:28,306 --> 00:03:29,606
可能会让他们


97
00:03:29,606 --> 00:03:31,856
看不清楚


98
00:03:31,856 --> 00:03:33,436
从而对眼部造成压力


99
00:03:33,946 --> 00:03:35,476
所有我们提供了一种辅助功能设置


100
00:03:35,476 --> 00:03:36,786
可以减弱这两种效果


101
00:03:36,786 --> 00:03:38,516
这个设置非常有效


102
00:03:38,516 --> 00:03:41,106
就像这样


103
00:03:41,816 --> 00:03:42,836
我们没有使背景模糊


104
00:03:42,836 --> 00:03:44,686
而是使其变暗


105
00:03:44,686 --> 00:03:46,216
所以你依旧可以看到


106
00:03:46,216 --> 00:03:48,216
系统的执行环境


107
00:03:48,216 --> 00:03:50,166
但是视觉噪点减少了


108
00:03:50,166 --> 00:03:51,566
而且控件之前混有


109
00:03:51,566 --> 00:03:53,076
后面屏幕的颜色


110
00:03:53,076 --> 00:03:54,536
在现在的不透明背景下变清晰了许多


111
00:03:55,836 --> 00:03:58,926
文件夹和高亮


112
00:03:58,926 --> 00:03:59,456
也是这样


113
00:04:00,536 --> 00:04:02,276
这是一个很好的例子


114
00:04:02,276 --> 00:04:03,936
因为我们是用


115
00:04:03,936 --> 00:04:05,746
用户的墙纸作样本


116
00:04:06,096 --> 00:04:06,936
我们可以使背景变色


117
00:04:06,936 --> 00:04:08,486
让用户觉得的自己设备是


118
00:04:08,486 --> 00:04:10,396
定制的 应景的


119
00:04:10,396 --> 00:04:12,176
同时我们还做到了


120
00:04:12,176 --> 00:04:13,616
在一个不透明的背景上


121
00:04:13,616 --> 00:04:15,756
对比更强 屏幕更清晰


122
00:04:17,146 --> 00:04:18,776
作为一名开发人员


123
00:04:18,776 --> 00:04:20,065
你可以通过检查


124
00:04:20,065 --> 00:04:21,846
降低透明度设置是否可用


125
00:04:21,846 --> 00:04:23,106
而且能否对应地适合你的 UI


126
00:04:23,106 --> 00:04:24,676
来满足自己


127
00:04:24,676 --> 00:04:25,596
对于这两种效果的需要


128
00:04:26,316 --> 00:04:28,136
在 iOS 上你可以使用代码


129
00:04:28,136 --> 00:04:29,866
isReduceTransparencyEnabled


130
00:04:29,866 --> 00:04:32,576
在 macOS 上


131
00:04:32,826 --> 00:04:34,326
要在 NSWorkspace 上


132
00:04:34,326 --> 00:04:36,116
使用代码 accessibilityDisplayShould


133
00:04:36,116 --> 00:04:36,706
ReduceTransparency


134
00:04:38,116 --> 00:04:39,656
接下来我想谈谈


135
00:04:39,656 --> 00:04:43,756
对比问题 内容


136
00:04:43,756 --> 00:04:45,486
和它背景的对比


137
00:04:45,486 --> 00:04:47,456
对于可感知性来说 非常重要


138
00:04:47,976 --> 00:04:49,546
当颜色相近时


139
00:04:49,546 --> 00:04:52,406
它们会变得更难辨认


140
00:04:53,456 --> 00:04:54,886
而且一些特定颜色


141
00:04:54,886 --> 00:04:56,756
放大时很清楚


142
00:04:56,756 --> 00:04:58,436
但是内容缩小时就不清楚了


143
00:04:58,676 --> 00:05:00,296
例如在文本中


144
00:05:00,296 --> 00:05:01,586
小号字母的字体颜色


145
00:05:01,586 --> 00:05:03,106
更容易混在一起


146
00:05:04,166 --> 00:05:06,026
现在你可以计算


147
00:05:06,026 --> 00:05:07,816
一个特定颜色组合之间的对比度


148
00:05:07,816 --> 00:05:09,436
看看它是否


149
00:05:09,436 --> 00:05:10,886
会是清晰的


150
00:05:11,016 --> 00:05:12,046
然后我们会采纳


151
00:05:12,046 --> 00:05:13,406
网页内容辅助功能指导


152
00:05:13,406 --> 00:05:14,796
上面的建议


153
00:05:14,796 --> 00:05:16,506
它的建议是


154
00:05:16,506 --> 00:05:18,296
你能设定的最小对比度是


155
00:05:18,296 --> 00:05:20,756
4.5 : 1


156
00:05:21,096 --> 00:05:23,836
当然你能得到的


157
00:05:23,836 --> 00:05:24,766
最高对比度是


158
00:05:24,766 --> 00:05:26,206
黑色和白色的对比度


159
00:05:26,676 --> 00:05:28,876
数值为 21 : 1


160
00:05:28,936 --> 00:05:30,566
不论文本字体大小


161
00:05:30,566 --> 00:05:31,356
都很清楚


162
00:05:32,186 --> 00:05:33,176
现在看一种灰色


163
00:05:33,176 --> 00:05:36,386
这种特殊的灰色 在文本字体较大时


164
00:05:36,386 --> 00:05:38,506
看起来很清楚


165
00:05:38,506 --> 00:05:39,966
但是字体较小时就不行了


166
00:05:40,226 --> 00:05:42,676
因为你的眼睛看不清楚字母的形状


167
00:05:43,066 --> 00:05:45,566
4.5 : 1 的对比度


168
00:05:45,756 --> 00:05:47,246
刚算得上勉强看清楚


169
00:05:48,186 --> 00:05:49,906
再来看一下 最后一个灰色


170
00:05:51,076 --> 00:05:52,686
在这个大屏幕上


171
00:05:52,686 --> 00:05:55,926
可能没那么明显


172
00:05:55,926 --> 00:05:57,926
但是在小型设备上


173
00:05:57,926 --> 00:05:59,806
即便字体调的很大


174
00:05:59,806 --> 00:06:00,576
看起来也真的很费劲


175
00:06:01,126 --> 00:06:03,216
它的对比度是 2.9 : 1


176
00:06:03,216 --> 00:06:04,676
真是太低了


177
00:06:04,676 --> 00:06:09,486
你也可以使用 Xcode 内置的


178
00:06:09,486 --> 00:06:11,106
Accessibility Inspector (辅助功能检查器)


179
00:06:11,106 --> 00:06:13,926
里面的工具查看


180
00:06:13,926 --> 00:06:15,916
一组特定颜色之间的


181
00:06:16,286 --> 00:06:17,896
对比度是多少


182
00:06:17,896 --> 00:06:19,856
而且这些颜色适合


183
00:06:19,856 --> 00:06:21,276
多大的文本


184
00:06:21,276 --> 00:06:22,386
在这个工具里


185
00:06:22,386 --> 00:06:23,456
我们同样遵循


186
00:06:23,456 --> 00:06:24,386
我之前提起过的指南


187
00:06:25,496 --> 00:06:27,016
然而即便是对比度


188
00:06:27,016 --> 00:06:29,736
超过了推荐对比度


189
00:06:29,736 --> 00:06:32,766
4.5 : 1


190
00:06:32,766 --> 00:06:34,186
对于视力不好的人


191
00:06:34,676 --> 00:06:35,906
当字体出现在各种栏上时


192
00:06:35,906 --> 00:06:37,216
他们依旧因为颜色问题


193
00:06:37,216 --> 00:06:38,196
看不清楚


194
00:06:39,316 --> 00:06:40,626
所以我们有一个设置


195
00:06:40,626 --> 00:06:42,826
可以增强整个系统的对比度


196
00:06:43,536 --> 00:06:45,016
iOS 之前的版本中


197
00:06:45,386 --> 00:06:46,646
这个设置被成为


198
00:06:46,646 --> 00:06:47,616
加深颜色


199
00:06:47,936 --> 00:06:49,506
所以你可以使用代码


200
00:06:49,506 --> 00:06:51,616
isDarkerSystemColorsEnabled 检查一下


201
00:06:52,136 --> 00:06:54,696
如果你用的是标准 UIKit 控件


202
00:06:54,696 --> 00:06:56,516
并开启了 tintColor


203
00:06:56,516 --> 00:06:57,786
那你将免费得到这项功能


204
00:06:59,166 --> 00:07:02,226
在 macOS 上 你可以使用代码 accessibility


205
00:07:02,226 --> 00:07:03,266
DisplayShouldIncreaseContrast


206
00:07:03,726 --> 00:07:06,566
接下来要说的是字号


207
00:07:07,016 --> 00:07:09,956
改变设备内容的字号


208
00:07:09,956 --> 00:07:11,786
会对内容的


209
00:07:11,786 --> 00:07:14,046
显示和理解


210
00:07:14,046 --> 00:07:15,296
带来显著影响


211
00:07:15,716 --> 00:07:17,266
这对视力不好的用户来说


212
00:07:17,266 --> 00:07:18,266
是很有帮助的


213
00:07:18,266 --> 00:07:20,666
拿日历举个例子


214
00:07:21,086 --> 00:07:24,756
左侧 视图是默认字号


215
00:07:24,756 --> 00:07:27,566
右侧 我调大了几号


216
00:07:27,566 --> 00:07:29,136
成了更大的辅助功能大小


217
00:07:29,646 --> 00:07:30,896
如果我们模拟出


218
00:07:30,896 --> 00:07:31,866
在视力不好的用户眼中


219
00:07:31,866 --> 00:07:33,566
这个界面是什么样子的


220
00:07:33,566 --> 00:07:35,676
效果立刻就会变得很明显


221
00:07:36,126 --> 00:07:38,546
右侧的文本依旧很清晰


222
00:07:40,216 --> 00:07:43,386
在 iOS 上 你可以看看用户将他们的设备


223
00:07:43,386 --> 00:07:44,856
设置成多大字号


224
00:07:44,856 --> 00:07:46,866
一共有 7 种字号


225
00:07:46,866 --> 00:07:49,056
大号是默认字号


226
00:07:49,056 --> 00:07:51,826
甚至还有更大的辅助功能字号


227
00:07:51,826 --> 00:07:53,146
一共又多了 5 种字号


228
00:07:54,066 --> 00:07:55,866
关于动态字体


229
00:07:55,866 --> 00:07:57,296
我还有很多想说的


230
00:07:57,816 --> 00:07:59,246
但是我不打算再介绍了


231
00:07:59,246 --> 00:08:00,486
而是把这个留给大家


232
00:08:00,486 --> 00:08:01,296
希望大家去看看


233
00:08:01,296 --> 00:08:03,186
我们很棒的资源


234
00:08:03,546 --> 00:08:04,726
找到动态字体


235
00:08:04,726 --> 00:08:06,566
让自己的 App 中应用的


236
00:08:06,566 --> 00:08:07,856
最好的方法


237
00:08:08,386 --> 00:08:11,026
对于一些人来说


238
00:08:11,026 --> 00:08:13,296
调整字号有点小题大做


239
00:08:13,296 --> 00:08:15,246
但是默认字号和图标


240
00:08:15,246 --> 00:08:17,396
又有点看不清楚


241
00:08:17,916 --> 00:08:19,616
所以 iOS 有一项设置


242
00:08:19,616 --> 00:08:21,486
可以加粗文本


243
00:08:21,486 --> 00:08:23,436
也可以加粗图标的线条


244
00:08:24,456 --> 00:08:26,566
如果你使用的是内置标准


245
00:08:26,566 --> 00:08:28,816
UI 控件和系统字体


246
00:08:29,206 --> 00:08:30,386
那你可能什么都不用做


247
00:08:30,386 --> 00:08:31,866
就可以使这个功能


248
00:08:31,866 --> 00:08:34,166
应用于你的 App


249
00:08:34,166 --> 00:08:35,256
如果你用的是自己的文本处理方式


250
00:08:35,256 --> 00:08:37,756
或者个性化字体


251
00:08:37,756 --> 00:08:38,996
或者你只是想 比如说


252
00:08:38,996 --> 00:08:40,696
开启加粗功能


253
00:08:40,696 --> 00:08:41,996
加粗你 App 里的分隔线


254
00:08:41,996 --> 00:08:43,826
你可以看一看


255
00:08:43,826 --> 00:08:44,646
这个设置是否能用


256
00:08:44,646 --> 00:08:46,336
并根据需求进行调整


257
00:08:46,806 --> 00:08:50,096
接下来要说的是动态效果


258
00:08:51,106 --> 00:08:53,606
动画很有意思


259
00:08:53,606 --> 00:08:55,096
可以让内容感觉更生动


260
00:08:55,096 --> 00:08:58,976
它能将用户互动


261
00:08:58,976 --> 00:09:00,876
和他们动作带来的效果


262
00:09:00,876 --> 00:09:02,076
直接联系起来


263
00:09:02,966 --> 00:09:04,316
然而在一些情况下


264
00:09:04,316 --> 00:09:07,236
尤其在内耳会影响


265
00:09:07,236 --> 00:09:09,116
大脑平衡中心的情况下


266
00:09:09,116 --> 00:09:14,416
动态效果和动画就成了问题 经常导致眩晕 


267
00:09:14,416 --> 00:09:15,916
失去平衡 甚至恶心 


268
00:09:17,546 --> 00:09:18,876
现在我将举几个例子


269
00:09:18,876 --> 00:09:20,396
介绍几种


270
00:09:20,396 --> 00:09:22,636
可能会出问题的动画种类


271
00:09:22,636 --> 00:09:23,556
如果观众中有人


272
00:09:23,556 --> 00:09:25,316
不适应动态效果


273
00:09:25,316 --> 00:09:26,266
请在我播放默认动画时


274
00:09:26,266 --> 00:09:27,256
暂时看向别处


275
00:09:27,256 --> 00:09:28,836
我将以这个为引子


276
00:09:28,836 --> 00:09:29,806
开始讲起


277
00:09:30,946 --> 00:09:33,466
首先是缩放


278
00:09:34,026 --> 00:09:36,936
左侧是打开一个 App 时的默认动画


279
00:09:37,476 --> 00:09:40,106
我将给大家展示时钟 App


280
00:09:41,816 --> 00:09:43,156
我们放大 App 的图标


281
00:09:43,156 --> 00:09:45,176
它的 UI 放大


282
00:09:45,176 --> 00:09:47,286
出现在我们眼前右侧


283
00:09:47,286 --> 00:09:48,856
我们做同样的交互动作


284
00:09:48,856 --> 00:09:50,556
但是使用减少动态效果


285
00:09:50,556 --> 00:09:52,966
就变成了交叉淡入效果


286
00:09:54,236 --> 00:09:56,776
接下来是旋转涡流效果


287
00:09:57,316 --> 00:09:58,826
我们看一下全屏状态下


288
00:09:58,826 --> 00:10:00,726
iMessage 信息的回声效果


289
00:10:00,726 --> 00:10:02,756
我将向大家展示这个效果


290
00:10:02,756 --> 00:10:04,336
可以看到内容


291
00:10:04,336 --> 00:10:06,006
正沿着 z 轴旋转


292
00:10:06,006 --> 00:10:07,816
而且大小也发生了变化


293
00:10:07,816 --> 00:10:09,096
但是这两种动态效果用在一起


294
00:10:09,096 --> 00:10:10,116
会引发问题


295
00:10:10,966 --> 00:10:12,556
在这种信息效果的情况下


296
00:10:12,616 --> 00:10:14,006
如果我们启用减弱动画功能


297
00:10:14,006 --> 00:10:15,476
我们给用户提供了


298
00:10:15,476 --> 00:10:18,086
一个播放动画效果的提示


299
00:10:18,086 --> 00:10:20,506
而不是让动画自动播放


300
00:10:20,576 --> 00:10:21,426
这样用户就能选择


301
00:10:21,426 --> 00:10:23,076
是否想要看到这个效果


302
00:10:24,396 --> 00:10:26,316
接下来要介绍的是 平面漂移动画


303
00:10:26,986 --> 00:10:28,116
我在这儿展示的是


304
00:10:28,116 --> 00:10:29,616
Safari 浏览器标签页动画


305
00:10:29,896 --> 00:10:31,336
按下标签页显示按钮


306
00:10:31,336 --> 00:10:33,346
你可以看到


307
00:10:33,346 --> 00:10:34,786
网页卡片的平面转换成了


308
00:10:34,786 --> 00:10:36,726
模拟 3D 效果


309
00:10:37,496 --> 00:10:38,696
右侧是减少动态效果


310
00:10:38,696 --> 00:10:40,486
再一次


311
00:10:40,486 --> 00:10:42,536
变成了交叉淡入效果


312
00:10:42,536 --> 00:10:44,996
当前页卡片还闪动了一下


313
00:10:44,996 --> 00:10:46,666
这样你就知道


314
00:10:46,666 --> 00:10:49,536
你来自哪个界面


315
00:10:50,226 --> 00:10:53,000
就像在初始动画里一样


316
00:10:54,286 --> 00:10:56,186
多方向和多速度动态


317
00:10:56,246 --> 00:10:57,636
也是一个动画问题的诱因


318
00:10:58,366 --> 00:10:59,496
我接下来展示的是


319
00:10:59,496 --> 00:11:01,466
在对话中 消息气泡的运动


320
00:11:01,996 --> 00:11:03,286
在这个视频中不是很明显


321
00:11:03,286 --> 00:11:04,416
但是在设备上


322
00:11:04,416 --> 00:11:05,516
这个效果非常明显


323
00:11:06,196 --> 00:11:08,306
当我滚动消息时


324
00:11:08,306 --> 00:11:09,916
消息气泡在弹动


325
00:11:09,916 --> 00:11:12,196
气泡之间的距离


326
00:11:12,196 --> 00:11:14,576
不断压缩然后扩大


327
00:11:14,626 --> 00:11:15,866
如果我们减少动态效果


328
00:11:15,866 --> 00:11:17,706
这个效果就禁用了


329
00:11:17,706 --> 00:11:19,636
只是普通的滚动页面


330
00:11:22,476 --> 00:11:25,006
最后是外围运动


331
00:11:26,016 --> 00:11:27,536
iOS 的天气 App


332
00:11:27,536 --> 00:11:29,106
背景上会播放一些小动画


333
00:11:29,106 --> 00:11:30,756
用来显示


334
00:11:30,756 --> 00:11:32,166
当前天气状况


335
00:11:32,616 --> 00:11:35,146
你可以看到左边云彩


336
00:11:35,146 --> 00:11:36,296
像在天空中飘动


337
00:11:36,296 --> 00:11:38,416
日光闪闪


338
00:11:38,626 --> 00:11:39,816
但是如果你浏览


339
00:11:39,816 --> 00:11:41,086
下方的天气预报 


340
00:11:41,086 --> 00:11:43,026
这个动画就会在你的外围视图


341
00:11:43,026 --> 00:11:46,226
这可能也会带来同样的问题


342
00:11:46,226 --> 00:11:48,176
当你边开车边刷天气预报时


343
00:11:48,366 --> 00:11:49,406
你可能会觉得恶心


344
00:11:50,056 --> 00:11:51,656
你关注的区域上方


345
00:11:51,656 --> 00:11:53,036
如果出现水平运动的话


346
00:11:53,036 --> 00:11:54,386
会引发大脑的一个反应


347
00:11:55,016 --> 00:11:56,806
开启减少动态效果


348
00:11:56,806 --> 00:11:58,276
就可以禁用背景动画


349
00:11:58,826 --> 00:12:01,326
现在我们不想


350
00:12:01,326 --> 00:12:03,766
简单地去掉所有动画


351
00:12:03,766 --> 00:12:04,576
当然 我们还有一个设置


352
00:12:04,576 --> 00:12:05,816
你可以查看动态


353
00:12:05,816 --> 00:12:07,566
是否需要减少


354
00:12:07,566 --> 00:12:08,186
或者相应地改变


355
00:12:09,116 --> 00:12:10,596
iOS 里要用的代码是


356
00:12:10,596 --> 00:12:12,926
isReducedMotionEnabled 


357
00:12:13,136 --> 00:12:14,606
macOS 里要用的代码是 


358
00:12:14,606 --> 00:12:15,606
accessibilityDisplayShouldReduceMotion


359
00:12:16,516 --> 00:12:18,046
需要注意的是


360
00:12:18,046 --> 00:12:19,936
简单地去除动画


361
00:12:19,936 --> 00:12:22,076
经常不是一个很好的体验


362
00:12:22,666 --> 00:12:24,686
你并不会想让体验打折扣


363
00:12:24,686 --> 00:12:27,156
你想做的是 


364
00:12:27,156 --> 00:12:28,806
加入同样有趣的 吸引人的 


365
00:12:28,806 --> 00:12:30,266
但是不同的 用户可以使用的效果


366
00:12:31,736 --> 00:12:33,416
最后我想介绍 


367
00:12:33,416 --> 00:12:34,586
UI 复杂性


368
00:12:34,586 --> 00:12:36,306
作为设计讨论的结尾


369
00:12:36,866 --> 00:12:39,236
App 现在在我们的生活中起着重要作用


370
00:12:39,236 --> 00:12:40,696
科技简单 易于操作


371
00:12:40,696 --> 00:12:42,366
对于所有人来说


372
00:12:42,366 --> 00:12:44,246
是至关重要的


373
00:12:44,246 --> 00:12:46,646
它会提高我们的生活质量


374
00:12:46,646 --> 00:12:48,836
而不是带来不必要的麻烦


375
00:12:48,836 --> 00:12:52,336
单就美国来说


376
00:12:52,336 --> 00:12:55,276
6 个孩子里就有 1 个孩子 有发育障碍


377
00:12:55,276 --> 00:12:56,306
轻则是言语障碍


378
00:12:56,306 --> 00:12:59,896
重则是严重的发育障碍 比如自闭症


379
00:13:00,576 --> 00:13:01,696
对于有认知障碍的人


380
00:13:01,696 --> 00:13:03,446
甚至是有慢性疾病的人


381
00:13:03,446 --> 00:13:06,156
在使用 App 的时候


382
00:13:06,156 --> 00:13:07,716
会比发育正常的人


383
00:13:07,716 --> 00:13:08,526
花费更多精力


384
00:13:09,356 --> 00:13:11,116
那我们应该如何确保


385
00:13:11,116 --> 00:13:12,686
App 是简单的


386
00:13:12,686 --> 00:13:13,826
至少是不会增加负担的


387
00:13:15,346 --> 00:13:16,596
定义要简单


388
00:13:16,596 --> 00:13:19,696
要使用类似的结构 


389
00:13:19,696 --> 00:13:21,676
和清晰的 合理的因果关系


390
00:13:23,216 --> 00:13:24,496
上手使用 App


391
00:13:24,496 --> 00:13:26,136
和完成大部分


392
00:13:26,136 --> 00:13:27,496
普通任务时


393
00:13:27,496 --> 00:13:28,946
不能遇到任何阻碍


394
00:13:30,156 --> 00:13:31,506
最后我们的 App


395
00:13:31,506 --> 00:13:33,756
整体要是一致的


396
00:13:33,756 --> 00:13:35,076
我在某处学到一点以后


397
00:13:35,076 --> 00:13:36,976
这一点也适用在其他地方


398
00:13:37,666 --> 00:13:39,366
使用这个标准的 UIKit 视图


399
00:13:39,366 --> 00:13:40,906
是非常好的


400
00:13:40,906 --> 00:13:43,416
因为人们熟悉它的操作方式


401
00:13:43,416 --> 00:13:45,166
UIKit 还是 


402
00:13:45,166 --> 00:13:46,256
iOS 的设计语言


403
00:13:46,746 --> 00:13:47,666
如果你想自定义


404
00:13:47,666 --> 00:13:49,566
那么与 UIKit 中的并行控件


405
00:13:49,566 --> 00:13:51,966
保持一致


406
00:13:51,966 --> 00:13:53,336
会帮助人们直观地了解


407
00:13:53,336 --> 00:13:55,186
如何使用你的 App


408
00:13:55,336 --> 00:13:57,486
这一切都归结为用户体验


409
00:13:57,486 --> 00:13:59,326
App 的方式


410
00:13:59,326 --> 00:14:00,506
对于使用辅助科技


411
00:14:00,506 --> 00:14:01,966
比如旁白 


412
00:14:01,966 --> 00:14:03,236
或是“切换控制” 的用户来说 一样重要


413
00:14:04,206 --> 00:14:06,616
所以我想花更多时间 谈一谈如何提高


414
00:14:06,616 --> 00:14:08,216
辅助功能用户的


415
00:14:08,216 --> 00:14:09,426
使用体验


416
00:14:10,626 --> 00:14:12,306
使用辅助科技的用户


417
00:14:12,306 --> 00:14:13,796
比如使用旁白或是“切换


418
00:14:13,796 --> 00:14:15,346
控制”的用户 他们的体验


419
00:14:15,346 --> 00:14:17,256
和普通用户的体验是不同的


420
00:14:17,836 --> 00:14:19,326
旁白 使用了很多手势


421
00:14:19,326 --> 00:14:22,556
比如滑动或者多点触控


422
00:14:25,076 --> 00:14:28,516
切换控制可以扫描项目


423
00:14:28,516 --> 00:14:29,256
并提供合理的 快速的动作


424
00:14:29,726 --> 00:14:31,386
这两个功能都有


425
00:14:31,386 --> 00:14:32,756
和标准手势或交互动作


426
00:14:32,756 --> 00:14:35,626
相对应的操作


427
00:14:35,626 --> 00:14:37,086
但是这使得辅助科技


428
00:14:37,086 --> 00:14:38,446
变得出色了吗


429
00:14:39,536 --> 00:14:40,486
我们想从最基础


430
00:14:40,486 --> 00:14:46,736
的工作做到出色 尽管


431
00:14:46,736 --> 00:14:48,486
辅助科技使用者


432
00:14:48,486 --> 00:14:49,996
体验 App 的方法和普通人不同


433
00:14:49,996 --> 00:14:51,756
能给不使用辅助功能的人


434
00:14:51,756 --> 00:14:53,256
带来好的使用体验的理念


435
00:14:53,256 --> 00:14:55,906
在这里也同样试用


436
00:14:56,646 --> 00:14:58,146
大家都想让操作简单


437
00:14:58,526 --> 00:14:59,726
行为可预测


438
00:14:59,926 --> 00:15:02,386
我们的行动优先


439
00:15:02,386 --> 00:15:02,996
还有保持一致


440
00:15:04,086 --> 00:15:05,606
需要注意的是


441
00:15:05,606 --> 00:15:06,966
如果一些信息在传递时


442
00:15:06,966 --> 00:15:08,416
它的元素是独立的 上下文是分离的


443
00:15:08,416 --> 00:15:10,496
那么我们的辅助功能用户


444
00:15:10,496 --> 00:15:12,166
也会得到同样支离破碎的上下文


445
00:15:13,136 --> 00:15:14,726
现在让我们有请 Bhavya 上台


446
00:15:14,726 --> 00:15:16,646
快速评审


447
00:15:16,646 --> 00:15:17,836
对一个 App 的


448
00:15:17,836 --> 00:15:19,426
辅助功能的体验


449
00:15:19,426 --> 00:15:19,706
Bhavya


450
00:15:20,516 --> 00:15:24,986
[ 掌声 ]


451
00:15:25,486 --> 00:15:26,176
>> 大家早上好


452
00:15:26,566 --> 00:15:27,726
我叫 Bhavya


453
00:15:27,726 --> 00:15:28,586
我是 Apple 辅助功能团队的


454
00:15:28,586 --> 00:15:29,776
一名软件工程师


455
00:15:30,406 --> 00:15:31,886
今天我想和大家探讨一下


456
00:15:31,886 --> 00:15:32,806
如何提高 App


457
00:15:32,806 --> 00:15:34,096
辅助功能的使用体验


458
00:15:34,096 --> 00:15:37,466
以我和 Skyler 一直都在做的 App 为例


459
00:15:38,086 --> 00:15:39,296
这个 App 的名字是


460
00:15:39,296 --> 00:15:41,186
Exceptional Dogs


461
00:15:41,366 --> 00:15:42,756
它的目标是


462
00:15:42,756 --> 00:15:44,896
用户可以直接浏览狗的合集


463
00:15:44,896 --> 00:15:46,226
从而让收养流程变得简单


464
00:15:46,406 --> 00:15:47,626
这些狗需要一个温馨的家


465
00:15:48,056 --> 00:15:57,866
看一下这个 App 这就是 Exceptional Dogs


466
00:15:58,336 --> 00:16:00,406
最上面是一个像是 UI 的轮播界面


467
00:16:00,406 --> 00:16:02,216
本质上就是一个


468
00:16:02,216 --> 00:16:04,506
我能浏览到的不同狗的图集


469
00:16:05,796 --> 00:16:06,946
在左下角


470
00:16:06,946 --> 00:16:08,156
有一个收藏按钮


471
00:16:08,156 --> 00:16:09,456
可以收藏自己喜欢的某一种狗


472
00:16:09,456 --> 00:16:11,246
右下角


473
00:16:11,246 --> 00:16:12,726
有一个图册按钮


474
00:16:12,966 --> 00:16:14,226
点击它可以得到


475
00:16:14,426 --> 00:16:16,000
狗狗其他照片的模态视图


476
00:16:18,066 --> 00:16:20,736
但是并不是所有的狗都有图册按钮


477
00:16:21,276 --> 00:16:22,546
当我滑向 Layla 时


478
00:16:22,546 --> 00:16:25,156
注意图册按钮淡出了


479
00:16:25,156 --> 00:16:26,046
因为它没有其他照片


480
00:16:27,416 --> 00:16:29,026
轮播界面下面是统计视图


481
00:16:29,026 --> 00:16:32,336
上面有狗的信息 比如名字和品种


482
00:16:33,216 --> 00:16:34,236
当我滑向轮播界面里的


483
00:16:34,236 --> 00:16:35,836
下一只狗时


484
00:16:35,836 --> 00:16:36,546
注意信息更新了


485
00:16:38,316 --> 00:16:41,806
最后在下面是救助站的名字


486
00:16:41,806 --> 00:16:42,946
有两个按钮


487
00:16:42,946 --> 00:16:44,366
一个可以查看救助站在地图上的位置


488
00:16:44,766 --> 00:16:48,976
另一个可以给救助站打电话


489
00:16:49,996 --> 00:16:51,266
我们针对视觉上的复杂性


490
00:16:51,266 --> 00:16:52,106
对这个软件做了一些处理


491
00:16:52,106 --> 00:16:54,676
但是我和 Skyler 


492
00:16:54,676 --> 00:16:56,236
通过严格审查


493
00:16:56,236 --> 00:16:57,556
又穿插了一些辅助功能


494
00:16:57,556 --> 00:17:00,586
确保旁白恰好能够


495
00:17:00,586 --> 00:17:01,936
涵盖屏幕上的每一个元素


496
00:17:02,856 --> 00:17:04,596
现在我们打开旁白 


497
00:17:04,935 --> 00:17:06,846
看一下失明的人


498
00:17:06,846 --> 00:17:09,236
或者视力不好的人


499
00:17:10,205 --> 00:17:12,000
能不能应对这个 App 的复杂性


500
00:17:15,056 --> 00:17:15,846
>> 打开旁白 


501
00:17:16,175 --> 00:17:18,165
Exceptional Dogs Pinky


502
00:17:19,096 --> 00:17:20,126
>> 旁白找到了图片


503
00:17:20,126 --> 00:17:21,396
并且正确地


504
00:17:21,396 --> 00:17:22,116
说出了狗的名字


505
00:17:22,566 --> 00:17:22,836
非常好


506
00:17:23,175 --> 00:17:24,965
我现在将从左向右


507
00:17:24,965 --> 00:17:26,496
滑动轮播界面


508
00:17:27,205 --> 00:17:29,946
>> Layla Bro Pudding


509
00:17:30,726 --> 00:17:35,176
收藏按钮 Pudding Bro


510
00:17:36,046 --> 00:17:37,056
>> 旁白可以


511
00:17:37,056 --> 00:17:38,096
正确滑动轮播界面


512
00:17:38,096 --> 00:17:40,276
但是只有到 


513
00:17:40,276 --> 00:17:41,656
轮播界面的最后


514
00:17:41,656 --> 00:17:43,016
才轮到收藏按钮


515
00:17:43,646 --> 00:17:45,176
当然我可以


516
00:17:45,176 --> 00:17:46,416
像这样把手放上去


517
00:17:46,416 --> 00:17:47,656
这样就可以直接点击收藏按钮


518
00:17:48,236 --> 00:17:50,436
>> 收藏按钮


519
00:17:50,966 --> 00:17:51,656
>> 但是重点是


520
00:17:51,656 --> 00:17:52,976
一个典型的旁白用户


521
00:17:52,976 --> 00:17:54,606
不会这样直接按按钮


522
00:17:55,206 --> 00:17:57,296
它们会滑动


523
00:17:57,296 --> 00:17:58,936
到下一个元素


524
00:17:58,936 --> 00:18:01,076
但是目前


525
00:18:01,076 --> 00:18:02,006
我们没办法直接到


526
00:18:02,006 --> 00:18:03,376
收藏或者图册按钮


527
00:18:03,376 --> 00:18:04,496
只能滑到轮播界面的


528
00:18:04,496 --> 00:18:06,556
最后 这不是一个很好的


529
00:18:06,556 --> 00:18:08,066
或者出色的体验


530
00:18:08,066 --> 00:18:09,526
因为它会影响我


531
00:18:09,526 --> 00:18:10,896
收藏或者查看图册


532
00:18:10,896 --> 00:18:12,326
图册里可以看到轮播界面中


533
00:18:12,326 --> 00:18:12,866
所有狗的照片


534
00:18:14,326 --> 00:18:15,366
现在我把手指放在


535
00:18:15,366 --> 00:18:16,936
模态视图上


536
00:18:16,936 --> 00:18:17,596
启用图册按钮


537
00:18:18,296 --> 00:18:19,186
>> 显示图册


538
00:18:19,406 --> 00:18:20,376
显示图册


539
00:18:20,786 --> 00:18:22,816
Bro 的第一张照片图像


540
00:18:23,626 --> 00:18:24,826
>> 现在滑动浏览图册


541
00:18:25,196 --> 00:18:26,516
>> Bro 的第二张照片


542
00:18:26,876 --> 00:18:28,356
Bro 的第三张照片


543
00:18:28,726 --> 00:18:29,576
Pinky


544
00:18:30,646 --> 00:18:31,126
Layla


545
00:18:32,556 --> 00:18:34,086
>> 我们刚才可以


546
00:18:34,086 --> 00:18:35,096
通过旁白


547
00:18:35,096 --> 00:18:36,916
滑动浏览  


548
00:18:36,916 --> 00:18:38,366
但是旁白不仅聚焦在模态视图上


549
00:18:38,366 --> 00:18:39,496
还夹带了背景上的内容


550
00:18:40,146 --> 00:18:41,286
这次体验还算可以


551
00:18:41,286 --> 00:18:42,626
因为它可以使用户


552
00:18:42,626 --> 00:18:43,786
了解自己需要的内容


553
00:18:43,786 --> 00:18:45,736
但它算不上很好或者出色的


554
00:18:45,736 --> 00:18:47,306
因为模态视图


555
00:18:47,306 --> 00:18:48,596
下面的内容


556
00:18:48,596 --> 00:18:51,096
会让用户困惑或者分心


557
00:18:51,846 --> 00:18:53,356
选择模态视图


558
00:18:53,356 --> 00:18:56,896
双击关闭按钮


559
00:18:56,996 --> 00:18:58,516
>> 关闭 Layla


560
00:18:59,816 --> 00:19:01,296
>> 现在开始滑动统计


561
00:19:01,296 --> 00:19:01,446
视图


562
00:19:02,776 --> 00:19:07,766
>> 名字 品种 Layla 拉布拉多


563
00:19:08,986 --> 00:19:10,596
>> 当我听到“名字”后


564
00:19:10,596 --> 00:19:11,686
我希望紧接着听到的是


565
00:19:11,686 --> 00:19:13,646
狗的名字


566
00:19:13,646 --> 00:19:14,166
但是我听到的却是“品种”


567
00:19:15,236 --> 00:19:16,716
这些布局


568
00:19:16,716 --> 00:19:19,036
看起来都很清楚明了


569
00:19:19,036 --> 00:19:22,786
但是这些结构 让旁白出现了混乱


570
00:19:23,276 --> 00:19:24,766
对于用户来说


571
00:19:24,766 --> 00:19:25,926
缺少上下文联系


572
00:19:25,926 --> 00:19:27,496
给他们增加了认知负担


573
00:19:29,366 --> 00:19:30,326
现在我把手指放在


574
00:19:30,326 --> 00:19:31,376
救助站的名字上


575
00:19:31,376 --> 00:19:32,746
让它向旁边的按钮滑动


576
00:19:33,616 --> 00:19:35,206
>> Skyler 的动物救助站


577
00:19:36,296 --> 00:19:38,556
在地图中打开地址按钮


578
00:19:38,866 --> 00:19:39,396
拨打


579
00:19:39,726 --> 00:19:40,186
按钮


580
00:19:40,836 --> 00:19:42,156
>> 同样 这些按钮


581
00:19:42,156 --> 00:19:43,396
和统计视图的标签一样


582
00:19:43,396 --> 00:19:45,176
都是可用的


583
00:19:45,176 --> 00:19:46,256
但是缺少上下文


584
00:19:46,866 --> 00:19:48,826
当我听到“拨打”时


585
00:19:48,826 --> 00:19:49,946
我不清楚


586
00:19:49,946 --> 00:19:51,576
具体是要做什么


587
00:19:51,576 --> 00:19:53,116
但是看着屏幕的时候很清楚


588
00:19:53,166 --> 00:19:54,186
因为这个按钮


589
00:19:54,186 --> 00:19:55,306
就在救助站名字的旁边


590
00:19:57,266 --> 00:20:00,286
>> 关闭旁白 


591
00:20:01,206 --> 00:20:02,076
>> 我们发现这里


592
00:20:02,076 --> 00:20:02,576
有几个问题


593
00:20:03,836 --> 00:20:05,086
这些问题不会导致 App


594
00:20:05,086 --> 00:20:07,086
完全不可用


595
00:20:07,086 --> 00:20:08,516
但是它们确实会给用户


596
00:20:08,516 --> 00:20:09,816
增加认知负担


597
00:20:10,946 --> 00:20:13,376
记住 我们的目标是创造一种


598
00:20:13,586 --> 00:20:14,796
出色的辅助功能体验


599
00:20:15,576 --> 00:20:16,756
现在请 Skyler 回到台上


600
00:20:16,756 --> 00:20:19,356
谈一谈如何提升


601
00:20:19,356 --> 00:20:20,866
Exceptional Dogs 的使用体验


602
00:20:21,196 --> 00:20:22,176
使其出色


603
00:20:23,516 --> 00:20:28,236
［ 掌声 ］


604
00:20:28,736 --> 00:20:30,066
>> 我们已经找到了 App 的


605
00:20:30,066 --> 00:20:30,486
一些问题


606
00:20:31,216 --> 00:20:32,316
所以现在一起来看一下


607
00:20:32,316 --> 00:20:33,666
我们可以操控的辅助功能 API 


608
00:20:33,666 --> 00:20:35,016
来解决这些问题


609
00:20:36,246 --> 00:20:37,906
从 Bhavya 的审查中


610
00:20:37,906 --> 00:20:39,276
我们找到了轮播界面存在的问题


611
00:20:40,056 --> 00:20:41,196
我们可以使用收藏和图册按钮


612
00:20:41,196 --> 00:20:43,976
但是要滑到列表的最后才能使用


613
00:20:43,976 --> 00:20:45,446
而不是对每一只狗都能使用


614
00:20:45,826 --> 00:20:49,196
同样 只有到达列表的最后


615
00:20:49,196 --> 00:20:50,536
我们才能得到下方的显示数据


616
00:20:51,516 --> 00:20:53,256
我们需要快速获得


617
00:20:53,256 --> 00:20:54,806
对每只狗的操作和以及狗的数据


618
00:20:55,926 --> 00:20:58,246
我们能做的是使用 


619
00:20:58,246 --> 00:21:00,056
UIAccessibiliyElement


620
00:21:00,056 --> 00:21:01,766
在图集视图中


621
00:21:01,766 --> 00:21:02,476
创造一个新的元素


622
00:21:03,256 --> 00:21:04,696
UIAccessibiliyElement


623
00:21:04,696 --> 00:21:08,356
是用来创建元素的类


624
00:21:08,356 --> 00:21:09,606
经常用来代表 UI 中


625
00:21:09,606 --> 00:21:10,726
难以到达的部分


626
00:21:10,886 --> 00:21:12,986
比如说你在核心图标中画的东西


627
00:21:13,946 --> 00:21:15,976
但我们可以用它


628
00:21:15,976 --> 00:21:17,436
创造一个自定义体验


629
00:21:17,506 --> 00:21:18,966
我们将用这个例子 给大家展示一下


630
00:21:20,236 --> 00:21:21,576
我们要从 accessibilityElements 属性


631
00:21:21,576 --> 00:21:23,246
返回每一个的自定义元素


632
00:21:23,246 --> 00:21:25,696
为了包含他们的视图


633
00:21:26,176 --> 00:21:27,216
这会告诉我们的辅助科技


634
00:21:27,216 --> 00:21:30,686
一个给定视图的


635
00:21:30,686 --> 00:21:32,596
子元素是什么


636
00:21:32,866 --> 00:21:33,806
并且给它们一个指令


637
00:21:33,806 --> 00:21:34,456
这些元素是可定义的


638
00:21:35,786 --> 00:21:37,746
自定义元素到位之后


639
00:21:37,746 --> 00:21:39,186
我们就可以轻易地滑动


640
00:21:39,186 --> 00:21:40,386
浏览每只狗的内容


641
00:21:40,536 --> 00:21:40,786
很好


642
00:21:41,546 --> 00:21:43,606
但是我们怎么换狗呢


643
00:21:45,266 --> 00:21:46,326
我们可以使用


644
00:21:46,326 --> 00:21:47,596
accessibilityIncrement 


645
00:21:47,596 --> 00:21:48,866
和 accessibilityDecrement 


646
00:21:49,276 --> 00:21:50,966
通过向自定义元素


647
00:21:50,966 --> 00:21:52,936
添加 adjustableTrait


648
00:21:52,936 --> 00:21:54,386
我们可以让辅助科技知道


649
00:21:54,386 --> 00:21:55,756
元素要响应这些回调函数


650
00:21:55,756 --> 00:21:57,376
所以就旁白来说


651
00:21:57,376 --> 00:22:00,586
当用户用他们的手指 上下滑动时


652
00:22:00,586 --> 00:22:02,076
图集视图


653
00:22:02,076 --> 00:22:03,126
会滚动到下一项


654
00:22:03,126 --> 00:22:05,446
或上一项


655
00:22:06,476 --> 00:22:07,866
现在看一下


656
00:22:07,866 --> 00:22:09,066
这些信息标签


657
00:22:09,646 --> 00:22:10,716
Bhavya 滑动它们的时候


658
00:22:10,716 --> 00:22:12,196
它们的顺序混乱了


659
00:22:12,196 --> 00:22:13,506
而且变量值标签


660
00:22:13,506 --> 00:22:14,976
提供的信息


661
00:22:14,976 --> 00:22:15,606
缺少上下文联系


662
00:22:16,716 --> 00:22:18,846
上下文非常重要


663
00:22:19,376 --> 00:22:20,566
如果我只是触摸变量值标签


664
00:22:20,566 --> 00:22:21,796
查看狗是否已被领养


665
00:22:21,796 --> 00:22:25,216
我将听到旁白说“是”


666
00:22:25,816 --> 00:22:27,036
“是”是什么


667
00:22:27,516 --> 00:22:28,486
这是什么意思


668
00:22:28,486 --> 00:22:29,646
什么和它对应


669
00:22:30,886 --> 00:22:32,896
同样 我们遇到了导航问题


670
00:22:33,346 --> 00:22:34,466
为了找到我们需要的东西


671
00:22:34,466 --> 00:22:37,646
要浏览 14 个不同的标签


672
00:22:38,196 --> 00:22:39,446
但是给它们加一个组框


673
00:22:39,446 --> 00:22:41,096
不仅会使数量减半


674
00:22:41,096 --> 00:22:43,026
还可以使导航快很多


675
00:22:44,476 --> 00:22:45,796
把这些标签


676
00:22:45,796 --> 00:22:46,946
归类分组


677
00:22:46,946 --> 00:22:48,496
会便于用户理解


678
00:22:48,496 --> 00:22:50,716
标签和变量值之间的关系


679
00:22:51,346 --> 00:22:52,406
我们可以再一次使用


680
00:22:52,406 --> 00:22:53,656
UIAccessibiliyElement


681
00:22:53,656 --> 00:22:55,146
来完成这个操作


682
00:22:55,146 --> 00:22:56,836
通过为每组标签创建元素


683
00:22:56,946 --> 00:22:58,026
然后从 containing


684
00:22:58,026 --> 00:22:59,526
ViewsAccessibilityElements 属性里


685
00:22:59,526 --> 00:23:00,346
返回他们


686
00:23:01,736 --> 00:23:03,706
刚才 Bhavya 在 App 里


687
00:23:03,706 --> 00:23:04,606
滑动元素时


688
00:23:04,606 --> 00:23:06,466
救助站信息视图


689
00:23:06,466 --> 00:23:08,026
分裂成三个单独的元素


690
00:23:08,026 --> 00:23:09,346
救助站名字


691
00:23:09,346 --> 00:23:10,986
定位按钮


692
00:23:10,986 --> 00:23:11,776
和拨号按钮


693
00:23:13,216 --> 00:23:14,986
和标签一样


694
00:23:14,986 --> 00:23:16,816
按钮也缺少上下文


695
00:23:17,186 --> 00:23:18,866
如果你不是先获取的救助站名字


696
00:23:18,866 --> 00:23:19,466
而是先获取的其他按钮


697
00:23:19,466 --> 00:23:21,146
那么这些按钮对应的是什么


698
00:23:21,146 --> 00:23:22,066
就变得不清楚了


699
00:23:23,616 --> 00:23:24,746
让这三个元素


700
00:23:24,746 --> 00:23:26,396
单独存在


701
00:23:26,396 --> 00:23:28,536
增加了用户在寻找


702
00:23:28,536 --> 00:23:29,536
所需内容时


703
00:23:29,536 --> 00:23:30,246
导航的元素数量


704
00:23:30,636 --> 00:23:31,736
所以将它们组合


705
00:23:31,736 --> 00:23:33,556
更便于理解


706
00:23:33,556 --> 00:23:34,586
使导航更快


707
00:23:36,216 --> 00:23:37,256
我们也要思考一下


708
00:23:37,256 --> 00:23:38,616
这里的属性是什么


709
00:23:39,176 --> 00:23:40,236
最相关的一条信息是


710
00:23:40,236 --> 00:23:42,546
狗被安置在哪一个救助站


711
00:23:42,826 --> 00:23:44,716
所以我们会把这条放在最前面


712
00:23:44,716 --> 00:23:46,206
然后加上其他动作


713
00:23:46,206 --> 00:23:47,656
定位和给救助站打电话


714
00:23:49,086 --> 00:23:50,476
为了完成这个操作


715
00:23:50,476 --> 00:23:52,396
可以使用 accessibilityCustomActions API


716
00:23:53,306 --> 00:23:55,096
这样可以让我们


717
00:23:55,096 --> 00:23:56,276
给元素加上动作


718
00:23:56,276 --> 00:23:58,106
用户可以循环


719
00:23:58,106 --> 00:23:59,206
直到找到想要的


720
00:23:59,206 --> 00:23:59,826
然后激活


721
00:24:00,376 --> 00:24:01,896
你可以返回


722
00:24:01,936 --> 00:24:03,886
给定视图的自定义动作数组


723
00:24:04,806 --> 00:24:06,726
每一个动作


724
00:24:06,726 --> 00:24:08,356
都有一个名字


725
00:24:08,356 --> 00:24:09,626
告诉用户接下来会发生什么


726
00:24:09,626 --> 00:24:11,116
当他们激活这个动作时


727
00:24:11,116 --> 00:24:13,666
在你的代码中


728
00:24:13,666 --> 00:24:15,446
还有一个 “目标” 和 “选择器” 关系


729
00:24:15,446 --> 00:24:17,586
用来执行这个动作


730
00:24:17,806 --> 00:24:19,056
我们会让整个救助站界面


731
00:24:19,056 --> 00:24:20,696
变得易于使用


732
00:24:20,696 --> 00:24:21,626
并且添加


733
00:24:21,626 --> 00:24:24,056
定位和拨号动作


734
00:24:24,456 --> 00:24:25,776
最后是图册 视图


735
00:24:26,586 --> 00:24:28,186
Bhavya 把这个视图拉出来时


736
00:24:28,186 --> 00:24:29,386
我们可以滑动背景里的


737
00:24:29,386 --> 00:24:31,936
所有元素


738
00:24:31,936 --> 00:24:33,746
尽管这个视图看起来时模态的


739
00:24:34,246 --> 00:24:36,326
但是情况并非如此


740
00:24:36,326 --> 00:24:37,966
因为我们不是把此视图


741
00:24:37,966 --> 00:24:39,336
嵌入视图控制器


742
00:24:39,336 --> 00:24:41,466
然后模态呈现出来


743
00:24:41,466 --> 00:24:43,766
而是把它放在图层视图上


744
00:24:44,516 --> 00:24:46,506
因为背景上的内容


745
00:24:46,506 --> 00:24:48,106
依旧是可见的


746
00:24:48,716 --> 00:24:49,786
旁白不知道


747
00:24:49,786 --> 00:24:50,516
要把它们排除出去


748
00:24:51,966 --> 00:24:52,736
尽管旁白


749
00:24:52,736 --> 00:24:54,046
可以获取图册中的一切


750
00:24:54,046 --> 00:24:56,006
但是它会使用户感到迷惑


751
00:24:56,006 --> 00:24:57,996
因为用户并不知道上下文


752
00:24:57,996 --> 00:24:59,136
不知道他们到哪一步了


753
00:24:59,136 --> 00:25:00,566
也不知道他们的动作会带来什么结果


754
00:25:02,176 --> 00:25:03,536
为了解决这个问题


755
00:25:03,536 --> 00:25:05,906
我们可以在显示视图中


756
00:25:05,906 --> 00:25:07,356
重写 accessibilityViewIsModal


757
00:25:07,356 --> 00:25:08,656
这可以告诉我们的辅助科技


758
00:25:08,656 --> 00:25:11,256
现在只有那个视图中的元素是


759
00:25:11,256 --> 00:25:11,486
可用的


760
00:25:12,756 --> 00:25:14,196
我们还可以


761
00:25:14,196 --> 00:25:15,476
发布通知


762
00:25:15,476 --> 00:25:16,846
让辅助科技知道


763
00:25:16,846 --> 00:25:18,006
屏幕上的内容已经发生了改变


764
00:25:18,006 --> 00:25:20,446
它应该尝试重新聚焦


765
00:25:21,746 --> 00:25:23,006
我们可以使用 screenChanged 的通知 


766
00:25:23,006 --> 00:25:24,116
来达到这个效果


767
00:25:24,716 --> 00:25:27,296
现在我将把所有的都交给 Bhavya


768
00:25:27,296 --> 00:25:28,886
他将给大家展示


769
00:25:28,886 --> 00:25:30,256
如何使用我们刚才说到的 API 


770
00:25:30,256 --> 00:25:31,786
来应用这些解决方法


771
00:25:32,406 --> 00:25:32,666
Bhavya


772
00:25:34,516 --> 00:25:38,546
［ 掌声 ］


773
00:25:39,046 --> 00:25:39,476
谢谢你 Skyler


774
00:25:39,856 --> 00:25:41,216
让我们把 App 的辅助功能体验


775
00:25:41,216 --> 00:25:43,836
从很好变成出色


776
00:25:44,256 --> 00:25:45,000
我将直接跳到 Xcode 


777
00:25:53,226 --> 00:25:54,346
从优化


778
00:25:54,346 --> 00:25:56,136
上方轮播界面的体验开始


779
00:25:56,726 --> 00:25:58,376
这里有一个类 命名为


780
00:25:58,376 --> 00:25:59,906
DogCarouselContainerView 


781
00:25:59,906 --> 00:26:01,296
它包括狗的图集


782
00:26:01,296 --> 00:26:02,876
收藏按钮


783
00:26:03,116 --> 00:26:04,016
和图册按钮


784
00:26:04,406 --> 00:26:06,096
Skyler 说起过


785
00:26:06,096 --> 00:26:07,166
我们想要执行


786
00:26:07,166 --> 00:26:08,616
递增和递减功能


787
00:26:08,616 --> 00:26:09,996
这样就可以上下滑动


788
00:26:09,996 --> 00:26:10,986
滚动浏览轮播界面了


789
00:26:11,716 --> 00:26:13,146
为了实现这个操作


790
00:26:13,146 --> 00:26:14,946
我们可以在这个类里创建一个属性


791
00:26:14,946 --> 00:26:16,416
carouselAccessibilityElement


792
00:26:17,246 --> 00:26:19,516
它将是一个 UIAccessibiliyElement


793
00:26:19,516 --> 00:26:20,676
可以支持所有的这些手势


794
00:26:21,286 --> 00:26:24,466
实现 carouselAccessibilityElement


795
00:26:28,836 --> 00:26:30,336
它是 UIAccessibiliyElementlement


796
00:26:30,336 --> 00:26:31,376
的子类


797
00:26:31,946 --> 00:26:33,136
它还需要知道


798
00:26:33,136 --> 00:26:34,216
所代表的狗


799
00:26:34,216 --> 00:26:36,846
所以我们要创建一个属性


800
00:26:38,216 --> 00:26:40,556
还要给它一个初始化程序


801
00:26:40,556 --> 00:26:43,766
一些基础的


802
00:26:43,766 --> 00:26:45,306
辅助功能 


803
00:26:45,306 --> 00:26:48,926
标签和变量值


804
00:26:48,926 --> 00:26:50,476
标签是 “Dog Picker”


805
00:26:51,326 --> 00:26:53,476
变量值是 “currentDog”


806
00:26:53,476 --> 00:26:55,226
和它的 "Favorited" 的组合


807
00:26:55,776 --> 00:27:00,916
好了 现在开始递增和递减功能


808
00:27:01,456 --> 00:27:04,396
首先重写 accessibilityTraits


809
00:27:04,396 --> 00:27:08,826
返回到 adjustableTrait


810
00:27:09,296 --> 00:27:10,086
我们先运行


811
00:27:10,086 --> 00:27:11,096
accessibilityIncrement()


812
00:27:14,116 --> 00:27:16,366
我们想让递增功能


813
00:27:16,436 --> 00:27:17,616
达到向前滚动


814
00:27:17,616 --> 00:27:17,996
图集视图的效果


815
00:27:18,376 --> 00:27:19,536
所以让我们创建一个功能


816
00:27:19,536 --> 00:27:19,976
可以精确地做到这一点


817
00:27:28,046 --> 00:27:29,126
现在有一个函数


818
00:27:29,126 --> 00:27:30,806
accessibilityScrollCollectionView


819
00:27:31,476 --> 00:27:32,926
它以布尔值表示


820
00:27:32,926 --> 00:27:34,036
决定了图集视图


821
00:27:34,036 --> 00:27:35,746
是向前滚动 还是向后滚动


822
00:27:36,586 --> 00:27:37,786
在这个函数里


823
00:27:38,846 --> 00:27:39,866
给容器视图加上引用 ——


824
00:27:39,866 --> 00:27:42,256
当前狗


825
00:27:42,876 --> 00:27:44,086
和所有狗的列表


826
00:27:45,356 --> 00:27:47,176
如果我向前滚动


827
00:27:47,176 --> 00:27:49,116
我能够得到当前狗的索引


828
00:27:49,116 --> 00:27:50,796
然后验证它有没有越界


829
00:27:50,796 --> 00:27:53,326
如果没有


830
00:27:53,326 --> 00:27:54,896
我会让图集视图


831
00:27:54,896 --> 00:27:56,366
向前滚动一个索引


832
00:27:57,286 --> 00:27:58,696
然后我将在向后滚动


833
00:27:58,696 --> 00:28:01,006
做类似的操作


834
00:28:01,006 --> 00:28:02,206
不同的是先确定我的索引不会为负值


835
00:28:02,206 --> 00:28:04,566
然后让图集


836
00:28:04,566 --> 00:28:06,706
向后滚动一个索引


837
00:28:08,386 --> 00:28:09,276
接着往下 在递增功能中


838
00:28:09,276 --> 00:28:11,000
使用这个函数


839
00:28:16,196 --> 00:28:17,416
将 Forwards 置为 true


840
00:28:17,416 --> 00:28:18,506
表明我想要向前滚动


841
00:28:19,916 --> 00:28:21,446
类似地 我可以实现


842
00:28:21,446 --> 00:28:24,406
accessibilityDecrement()


843
00:28:25,136 --> 00:28:26,786
唯一的不同点是


844
00:28:26,786 --> 00:28:28,296
置为 false


845
00:28:28,296 --> 00:28:28,996
因为我想向后滚动


846
00:28:29,726 --> 00:28:30,676
这就是


847
00:28:30,676 --> 00:28:31,576
carouselAccessibilityElement 部分


848
00:28:32,416 --> 00:28:33,276
让我们滚动回上面的


849
00:28:33,276 --> 00:28:34,000
ContainerView


850
00:28:38,346 --> 00:28:40,006
这里我们需要暴露


851
00:28:40,006 --> 00:28:41,436
carouselAccessibilityElement


852
00:28:41,726 --> 00:28:43,156
要做到这样


853
00:28:43,156 --> 00:28:44,000
我们可以重写 accessibilityElements


854
00:28:50,216 --> 00:28:52,076
在这个函数里


855
00:28:52,076 --> 00:28:53,286
加一个当前狗的引用


856
00:28:53,286 --> 00:28:54,876
在继续创建我的元素之前


857
00:28:54,876 --> 00:28:55,996
确保它是有效的


858
00:28:56,626 --> 00:28:58,576
现在我们开始实例化


859
00:28:58,576 --> 00:29:00,000
carouselAccessibilityElement


860
00:29:06,396 --> 00:29:08,056
首先给


861
00:29:08,056 --> 00:29:09,106
carouselAccessibilityElement 一个引用


862
00:29:09,106 --> 00:29:10,916
如果早就已经有一个的话


863
00:29:11,066 --> 00:29:13,376
如果没有 在这里实例化一个


864
00:29:13,376 --> 00:29:16,346
把 accessibilityFrame


865
00:29:16,346 --> 00:29:18,086
设置成 dogCollectionView.frame


866
00:29:18,086 --> 00:29:19,726
然后我会在这里


867
00:29:19,726 --> 00:29:20,896
给它保存一个引用


868
00:29:20,896 --> 00:29:23,766
最后我将返回


869
00:29:23,766 --> 00:29:24,526
元素数组


870
00:29:25,636 --> 00:29:28,236
在做这个之前


871
00:29:28,656 --> 00:29:29,916
我想给我的数组添加一些元素


872
00:29:34,776 --> 00:29:36,306
先看看当前狗的照片


873
00:29:36,306 --> 00:29:37,706
有没有超过一张


874
00:29:37,706 --> 00:29:39,606
如果超过了 


875
00:29:39,606 --> 00:29:40,646
我希望我的数组包括 


876
00:29:40,646 --> 00:29:41,956
carouselAccessibilityElement


877
00:29:41,956 --> 00:29:43,356
favoriteButton 和 galleryButton


878
00:29:43,356 --> 00:29:45,066
但是如果狗的照片


879
00:29:45,066 --> 00:29:46,836
只有一张


880
00:29:46,836 --> 00:29:48,276
那就把 galleryButton 删除


881
00:29:48,816 --> 00:29:52,836
我要记得做一件事是


882
00:29:52,836 --> 00:29:54,646
如果对应的属性


883
00:29:54,646 --> 00:29:55,966
在我的 containerView 中


884
00:29:55,966 --> 00:29:58,016
更新了的话


885
00:29:58,256 --> 00:29:59,416
在 carouselAccessibilityElement 上


886
00:29:59,416 --> 00:30:02,316
也要更新当前狗的属性


887
00:30:05,756 --> 00:30:06,696
马上就做好了


888
00:30:07,366 --> 00:30:09,286
回忆一下当我划向轮播界面时


889
00:30:09,286 --> 00:30:13,876
信息统计视图的内容改变了


890
00:30:14,526 --> 00:30:15,836
但是当我通过旁白滑动时


891
00:30:15,836 --> 00:30:17,676
我需要让 App


892
00:30:17,676 --> 00:30:18,986
让旁白知道


893
00:30:18,986 --> 00:30:19,896
它需要更新


894
00:30:19,896 --> 00:30:20,626
对屏幕上


895
00:30:20,626 --> 00:30:22,256
accessibilityElements 的理解


896
00:30:22,726 --> 00:30:24,526
要做到这一点


897
00:30:24,526 --> 00:30:25,826
我可以在每次滑动时


898
00:30:25,826 --> 00:30:26,586
发送一个布局变化的通知


899
00:30:27,156 --> 00:30:29,496
找到视图控制文件


900
00:30:29,496 --> 00:30:31,736
在 scrollViewDidScrollView 里


901
00:30:31,736 --> 00:30:33,896
在最后面


902
00:30:33,896 --> 00:30:37,066
发送 LayoutChanged 的通知


903
00:30:37,096 --> 00:30:37,436
就像这样


904
00:30:37,996 --> 00:30:41,566
这就是对 carouselContainerView


905
00:30:41,566 --> 00:30:42,106
做出的处理


906
00:30:42,946 --> 00:30:45,986
这个方法的核心部分是


907
00:30:45,986 --> 00:30:47,706
使用和创建 accessibilityElements


908
00:30:47,706 --> 00:30:49,666
而且我可以使用


909
00:30:49,666 --> 00:30:51,026
同样的概念来解决


910
00:30:51,026 --> 00:30:53,146
统计视图中的另一个问题


911
00:30:53,796 --> 00:30:55,156
回忆一下统计视图


912
00:30:55,286 --> 00:30:56,146
所有的信息


913
00:30:56,146 --> 00:30:58,246
都是分开的 缺少上下文


914
00:30:58,856 --> 00:31:00,456
我可以使用同样的概念


915
00:31:00,456 --> 00:31:02,216
给统计视图中的信息


916
00:31:02,476 --> 00:31:03,926
归类分组


917
00:31:04,266 --> 00:31:08,296
添加上下文


918
00:31:08,296 --> 00:31:09,686
找到 docStatsView


919
00:31:09,686 --> 00:31:10,866
这些所有的统计视图


920
00:31:11,066 --> 00:31:14,706
都在这里进行布局


921
00:31:14,956 --> 00:31:16,236
首先重写 


922
00:31:16,236 --> 00:31:17,706
accessibilityElements


923
00:31:17,706 --> 00:31:18,000
创建我的元素


924
00:31:25,216 --> 00:31:26,456
我想缓存 


925
00:31:26,456 --> 00:31:27,756
从这个函数创建的元素


926
00:31:27,756 --> 00:31:28,896
这样我就不需要


927
00:31:28,896 --> 00:31:30,326
每次都重新计算它们了


928
00:31:30,916 --> 00:31:32,126
要做到这一点


929
00:31:32,126 --> 00:31:33,206
我可以创建一个私有属性值


930
00:31:33,206 --> 00:31:34,146
名为 _accessibilityElements


931
00:31:34,146 --> 00:31:35,466
起到缓存的作用


932
00:31:35,466 --> 00:31:36,906
保存这些元素


933
00:31:37,466 --> 00:31:39,436
继续函数


934
00:31:42,616 --> 00:31:44,576
先看一下我的缓存是不是空白的


935
00:31:44,576 --> 00:31:46,246
如果是的话


936
00:31:46,246 --> 00:31:47,326
就继续填充我的元素


937
00:31:48,816 --> 00:31:50,156
重申所有的 titleLabel


938
00:31:50,156 --> 00:31:52,116
给 titleLabel


939
00:31:52,386 --> 00:31:54,076
一个引用


940
00:31:54,076 --> 00:31:56,256
像是品种


941
00:31:56,256 --> 00:31:57,696
它对应的变量值 


942
00:31:57,856 --> 00:31:59,566
比如说 拉布拉多


943
00:32:00,166 --> 00:32:02,716
加上标题


944
00:32:02,716 --> 00:32:04,106
和它对应的变量值


945
00:32:04,106 --> 00:32:05,756
我就可以创建一个 


946
00:32:05,756 --> 00:32:07,136
accessibilityElements


947
00:32:07,136 --> 00:32:09,000
它包含这两种信息


948
00:32:21,336 --> 00:32:22,216
首先在这里创建


949
00:32:22,216 --> 00:32:24,006
accessibilityElements


950
00:32:24,006 --> 00:32:25,456
把 label 和 accessibilityFrame


951
00:32:25,456 --> 00:32:28,956
设置成 一个对应的变量值的组合


952
00:32:28,956 --> 00:32:32,636
包括标题和变量值


953
00:32:33,476 --> 00:32:34,876
把这个元素


954
00:32:34,876 --> 00:32:38,066
添加到我的数组元素


955
00:32:38,326 --> 00:32:40,126
当我循环了每组标题和变量值时


956
00:32:40,126 --> 00:32:42,266
最后我会把缓存


957
00:32:42,266 --> 00:32:43,686
设置成等同于这个数组


958
00:32:43,686 --> 00:32:45,476
返回这些元素


959
00:32:46,056 --> 00:32:48,486
要记住


960
00:32:48,486 --> 00:32:50,356
每次狗的对象更新时   


961
00:32:50,356 --> 00:32:51,876
都要重置缓存


962
00:32:51,876 --> 00:32:53,656
这样我们可以


963
00:32:53,656 --> 00:32:55,236
为新的狗计算新的元素


964
00:32:56,696 --> 00:32:58,596
要做到这一点


965
00:32:58,596 --> 00:32:59,346
只需在这里把它置为 nil


966
00:32:59,986 --> 00:33:04,056
这就是对狗的统计视图的操作


967
00:33:05,336 --> 00:33:06,876
接下来


968
00:33:06,876 --> 00:33:08,426
为拨号和打开定位按钮


969
00:33:08,426 --> 00:33:09,436
添加一些内容


970
00:33:10,056 --> 00:33:12,546
找到 shelterInfoView


971
00:33:12,546 --> 00:33:14,906
里面引用了


972
00:33:14,906 --> 00:33:16,016
救助站的名字


973
00:33:16,016 --> 00:33:18,916
地图按钮和拨号按钮


974
00:33:20,966 --> 00:33:22,236
我们希望在它们的内容视图上


975
00:33:22,236 --> 00:33:24,166
这两个按钮


976
00:33:24,166 --> 00:33:25,316
是自定义动作


977
00:33:25,316 --> 00:33:27,246
要实现这一点


978
00:33:27,246 --> 00:33:28,486
我们可以先把内容视图


979
00:33:28,486 --> 00:33:30,216
暴露为 accessibilityElement


980
00:33:34,016 --> 00:33:35,566
继续给它一个


981
00:33:35,566 --> 00:33:36,756
命名标签


982
00:33:36,756 --> 00:33:38,000
就是救助站的名字


983
00:33:42,686 --> 00:33:43,876
>> 最后重写


984
00:33:43,876 --> 00:33:45,436
accessibilityCustomActions


985
00:33:50,056 --> 00:33:51,296
在这个函数里


986
00:33:51,296 --> 00:33:53,536
我们可以创建两个自定义动作


987
00:33:53,536 --> 00:33:55,516
地图动作和拨号动作


988
00:33:56,456 --> 00:33:58,276
旁白会把它们描述为


989
00:33:58,336 --> 00:33:59,936
"Open address in Maps" 和 "Call"


990
00:34:00,286 --> 00:34:01,176
但是要确保


991
00:34:01,176 --> 00:34:02,066
正确定位这些字符串


992
00:34:04,296 --> 00:34:05,856
每一个动作都要响应


993
00:34:05,856 --> 00:34:07,416
对应的函数


994
00:34:07,416 --> 00:34:08,426
然后激活那个按钮


995
00:34:09,186 --> 00:34:11,076
比如说地图动作


996
00:34:11,076 --> 00:34:12,906
会响应激活地图按钮


997
00:34:13,036 --> 00:34:15,426
然后就会激活地图按钮


998
00:34:15,606 --> 00:34:17,266
我已经在这里


999
00:34:17,545 --> 00:34:19,065
顺手定义了函数


1000
00:34:19,226 --> 00:34:22,346
确保返回


1001
00:34:22,346 --> 00:34:24,246
以表明你的方式是成功的


1002
00:34:25,275 --> 00:34:26,846
这就是对救助站视图的操作


1003
00:34:28,496 --> 00:34:31,525
最后 改变模态视图


1004
00:34:31,525 --> 00:34:32,025
提升使用体验


1005
00:34:32,676 --> 00:34:35,326
我已经在 DogModalView 中


1006
00:34:35,326 --> 00:34:37,446
定义了模态视图


1007
00:34:37,446 --> 00:34:39,065
正如 Skyler 所说 


1008
00:34:39,065 --> 00:34:40,306
为了帮助旁白将其识别为模态视图


1009
00:34:40,886 --> 00:34:43,000
我需要重写 accessibilityViewIsModal


1010
00:34:48,045 --> 00:34:50,085
马上就做好了


1011
00:34:50,206 --> 00:34:51,226
需要记住一点


1012
00:34:51,226 --> 00:34:52,585
当我按下图册按钮时


1013
00:34:53,436 --> 00:34:54,916
我们需要让 App 知道


1014
00:34:54,916 --> 00:34:56,166
屏幕上内容的布局


1015
00:34:56,166 --> 00:34:58,016
已经发生变了


1016
00:34:58,016 --> 00:34:59,646
这样旁白就可以选中正确焦点


1017
00:35:00,426 --> 00:35:01,696
为了做到这一点 


1018
00:35:01,696 --> 00:35:03,836
可以每当图册按钮被按下时


1019
00:35:03,836 --> 00:35:04,976
发布一个屏幕改变通知


1020
00:35:06,776 --> 00:35:07,556
现在找到


1021
00:35:07,556 --> 00:35:11,426
视图控制器文件


1022
00:35:11,426 --> 00:35:12,916
在 galleryButtonPressed 函数里


1023
00:35:14,116 --> 00:35:15,576
如果我在模态视图创建动画


1024
00:35:15,576 --> 00:35:17,216
那么我会发布一个 screenChanged 的通知


1025
00:35:17,216 --> 00:35:20,606
就像这样


1026
00:35:21,576 --> 00:35:23,326
这就完了


1027
00:35:24,426 --> 00:35:25,636
我已经用这些新的辅助功能操作


1028
00:35:25,636 --> 00:35:26,856
预编译了 App


1029
00:35:26,856 --> 00:35:28,876
现在让我们看看新的


1030
00:35:28,876 --> 00:35:29,666
提升了的体验


1031
00:35:29,666 --> 00:35:30,466
是什么样的


1032
00:35:35,136 --> 00:35:36,556
打开旁白


1033
00:35:38,116 --> 00:35:39,106
>> 打开旁白 


1034
00:35:39,446 --> 00:35:40,466
Exceptional Dogs


1035
00:35:40,866 --> 00:35:41,656
选择狗


1036
00:35:41,966 --> 00:35:42,496
Pinky


1037
00:35:42,796 --> 00:35:43,536
可调整


1038
00:35:45,066 --> 00:35:46,796
用一只手指上下滑动


1039
00:35:46,796 --> 00:35:47,986
调整值


1040
00:35:48,596 --> 00:35:49,666
>> 旁白告诉我


1041
00:35:49,666 --> 00:35:51,776
我可以像这样上下滑动


1042
00:35:52,146 --> 00:35:53,336
继续 上下滑动


1043
00:35:53,336 --> 00:35:54,366
滚动浏览轮播界面


1044
00:35:55,176 --> 00:35:55,596
>> Layla


1045
00:35:56,376 --> 00:35:58,096
>> 向下滚动


1046
00:35:58,096 --> 00:35:58,616
对不起 是向下滑


1047
00:35:59,406 --> 00:35:59,956
>> Pinky


1048
00:36:00,846 --> 00:36:02,306
>> 我也可以从左向右


1049
00:36:02,306 --> 00:36:03,516
滑动到收藏按钮和图册按钮


1050
00:36:03,516 --> 00:36:04,676
就像这样


1051
00:36:05,186 --> 00:36:07,756
>> 收藏 按钮


1052
00:36:07,756 --> 00:36:09,066
显示图册 按钮 


1053
00:36:10,156 --> 00:36:12,046
>> 现在 我不仅可以


1054
00:36:12,046 --> 00:36:13,356
看到轮播界面里的每一只狗


1055
00:36:13,406 --> 00:36:14,726
而且还可以使用轮播界面里


1056
00:36:14,726 --> 00:36:16,226
每一只狗下面的收藏按钮


1057
00:36:16,226 --> 00:36:16,856
和图册按钮


1058
00:36:17,886 --> 00:36:19,546
再一次从左向右滑


1059
00:36:19,546 --> 00:36:21,236
跳过轮播界面


1060
00:36:21,236 --> 00:36:22,656
到统计视图 


1061
00:36:22,696 --> 00:36:23,076
就像这样


1062
00:36:23,726 --> 00:36:25,026
>> 名字 Pinky


1063
00:36:25,776 --> 00:36:26,826
>> 这样我就不需要 


1064
00:36:26,856 --> 00:36:27,716
导航整个轮播界面


1065
00:36:28,376 --> 00:36:30,086
现在体验感觉好了很多


1066
00:36:31,136 --> 00:36:33,036
继续浏览统计视图


1067
00:36:33,036 --> 00:36:34,376
看看会有什么样的体验


1068
00:36:34,496 --> 00:36:35,886
从左向右滑动


1069
00:36:35,886 --> 00:36:37,016
来导航这个界面


1070
00:36:37,626 --> 00:36:38,816
>> 品种 杂交


1071
00:36:39,486 --> 00:36:41,736
年龄 7 岁


1072
00:36:43,036 --> 00:36:44,026
>> 因为这个信息


1073
00:36:44,026 --> 00:36:45,246
现在已经归类分组了


1074
00:36:45,366 --> 00:36:46,486
可以给我更多的上下文联系


1075
00:36:46,486 --> 00:36:48,816
导航也变快了


1076
00:36:48,816 --> 00:36:50,116
因为我不需要浏览


1077
00:36:50,116 --> 00:36:51,676
每一个单独的标签


1078
00:36:52,996 --> 00:36:54,466
现在我把手放在


1079
00:36:54,466 --> 00:36:55,336
救助站的名字上


1080
00:36:56,256 --> 00:36:57,826
>> Skyler 的动物救助站


1081
00:36:59,276 --> 00:37:00,316
可用动作


1082
00:37:00,986 --> 00:37:02,486
>> 旁白提示我


1083
00:37:02,486 --> 00:37:03,526
这里有可用动作


1084
00:37:03,526 --> 00:37:04,906
所以我们向上滑动 看看是什么


1085
00:37:05,616 --> 00:37:06,886
>> 在地图中打开地址


1086
00:37:07,926 --> 00:37:08,296
拨号


1087
00:37:09,216 --> 00:37:10,646
>> 这样我就清楚了


1088
00:37:10,646 --> 00:37:12,096
这些动作


1089
00:37:12,096 --> 00:37:13,286
是关于救助站名字的


1090
00:37:13,286 --> 00:37:14,726
而且可以在这里被执行


1091
00:37:15,096 --> 00:37:16,456
这给了我更多上下文


1092
00:37:17,556 --> 00:37:20,316
最后 双击图册按钮


1093
00:37:20,316 --> 00:37:21,066
激活模态视图


1094
00:37:21,626 --> 00:37:23,296
>> 显示图册 按钮 


1095
00:37:23,926 --> 00:37:26,426
Pinky 的第一张照片


1096
00:37:26,816 --> 00:37:27,246
图像


1097
00:37:27,306 --> 00:37:28,246
>> 从左向右滑动


1098
00:37:28,246 --> 00:37:29,006
浏览图册


1099
00:37:29,546 --> 00:37:30,966
>> 第二张照片


1100
00:37:30,966 --> 00:37:34,506
第三张照片 关闭 关闭 关闭按钮


1101
00:37:34,856 --> 00:37:36,306
>> 聚焦不会超过


1102
00:37:36,306 --> 00:37:36,876
模态视图区域了


1103
00:37:37,226 --> 00:37:39,416
现在体验好多了


1104
00:37:40,026 --> 00:37:43,500
>> 关闭旁白 


1105
00:37:45,516 --> 00:37:50,226
［ 掌声 ］


1106
00:37:50,726 --> 00:37:52,346
>> 刚才把我们 App 的


1107
00:37:52,346 --> 00:37:53,546
辅助功能体验


1108
00:37:53,546 --> 00:37:55,676
从仅仅是可用


1109
00:37:55,676 --> 00:37:56,246
变成了出色的效果


1110
00:37:56,976 --> 00:37:58,456
我们是通过


1111
00:37:58,456 --> 00:37:59,836
围绕用户塑造体验 


1112
00:37:59,986 --> 00:38:01,216
和模拟这个体验的交互


1113
00:38:01,216 --> 00:38:02,896
来实现这种转变的


1114
00:38:02,896 --> 00:38:04,686
通过这种改变


1115
00:38:04,686 --> 00:38:06,036
我们减少了用户的认知负担


1116
00:38:06,636 --> 00:38:08,256
你的用户会喜欢


1117
00:38:08,256 --> 00:38:09,496
你为 App 的辅助功能


1118
00:38:09,496 --> 00:38:11,226
多付出的这点努力


1119
00:38:11,226 --> 00:38:12,196
他们可以像其他人一样


1120
00:38:12,196 --> 00:38:12,786
享用这个软件


1121
00:38:13,306 --> 00:38:14,076
现在 我把剩下的时间交给


1122
00:38:14,076 --> 00:38:16,436
Skyler


1123
00:38:17,516 --> 00:38:19,876
［ 掌声 ］


1124
00:38:20,376 --> 00:38:21,956
>> 谢谢你 Bhavya


1125
00:38:22,836 --> 00:38:23,826
希望 Bhavya 的演示


1126
00:38:23,826 --> 00:38:25,756
能够向大家示范


1127
00:38:25,756 --> 00:38:27,106
一些小的改变


1128
00:38:27,106 --> 00:38:28,936
如何使辅助功能体验 变得更好


1129
00:38:29,786 --> 00:38:30,866
要注意的是


1130
00:38:30,866 --> 00:38:32,796
为你的 App 的辅助功能


1131
00:38:32,796 --> 00:38:34,176
创建一些个性化交互


1132
00:38:34,176 --> 00:38:35,836
并不总是好的选择


1133
00:38:36,456 --> 00:38:38,266
有时就简单的办法就是最好的


1134
00:38:38,266 --> 00:38:40,996
但是要让 App 可以无障碍使用


1135
00:38:40,996 --> 00:38:42,436
你真正要做的是


1136
00:38:42,436 --> 00:38:44,716
不仅仅考虑表层问题


1137
00:38:44,716 --> 00:38:46,376
而是要深入思考


1138
00:38:46,376 --> 00:38:47,856
对于那些通过科技


1139
00:38:47,856 --> 00:38:49,486
使用你 App 的用户来说


1140
00:38:49,486 --> 00:38:53,036
意味着什么


1141
00:38:53,276 --> 00:38:54,476
总结一下


1142
00:38:54,476 --> 00:38:55,916
我想回到今天开头所说的东西


1143
00:38:56,696 --> 00:39:00,866
可用性 是让 App 无障碍的第一步


1144
00:39:00,916 --> 00:39:02,106
但是我们能做得更好


1145
00:39:03,326 --> 00:39:05,676
我们能够也应该


1146
00:39:05,676 --> 00:39:06,976
为用户提供


1147
00:39:07,196 --> 00:39:08,706
出色的 愉悦的体验


1148
00:39:08,706 --> 00:39:09,976
满足他们的特殊需求


1149
00:39:11,726 --> 00:39:12,926
有很多方法


1150
00:39:12,926 --> 00:39:14,096
可以让一个无障碍 App


1151
00:39:14,096 --> 00:39:15,496
从有用的变成出色的


1152
00:39:16,836 --> 00:39:18,146
预先设计辅助功能


1153
00:39:18,146 --> 00:39:20,066
可以给你带来很多好处


1154
00:39:20,496 --> 00:39:21,946
比如确保


1155
00:39:21,946 --> 00:39:23,096
颜色达到


1156
00:39:23,096 --> 00:39:25,446
最低推荐对比度


1157
00:39:25,446 --> 00:39:27,056
或者布局可以充分适应


1158
00:39:27,056 --> 00:39:29,226
字体大小的改变


1159
00:39:29,226 --> 00:39:30,956
这将对所有的用户都是有益的


1160
00:39:31,616 --> 00:39:33,216
但是你也要


1161
00:39:33,216 --> 00:39:34,906
扩充你的默认设计


1162
00:39:34,906 --> 00:39:36,496
使它包含用户授权的设置


1163
00:39:38,066 --> 00:39:39,116
最后 在优化辅助科技的


1164
00:39:39,116 --> 00:39:41,126
辅助功能体验时


1165
00:39:41,126 --> 00:39:44,046
有目的地来做这件事


1166
00:39:44,856 --> 00:39:46,126
内容优先


1167
00:39:46,536 --> 00:39:47,966
在需要的时候


1168
00:39:47,966 --> 00:39:50,046
让导航和内容提示


1169
00:39:50,046 --> 00:39:50,786
变得简单直观


1170
00:39:52,486 --> 00:39:54,336
如果对于现在看到的 App 样本


1171
00:39:54,336 --> 00:39:56,126
一个简化的完成版


1172
00:39:56,126 --> 00:39:57,646
你想了解更多的信息和方法


1173
00:39:57,646 --> 00:40:00,876
你可以点击开发人员门户网站上的会议链接


1174
00:40:01,476 --> 00:40:02,786
而且在这场讨论会之后


1175
00:40:02,786 --> 00:40:06,336
我们会去 9 号科技实验室


1176
00:40:06,336 --> 00:40:08,056
届时会有辅助功能实验室


1177
00:40:08,056 --> 00:40:10,196
你可以询问关于 App 无障碍化


1178
00:40:10,196 --> 00:40:13,836
或者关于在辅助功能方面


1179
00:40:14,216 --> 00:40:15,226
如何优化体验的任何问题


1180
00:40:15,226 --> 00:40:16,626
所以如果你有任何问题


1181
00:40:16,626 --> 00:40:17,246
欢迎前来咨询


1182
00:40:18,326 --> 00:40:19,736
谢谢大家 希望大家能够


1183
00:40:19,736 --> 00:40:20,696
享受 WWDC 的其他内容


1184
00:40:21,016 --> 00:40:23,000
［ 掌声 ］

