WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:07.516 --> 00:00:15.500 A:middle
[ Background Sounds ]

00:00:23.516 --> 00:00:27.160 A:middle
[ Applause ]

00:00:28.276 --> 00:00:29.166 A:middle
&gt;&gt; I'm happy -- my name is

00:00:29.166 --> 00:00:29.576 A:middle
Etienne.

00:00:29.576 --> 00:00:30.966 A:middle
And I'm happy to be here today

00:00:31.176 --> 00:00:33.546 A:middle
to show you how you can use

00:00:33.586 --> 00:00:35.166 A:middle
depth to apply new kind of

00:00:35.226 --> 00:00:36.696 A:middle
effects to your images.

00:00:38.666 --> 00:00:40.866 A:middle
First, we're going to see what

00:00:40.936 --> 00:00:42.746 A:middle
depth is and what it looks like.

00:00:43.326 --> 00:00:44.936 A:middle
Then we're going to see how to

00:00:44.936 --> 00:00:46.536 A:middle
load it and read it from our

00:00:46.536 --> 00:00:47.166 A:middle
image files.

00:00:48.356 --> 00:00:49.826 A:middle
And then we're going to show you

00:00:50.156 --> 00:00:52.546 A:middle
several examples of effects you

00:00:52.546 --> 00:00:53.866 A:middle
can achieve with depth.

00:00:54.486 --> 00:00:56.456 A:middle
And we'll conclude with how to

00:00:56.456 --> 00:00:57.286 A:middle
save depth data.

00:00:58.606 --> 00:00:59.006 A:middle
All right.

00:00:59.266 --> 00:00:59.966 A:middle
So let's get started.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:01.536 --> 00:01:03.226 A:middle
What is depth?

00:01:03.956 --> 00:01:05.296 A:middle
So, to answer that question,

00:01:05.626 --> 00:01:07.486 A:middle
let's start with how we capture

00:01:07.486 --> 00:01:07.786 A:middle
depth.

00:01:10.806 --> 00:01:13.396 A:middle
Depth can be captured only on

00:01:14.016 --> 00:01:17.066 A:middle
iPhone 7+ and only on iOS 11.

00:01:18.036 --> 00:01:22.006 A:middle
iPhone 7+ has a dual camera

00:01:22.006 --> 00:01:24.106 A:middle
system that can be set to

00:01:24.106 --> 00:01:25.856 A:middle
capture two images of the same

00:01:25.856 --> 00:01:27.846 A:middle
scene at the same time and at

00:01:27.846 --> 00:01:28.756 A:middle
the same focal length.

00:01:29.476 --> 00:01:32.026 A:middle
The differences between those

00:01:32.026 --> 00:01:34.236 A:middle
two images is called disparity.

00:01:35.766 --> 00:01:38.146 A:middle
So disparity is a measure of the

00:01:38.146 --> 00:01:39.016 A:middle
parallax effect.

00:01:39.416 --> 00:01:41.546 A:middle
It measures how objects that are

00:01:41.546 --> 00:01:43.496 A:middle
closer to the camera tends to

00:01:43.496 --> 00:01:47.656 A:middle
move, to shift more from one

00:01:47.656 --> 00:01:49.516 A:middle
image to the other.

00:01:49.796 --> 00:01:51.656 A:middle
Once we know disparity, we can

00:01:51.656 --> 00:01:53.866 A:middle
compute depth with a simple

00:01:54.046 --> 00:01:54.446 A:middle
formula.

00:01:55.476 --> 00:01:57.316 A:middle
Depth is 1 over disparity.

00:01:59.546 --> 00:02:01.506 A:middle
So, in the remaining of this

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:59.546 --> 00:02:01.506 A:middle
So, in the remaining of this

00:02:01.506 --> 00:02:02.626 A:middle
session we're going to talk

00:02:02.626 --> 00:02:04.676 A:middle
about depth or disparity under

00:02:04.676 --> 00:02:06.476 A:middle
the broad term of depth data.

00:02:06.966 --> 00:02:09.145 A:middle
But remember, they're pretty

00:02:09.145 --> 00:02:11.806 A:middle
similar and one is the inverse

00:02:11.806 --> 00:02:13.686 A:middle
of the other.

00:02:14.656 --> 00:02:16.216 A:middle
For more information about how

00:02:16.216 --> 00:02:18.106 A:middle
we capture depth, I would refer

00:02:18.106 --> 00:02:20.626 A:middle
you to the session on capturing

00:02:20.626 --> 00:02:22.176 A:middle
depth in iPhone photography that

00:02:22.176 --> 00:02:22.896 A:middle
took place yesterday.

00:02:23.996 --> 00:02:25.006 A:middle
All right.

00:02:26.986 --> 00:02:28.516 A:middle
So now that we know what depth

00:02:28.516 --> 00:02:30.656 A:middle
and disparity looks like --

00:02:30.656 --> 00:02:32.306 A:middle
sorry -- now that we know what

00:02:32.306 --> 00:02:33.436 A:middle
depth and disparity is, let's

00:02:33.436 --> 00:02:34.566 A:middle
take a look at what it looks

00:02:34.566 --> 00:02:35.386 A:middle
like in practice.

00:02:35.796 --> 00:02:36.996 A:middle
And for that, I'm going to call

00:02:36.996 --> 00:02:38.376 A:middle
my colleague, Craig, to show you

00:02:38.686 --> 00:02:39.376 A:middle
what it looks like.

00:02:39.876 --> 00:02:40.076 A:middle
Craig.

00:02:42.516 --> 00:02:46.856 A:middle
[ Applause ]

00:02:47.356 --> 00:02:48.216 A:middle
&gt;&gt; Thank you, Etienne.

00:02:49.046 --> 00:02:50.586 A:middle
What we're seeing here is an

00:02:50.586 --> 00:02:51.916 A:middle
image that was captured by the

00:02:51.916 --> 00:02:53.066 A:middle
iPhone 7+.

00:02:55.326 --> 00:02:56.886 A:middle
And here is its disparity map.

00:02:57.106 --> 00:02:59.816 A:middle
And as we've learned, disparity

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:00.776 --> 00:03:03.126 A:middle
refers to the distance between

00:03:03.126 --> 00:03:04.576 A:middle
two corresponding points that

00:03:04.576 --> 00:03:06.396 A:middle
were captured by the iPhone 7+'s

00:03:06.396 --> 00:03:07.576 A:middle
dual camera system.

00:03:09.116 --> 00:03:11.286 A:middle
Bright areas are closer to the

00:03:11.286 --> 00:03:14.226 A:middle
camera and correspond to higher

00:03:14.226 --> 00:03:15.296 A:middle
disparity values.

00:03:15.706 --> 00:03:18.196 A:middle
Where dark values are farther

00:03:18.196 --> 00:03:19.166 A:middle
away from the camera and

00:03:19.166 --> 00:03:20.446 A:middle
correspond to low disparity

00:03:20.446 --> 00:03:20.956 A:middle
values.

00:03:21.396 --> 00:03:24.266 A:middle
So, let's go back to the image

00:03:24.666 --> 00:03:26.476 A:middle
and look at the disparity map

00:03:26.476 --> 00:03:26.926 A:middle
again.

00:03:27.876 --> 00:03:29.666 A:middle
We can pinch in to zoom in on an

00:03:29.666 --> 00:03:30.046 A:middle
area.

00:03:30.046 --> 00:03:31.636 A:middle
But we have one more trick we

00:03:31.636 --> 00:03:32.946 A:middle
can do with this application.

00:03:34.796 --> 00:03:36.576 A:middle
If I drag my finger across we

00:03:36.576 --> 00:03:38.646 A:middle
can view the data in 3-D.

00:03:39.516 --> 00:03:42.826 A:middle
[ Applause ]

00:03:43.326 --> 00:03:45.146 A:middle
We can zoom in and really get a

00:03:45.146 --> 00:03:47.886 A:middle
good look at the range of data

00:03:47.886 --> 00:03:49.096 A:middle
that's available to us.

00:03:49.096 --> 00:03:50.536 A:middle
We can rotate all the way around

00:03:50.786 --> 00:03:51.806 A:middle
and look at that again.

00:03:52.116 --> 00:03:54.706 A:middle
And even switch back to the

00:03:54.706 --> 00:03:56.316 A:middle
image data overlaid over top of

00:03:56.956 --> 00:03:57.026 A:middle
it.

00:03:57.596 --> 00:04:00.946 A:middle
So let's look at another image.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:57.596 --> 00:04:00.946 A:middle
So let's look at another image.

00:04:02.726 --> 00:04:04.966 A:middle
Here are some beautiful flowers.

00:04:06.326 --> 00:04:08.446 A:middle
When I zoom in and rotate

00:04:08.446 --> 00:04:11.516 A:middle
around, you see that we need to

00:04:11.516 --> 00:04:13.486 A:middle
fill in those polygons with some

00:04:13.486 --> 00:04:13.856 A:middle
data.

00:04:13.856 --> 00:04:15.486 A:middle
So we just take the image values

00:04:15.486 --> 00:04:16.666 A:middle
and stretch them along there.

00:04:17.236 --> 00:04:19.846 A:middle
This goes to the fact that the

00:04:19.846 --> 00:04:21.616 A:middle
depth data is not a good

00:04:21.616 --> 00:04:23.816 A:middle
representation for recreating a

00:04:23.816 --> 00:04:24.886 A:middle
full 3-D scene.

00:04:25.346 --> 00:04:26.716 A:middle
But this view is still

00:04:26.716 --> 00:04:29.246 A:middle
interesting to look at.

00:04:29.486 --> 00:04:30.796 A:middle
Also, it's important to note

00:04:30.796 --> 00:04:32.506 A:middle
that the disparity map is a

00:04:32.506 --> 00:04:34.356 A:middle
lower resolution than the full

00:04:34.356 --> 00:04:36.156 A:middle
image, roughly a half a

00:04:36.156 --> 00:04:38.116 A:middle
megapixel for the disparity map

00:04:38.116 --> 00:04:39.446 A:middle
versus 12 megapixels for the

00:04:39.446 --> 00:04:39.886 A:middle
image.

00:04:41.836 --> 00:04:43.216 A:middle
This application we built with

00:04:43.216 --> 00:04:43.816 A:middle
SceneKit.

00:04:43.956 --> 00:04:45.186 A:middle
So it made it really easy to

00:04:45.186 --> 00:04:45.696 A:middle
implement.

00:04:46.186 --> 00:04:48.066 A:middle
We took a mesh and then we

00:04:48.066 --> 00:04:50.376 A:middle
transformed the z positions of

00:04:50.376 --> 00:04:52.176 A:middle
the vertices so that the

00:04:52.176 --> 00:04:53.496 A:middle
brighter pixel values were

00:04:53.496 --> 00:04:54.576 A:middle
closer to the camera.

00:04:55.886 --> 00:04:57.526 A:middle
Also, we normalized and remapped

00:04:57.526 --> 00:04:58.936 A:middle
the data so that it made sense

00:04:58.936 --> 00:05:00.096 A:middle
when we viewed it in 3-D.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:58.936 --> 00:05:00.096 A:middle
when we viewed it in 3-D.

00:05:00.516 --> 00:05:03.746 A:middle
We'll look at one more image.

00:05:04.936 --> 00:05:06.576 A:middle
On this image, it's interesting

00:05:06.576 --> 00:05:08.066 A:middle
if we look at the disparity map.

00:05:08.746 --> 00:05:11.106 A:middle
And we zoom in and move around a

00:05:11.106 --> 00:05:12.316 A:middle
little bit, we see that we have

00:05:12.316 --> 00:05:13.856 A:middle
a few distinct planes to work

00:05:13.856 --> 00:05:14.326 A:middle
with here.

00:05:15.666 --> 00:05:17.166 A:middle
So, with that, we might get the

00:05:17.166 --> 00:05:18.316 A:middle
idea that maybe it would be a

00:05:18.316 --> 00:05:19.696 A:middle
good idea to quantize or

00:05:19.696 --> 00:05:21.376 A:middle
threshold this depth data before

00:05:21.376 --> 00:05:22.836 A:middle
we filter it for a more dramatic

00:05:22.836 --> 00:05:23.156 A:middle
effect.

00:05:24.346 --> 00:05:26.106 A:middle
So with that, I'd like to turn

00:05:26.106 --> 00:05:27.256 A:middle
it back over to Etienne.

00:05:30.516 --> 00:05:34.026 A:middle
[ Applause ]

00:05:34.526 --> 00:05:35.046 A:middle
&gt;&gt; Thank you, Craig.

00:05:35.766 --> 00:05:38.446 A:middle
All right.

00:05:38.446 --> 00:05:39.606 A:middle
So now that we've seen what

00:05:39.606 --> 00:05:40.856 A:middle
depth and disparity looks like,

00:05:41.366 --> 00:05:42.896 A:middle
what kind of effects can we

00:05:42.896 --> 00:05:44.596 A:middle
apply with that data?

00:05:45.246 --> 00:05:46.106 A:middle
So let's take a look.

00:05:47.026 --> 00:05:49.226 A:middle
Here's an example image and its

00:05:49.276 --> 00:05:49.986 A:middle
disparity map.

00:05:52.706 --> 00:05:54.206 A:middle
One effect we can apply is a

00:05:54.206 --> 00:05:55.286 A:middle
depth blur effect.

00:05:55.616 --> 00:05:57.376 A:middle
And this is the effect that you

00:05:57.376 --> 00:05:59.606 A:middle
can achieve by capturing using

00:05:59.606 --> 00:06:00.916 A:middle
camera in portrait mode.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.606 --> 00:06:00.916 A:middle
camera in portrait mode.

00:06:03.746 --> 00:06:05.226 A:middle
We can get a bit more creative.

00:06:05.316 --> 00:06:06.856 A:middle
And here's an example where we

00:06:06.856 --> 00:06:08.556 A:middle
apply a different effect to the

00:06:08.556 --> 00:06:09.896 A:middle
background and the foreground.

00:06:10.526 --> 00:06:11.796 A:middle
Here we [inaudible] the

00:06:11.796 --> 00:06:13.686 A:middle
background while increasing the

00:06:13.686 --> 00:06:15.556 A:middle
saturation of the foreground to

00:06:15.556 --> 00:06:16.796 A:middle
make those flowers stand out.

00:06:19.356 --> 00:06:20.886 A:middle
We can go even further than

00:06:20.886 --> 00:06:21.176 A:middle
this.

00:06:21.516 --> 00:06:23.356 A:middle
And here we are actually the

00:06:23.356 --> 00:06:24.676 A:middle
deeming the pixels in the

00:06:24.676 --> 00:06:26.686 A:middle
background proportionally to the

00:06:26.686 --> 00:06:27.176 A:middle
depth.

00:06:28.366 --> 00:06:30.716 A:middle
And so this is just a couple of

00:06:30.716 --> 00:06:32.366 A:middle
examples to give you a taste of

00:06:32.366 --> 00:06:34.056 A:middle
what you can do with depth data.

00:06:34.886 --> 00:06:35.936 A:middle
And we're going to show you how

00:06:35.936 --> 00:06:37.686 A:middle
to do this and more later in the

00:06:37.686 --> 00:06:38.006 A:middle
talk.

00:06:40.256 --> 00:06:41.906 A:middle
Now let's see who could use that

00:06:42.326 --> 00:06:42.446 A:middle
depth.

00:06:42.646 --> 00:06:44.096 A:middle
Well of course, if you are

00:06:44.096 --> 00:06:46.576 A:middle
editing an application, you can

00:06:46.576 --> 00:06:48.536 A:middle
now use depth to create new

00:06:48.536 --> 00:06:50.116 A:middle
kinds of effects and to apply

00:06:50.116 --> 00:06:51.226 A:middle
new kinds of effects to your

00:06:51.226 --> 00:06:51.706 A:middle
images.

00:06:52.906 --> 00:06:53.686 A:middle
But if you're a camera

00:06:53.756 --> 00:06:55.736 A:middle
application, you can also opt in

00:06:55.736 --> 00:06:58.626 A:middle
to capture depth and be the very

00:06:58.626 --> 00:07:00.236 A:middle
first -- apply the very first

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.626 --> 00:07:00.236 A:middle
first -- apply the very first

00:07:00.236 --> 00:07:01.896 A:middle
depth effect to the images such

00:07:01.896 --> 00:07:03.246 A:middle
as your own depth blur effects,

00:07:03.246 --> 00:07:03.776 A:middle
for example.

00:07:05.016 --> 00:07:06.286 A:middle
If you are a sharing

00:07:06.286 --> 00:07:07.646 A:middle
application, you may also want

00:07:07.646 --> 00:07:09.706 A:middle
to take advantage of depth to

00:07:09.706 --> 00:07:11.906 A:middle
apply cool effects before

00:07:12.216 --> 00:07:13.156 A:middle
sharing images.

00:07:14.246 --> 00:07:15.076 A:middle
All right.

00:07:15.916 --> 00:07:17.206 A:middle
But before we can apply any

00:07:17.206 --> 00:07:18.556 A:middle
effects, let's take a look at

00:07:18.556 --> 00:07:20.696 A:middle
how to read depth data and load

00:07:20.696 --> 00:07:21.386 A:middle
it into memory.

00:07:23.806 --> 00:07:24.696 A:middle
So let's take a look.

00:07:25.916 --> 00:07:27.996 A:middle
Depth data is stored in image

00:07:27.996 --> 00:07:30.506 A:middle
files alongside image data in a

00:07:30.506 --> 00:07:32.666 A:middle
section called Auxiliary Data.

00:07:34.836 --> 00:07:37.846 A:middle
Beware that the values image

00:07:37.896 --> 00:07:39.346 A:middle
[inaudible] in the system such

00:07:39.346 --> 00:07:40.556 A:middle
as UI image and [inaudible]

00:07:40.586 --> 00:07:41.546 A:middle
image or [inaudible] image do

00:07:41.736 --> 00:07:43.256 A:middle
not contain depth information.

00:07:44.136 --> 00:07:45.496 A:middle
You need to access the image

00:07:45.496 --> 00:07:47.076 A:middle
file in order to read the depth

00:07:47.076 --> 00:07:47.316 A:middle
data.

00:07:48.036 --> 00:07:49.226 A:middle
So let's see how to do that.

00:07:50.116 --> 00:07:51.306 A:middle
If you're using PhotoKit,

00:07:52.336 --> 00:07:53.406 A:middle
there's a couple of ways to can

00:07:53.406 --> 00:07:54.516 A:middle
access the image file.

00:07:55.126 --> 00:07:57.116 A:middle
You may be using PH Content

00:07:57.116 --> 00:08:00.046 A:middle
Editing input, for instance.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:57.116 --> 00:08:00.046 A:middle
Editing input, for instance.

00:08:00.396 --> 00:08:02.196 A:middle
Here's how you can request the

00:08:02.196 --> 00:08:03.336 A:middle
Content Editing input for a

00:08:03.336 --> 00:08:04.586 A:middle
particular PHAsset.

00:08:05.856 --> 00:08:07.556 A:middle
And you can access the image

00:08:07.646 --> 00:08:09.186 A:middle
file URL from the Content

00:08:09.186 --> 00:08:10.176 A:middle
Editing input that way.

00:08:12.966 --> 00:08:14.406 A:middle
You may also use PH Image

00:08:14.406 --> 00:08:14.886 A:middle
Manager.

00:08:15.816 --> 00:08:18.776 A:middle
You can ask the PH Image Manager

00:08:18.916 --> 00:08:20.476 A:middle
to request image data for a

00:08:20.476 --> 00:08:21.306 A:middle
particular asset.

00:08:21.666 --> 00:08:22.996 A:middle
And that will give you back a

00:08:22.996 --> 00:08:25.256 A:middle
data object that contains the

00:08:25.256 --> 00:08:25.836 A:middle
file data.

00:08:27.826 --> 00:08:28.286 A:middle
All right.

00:08:29.276 --> 00:08:30.726 A:middle
So now that we have access to a

00:08:30.726 --> 00:08:32.416 A:middle
file, let's see if it contained

00:08:32.416 --> 00:08:32.876 A:middle
depth data.

00:08:33.256 --> 00:08:34.025 A:middle
And so we're going to use

00:08:34.025 --> 00:08:34.976 A:middle
ImageIO for this.

00:08:37.436 --> 00:08:38.635 A:middle
We start from an image

00:08:38.635 --> 00:08:39.746 A:middle
[inaudible] that we create from

00:08:39.746 --> 00:08:40.535 A:middle
our image file.

00:08:41.916 --> 00:08:45.786 A:middle
And then we copy the image

00:08:45.786 --> 00:08:46.626 A:middle
source properties.

00:08:47.576 --> 00:08:48.706 A:middle
This will give you back a

00:08:48.706 --> 00:08:50.706 A:middle
dictionary that looks like this

00:08:50.706 --> 00:08:50.996 A:middle
one.

00:08:52.526 --> 00:08:54.086 A:middle
You want to look for the

00:08:54.086 --> 00:08:56.276 A:middle
kCKImage Property Auxiliary data

00:08:56.796 --> 00:08:58.106 A:middle
key in that dictionary.

00:08:58.416 --> 00:09:00.146 A:middle
The presence of that key will

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:58.416 --> 00:09:00.146 A:middle
The presence of that key will

00:09:00.146 --> 00:09:02.086 A:middle
tell you that image file that

00:09:02.086 --> 00:09:03.256 A:middle
you're working with contained

00:09:03.256 --> 00:09:03.936 A:middle
auxiliary data.

00:09:05.306 --> 00:09:06.916 A:middle
You can look at the type of the

00:09:06.916 --> 00:09:07.266 A:middle
data.

00:09:07.266 --> 00:09:08.586 A:middle
And here you can see its

00:09:08.586 --> 00:09:09.186 A:middle
disparity.

00:09:09.596 --> 00:09:10.486 A:middle
Could also be depth.

00:09:11.606 --> 00:09:13.556 A:middle
One thing to note here is that

00:09:13.556 --> 00:09:15.016 A:middle
the dimension of the depth data

00:09:15.656 --> 00:09:17.726 A:middle
are smaller than the dimension

00:09:17.896 --> 00:09:19.036 A:middle
of the full size image.

00:09:20.176 --> 00:09:21.476 A:middle
This is an image captured by

00:09:21.476 --> 00:09:22.426 A:middle
iPhone 7+.

00:09:22.556 --> 00:09:24.036 A:middle
The full size image is 12

00:09:24.036 --> 00:09:24.726 A:middle
megapixel.

00:09:25.206 --> 00:09:27.946 A:middle
And the depth data is about less

00:09:28.116 --> 00:09:29.706 A:middle
than a megapixel.

00:09:31.276 --> 00:09:32.746 A:middle
All right.

00:09:34.156 --> 00:09:35.666 A:middle
So now that we know that we have

00:09:35.666 --> 00:09:37.186 A:middle
a file with depth data, let's

00:09:37.186 --> 00:09:41.406 A:middle
see how we can read it

00:09:41.456 --> 00:09:43.456 A:middle
[inaudible].

00:09:43.506 --> 00:09:44.826 A:middle
So, it goes like this.

00:09:44.826 --> 00:09:46.186 A:middle
We start with the auxiliary data

00:09:46.186 --> 00:09:46.846 A:middle
from the file.

00:09:48.026 --> 00:09:49.516 A:middle
And then we create an AV Depth

00:09:49.516 --> 00:09:50.906 A:middle
Data object, which is an

00:09:50.906 --> 00:09:52.616 A:middle
in-memory representation for the

00:09:52.616 --> 00:09:53.146 A:middle
depth data.

00:09:54.346 --> 00:09:56.736 A:middle
From that object we can access a

00:09:56.736 --> 00:09:58.956 A:middle
CV pixel buffer that contains

00:09:58.956 --> 00:09:59.626 A:middle
the depth data.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:01.276 --> 00:10:02.676 A:middle
The pixel buffer will be a

00:10:02.676 --> 00:10:04.126 A:middle
single channel of data

00:10:05.046 --> 00:10:06.786 A:middle
containing either depth or

00:10:06.786 --> 00:10:09.486 A:middle
disparity and in 16-bit or

00:10:09.486 --> 00:10:10.696 A:middle
32-bit floating [inaudible]

00:10:10.696 --> 00:10:11.336 A:middle
values.

00:10:11.806 --> 00:10:11.966 A:middle
All right.

00:10:12.676 --> 00:10:16.046 A:middle
So let's see how to do that in

00:10:16.046 --> 00:10:16.376 A:middle
code.

00:10:18.246 --> 00:10:21.616 A:middle
Again we start from [inaudible].

00:10:21.616 --> 00:10:23.806 A:middle
And next we ask to copy the

00:10:23.806 --> 00:10:25.646 A:middle
auxiliary data out of the image

00:10:25.646 --> 00:10:25.713 A:middle
[inaudible].

00:10:25.713 --> 00:10:27.626 A:middle
So for that we request a

00:10:27.626 --> 00:10:29.846 A:middle
particular auxiliary data type.

00:10:30.286 --> 00:10:31.306 A:middle
Here we are requesting

00:10:31.306 --> 00:10:31.886 A:middle
disparity.

00:10:32.856 --> 00:10:34.096 A:middle
And this give us back a

00:10:34.096 --> 00:10:36.046 A:middle
dictionary that contains the

00:10:36.046 --> 00:10:38.606 A:middle
auxiliary data.

00:10:38.606 --> 00:10:40.256 A:middle
It [inaudible], and that will

00:10:40.256 --> 00:10:41.956 A:middle
indicate that the image file

00:10:41.956 --> 00:10:44.006 A:middle
does not contain the disparity

00:10:44.006 --> 00:10:45.896 A:middle
-- sorry, the auxiliary data of

00:10:45.896 --> 00:10:46.766 A:middle
that particular type.

00:10:46.896 --> 00:10:48.436 A:middle
So that's another way you can

00:10:48.436 --> 00:10:50.486 A:middle
check if a file contains depth

00:10:50.486 --> 00:10:50.756 A:middle
data.

00:10:53.536 --> 00:10:55.746 A:middle
Next, we can create an AVDepth

00:10:55.746 --> 00:10:57.416 A:middle
Data object from the auxiliary

00:10:57.416 --> 00:10:59.466 A:middle
data, the representation that we

00:10:59.466 --> 00:11:00.526 A:middle
got from ImageIO.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.466 --> 00:11:00.526 A:middle
got from ImageIO.

00:11:02.016 --> 00:11:03.516 A:middle
And that AVDepth Data contains a

00:11:03.516 --> 00:11:04.676 A:middle
couple of properties that you

00:11:04.676 --> 00:11:05.196 A:middle
can ask.

00:11:05.196 --> 00:11:06.966 A:middle
For example, you can check for

00:11:06.966 --> 00:11:08.976 A:middle
its native data type.

00:11:09.836 --> 00:11:11.616 A:middle
And that's a pixel format that

00:11:11.616 --> 00:11:12.306 A:middle
you can check.

00:11:12.306 --> 00:11:13.956 A:middle
And if it's not the one you

00:11:13.956 --> 00:11:16.906 A:middle
want, you can also convert it to

00:11:16.906 --> 00:11:19.016 A:middle
a new pixel format.

00:11:19.046 --> 00:11:22.156 A:middle
So for example, here we ask for

00:11:22.156 --> 00:11:23.456 A:middle
disparity float 16.

00:11:23.486 --> 00:11:24.866 A:middle
Because maybe we're going to use

00:11:24.866 --> 00:11:26.436 A:middle
a disparity map on the GPU, for

00:11:26.436 --> 00:11:26.856 A:middle
example.

00:11:27.766 --> 00:11:30.216 A:middle
And this will return a new AV

00:11:30.216 --> 00:11:31.506 A:middle
Depth Data object of the right

00:11:31.506 --> 00:11:31.926 A:middle
format.

00:11:32.706 --> 00:11:34.376 A:middle
So once you have a depth data

00:11:34.376 --> 00:11:35.616 A:middle
object that you're happy with,

00:11:35.656 --> 00:11:37.886 A:middle
you can access a CV pixel buffer

00:11:38.226 --> 00:11:39.416 A:middle
using the depth data map

00:11:39.416 --> 00:11:39.836 A:middle
property.

00:11:41.326 --> 00:11:42.366 A:middle
Once you have the CV pixel

00:11:42.366 --> 00:11:43.906 A:middle
buffer you can use it directly.

00:11:43.906 --> 00:11:45.716 A:middle
Or you can use it using Metal or

00:11:45.716 --> 00:11:46.246 A:middle
Core Image.

00:11:47.526 --> 00:11:48.566 A:middle
If you're working with Core

00:11:48.566 --> 00:11:50.646 A:middle
Image, there's a convenient way

00:11:50.766 --> 00:11:52.476 A:middle
you can load the depth data

00:11:52.476 --> 00:11:53.856 A:middle
directly into a CI Image.

00:11:54.076 --> 00:11:54.976 A:middle
Here's how to do it.

00:11:55.976 --> 00:11:57.986 A:middle
When you create a CI Image from

00:11:57.986 --> 00:11:59.556 A:middle
the contents of a file, you can

00:11:59.556 --> 00:12:01.626 A:middle
now specify a new option such as

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.556 --> 00:12:01.626 A:middle
now specify a new option such as

00:12:01.986 --> 00:12:05.566 A:middle
kCGIImage auxiliary depth or

00:12:05.566 --> 00:12:09.246 A:middle
disparity to indicate to CI to

00:12:09.246 --> 00:12:10.856 A:middle
load the depth data -- the depth

00:12:10.856 --> 00:12:12.126 A:middle
image instead of the regular

00:12:12.166 --> 00:12:12.526 A:middle
image.

00:12:14.106 --> 00:12:16.806 A:middle
Once you have a depth image, you

00:12:16.806 --> 00:12:18.286 A:middle
can always go back to the AV

00:12:18.286 --> 00:12:20.276 A:middle
Depth data object by calling its

00:12:20.276 --> 00:12:21.266 A:middle
depth data property.

00:12:23.286 --> 00:12:24.416 A:middle
And keep in mind that you can

00:12:24.416 --> 00:12:26.326 A:middle
always convert back and forth

00:12:26.326 --> 00:12:27.706 A:middle
between disparity and depth

00:12:27.856 --> 00:12:29.786 A:middle
using convenient UCI filters

00:12:30.016 --> 00:12:33.416 A:middle
such as CI depth to disparity.

00:12:34.776 --> 00:12:35.136 A:middle
All right.

00:12:35.306 --> 00:12:37.196 A:middle
So now that we've read the depth

00:12:37.336 --> 00:12:39.796 A:middle
data out of a file and into an

00:12:39.796 --> 00:12:42.096 A:middle
image, let's see -- we still

00:12:42.236 --> 00:12:44.446 A:middle
need to take a couple more steps

00:12:44.446 --> 00:12:45.726 A:middle
before we can start editing with

00:12:45.726 --> 00:12:45.906 A:middle
it.

00:12:46.116 --> 00:12:49.286 A:middle
If you remember, the depth data

00:12:49.286 --> 00:12:50.706 A:middle
is lower resolution than the

00:12:50.706 --> 00:12:51.196 A:middle
image.

00:12:51.626 --> 00:12:53.616 A:middle
So, the very first thing that

00:12:53.616 --> 00:12:55.156 A:middle
you want to do is to scale it up

00:12:55.816 --> 00:12:57.196 A:middle
to the resolution of the image

00:12:57.196 --> 00:12:57.966 A:middle
that you're working with.

00:12:58.536 --> 00:12:59.596 A:middle
There's a couple ways to do

00:12:59.596 --> 00:12:59.826 A:middle
that.

00:12:59.826 --> 00:13:01.046 A:middle
So, let's take a look.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.826 --> 00:13:01.046 A:middle
So, let's take a look.

00:13:02.896 --> 00:13:04.846 A:middle
Here's our example image and its

00:13:04.846 --> 00:13:05.736 A:middle
disparity map.

00:13:06.516 --> 00:13:08.436 A:middle
So, if we scale up, let's say

00:13:08.436 --> 00:13:10.716 A:middle
this small, tiny portion there,

00:13:10.826 --> 00:13:12.826 A:middle
using narrow sampling, you can

00:13:12.826 --> 00:13:13.716 A:middle
see that it's very, very

00:13:13.716 --> 00:13:14.336 A:middle
pixelated.

00:13:14.716 --> 00:13:16.006 A:middle
So at the very least you would

00:13:16.006 --> 00:13:17.496 A:middle
want to apply linear sampling to

00:13:17.496 --> 00:13:18.636 A:middle
get the smoother result.

00:13:19.926 --> 00:13:22.096 A:middle
You can also use a new CI filter

00:13:22.446 --> 00:13:25.226 A:middle
to CI BiCubicScale Transform to

00:13:25.226 --> 00:13:27.936 A:middle
get an even smoother result.

00:13:28.946 --> 00:13:31.336 A:middle
However, beware that depth data

00:13:31.336 --> 00:13:32.206 A:middle
is not color data.

00:13:32.886 --> 00:13:34.896 A:middle
And so, instead of smoothing,

00:13:34.896 --> 00:13:36.476 A:middle
maybe what you want is actually

00:13:36.476 --> 00:13:38.686 A:middle
preserve as much as possible the

00:13:38.686 --> 00:13:41.216 A:middle
details of the image so that the

00:13:41.216 --> 00:13:42.786 A:middle
depth data matches the image

00:13:42.786 --> 00:13:43.426 A:middle
more closely.

00:13:43.836 --> 00:13:44.796 A:middle
And you can do this with a

00:13:44.796 --> 00:13:46.926 A:middle
convenient CI filter called CI

00:13:46.926 --> 00:13:48.636 A:middle
Edge Preserve Upsample Filter.

00:13:49.966 --> 00:13:52.206 A:middle
This filter will upsample the

00:13:52.206 --> 00:13:54.226 A:middle
depth data and will try to

00:13:54.226 --> 00:13:56.686 A:middle
preserve the edges from the

00:13:56.926 --> 00:13:58.156 A:middle
color image.

00:13:59.586 --> 00:14:00.506 A:middle
All right.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.586 --> 00:14:00.506 A:middle
All right.

00:14:01.786 --> 00:14:04.106 A:middle
Oh, also another thing that you

00:14:04.106 --> 00:14:05.826 A:middle
need to be careful of.

00:14:06.026 --> 00:14:07.466 A:middle
For all of those resampling

00:14:07.466 --> 00:14:09.446 A:middle
operation, we recommend that you

00:14:09.446 --> 00:14:11.016 A:middle
use disparity over depth because

00:14:11.016 --> 00:14:12.736 A:middle
it gives you -- it will give you

00:14:12.736 --> 00:14:13.546 A:middle
better results.

00:14:15.056 --> 00:14:17.836 A:middle
Okay. A couple thing that you

00:14:17.836 --> 00:14:18.886 A:middle
may want to do as well.

00:14:20.166 --> 00:14:21.836 A:middle
You may want to compute the

00:14:21.836 --> 00:14:23.786 A:middle
minimum and maximum value for

00:14:23.786 --> 00:14:24.446 A:middle
the depth data.

00:14:25.896 --> 00:14:28.186 A:middle
Because there are many cases

00:14:28.186 --> 00:14:29.116 A:middle
where you need to know those

00:14:29.116 --> 00:14:30.486 A:middle
values for the particular

00:14:30.486 --> 00:14:32.346 A:middle
effects that you want to apply.

00:14:34.806 --> 00:14:36.066 A:middle
Also keep in mind that the depth

00:14:36.066 --> 00:14:37.996 A:middle
data is not normalized between 0

00:14:37.996 --> 00:14:39.016 A:middle
and 1.

00:14:39.016 --> 00:14:41.296 A:middle
For example, disparity values

00:14:41.296 --> 00:14:43.326 A:middle
can range from 0, which means

00:14:43.676 --> 00:14:48.906 A:middle
infinity, to greater than 1 for

00:14:48.906 --> 00:14:51.016 A:middle
objects that are closer than one

00:14:51.016 --> 00:14:51.706 A:middle
meter away.

00:14:53.156 --> 00:14:58.066 A:middle
Okay. Another thing you can do

00:14:58.066 --> 00:14:59.346 A:middle
is to normalize the depth data.

00:14:59.346 --> 00:15:00.546 A:middle
So once you know the min and max

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:59.346 --> 00:15:00.546 A:middle
So once you know the min and max

00:15:00.546 --> 00:15:02.316 A:middle
you can normalize the depth or

00:15:02.316 --> 00:15:03.796 A:middle
disparity between 0 and 1.

00:15:04.086 --> 00:15:05.226 A:middle
And that's pretty convenient

00:15:05.466 --> 00:15:07.446 A:middle
first to visualize it.

00:15:07.826 --> 00:15:09.456 A:middle
But also if you want to apply

00:15:09.826 --> 00:15:12.396 A:middle
your depth effects consistently

00:15:12.396 --> 00:15:14.036 A:middle
across various different scenes.

00:15:14.876 --> 00:15:15.226 A:middle
All right.

00:15:15.226 --> 00:15:17.276 A:middle
So now that we've read our depth

00:15:17.276 --> 00:15:18.886 A:middle
data, and prepared it for

00:15:18.886 --> 00:15:20.396 A:middle
editing we are ready to start

00:15:20.396 --> 00:15:21.126 A:middle
filtering with it.

00:15:23.096 --> 00:15:24.546 A:middle
So in this section we're going

00:15:24.546 --> 00:15:26.546 A:middle
to show you several example of

00:15:26.706 --> 00:15:28.406 A:middle
depth effects you can apply.

00:15:29.236 --> 00:15:30.696 A:middle
We're going to start with simple

00:15:30.696 --> 00:15:31.956 A:middle
background effects that you can

00:15:31.956 --> 00:15:34.106 A:middle
achieve using built in Core

00:15:34.106 --> 00:15:34.926 A:middle
Image filters.

00:15:35.736 --> 00:15:37.996 A:middle
Then we're going to show you a

00:15:37.996 --> 00:15:39.486 A:middle
custom depth effect that you can

00:15:39.486 --> 00:15:41.446 A:middle
achieve using a custom CI

00:15:41.696 --> 00:15:42.116 A:middle
[inaudible] code.

00:15:43.526 --> 00:15:45.396 A:middle
Then we're going to show you how

00:15:45.396 --> 00:15:46.546 A:middle
you can apply your own depth

00:15:46.546 --> 00:15:48.216 A:middle
blur effect using a brand new CI

00:15:48.216 --> 00:15:48.506 A:middle
Filter.

00:15:49.726 --> 00:15:51.196 A:middle
And finally, we're going to show

00:15:51.196 --> 00:15:52.996 A:middle
you how to create a brand new

00:15:52.996 --> 00:15:54.966 A:middle
3-D effect using depth.

00:15:55.376 --> 00:15:56.516 A:middle
So let's get started with the

00:15:56.516 --> 00:15:57.026 A:middle
first one.

00:15:57.596 --> 00:15:58.696 A:middle
And for that I'm going to call

00:15:58.696 --> 00:16:00.276 A:middle
my colleague, Stephen, on stage

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:58.696 --> 00:16:00.276 A:middle
my colleague, Stephen, on stage

00:16:00.276 --> 00:16:00.736 A:middle
for that demo.

00:16:01.416 --> 00:16:01.746 A:middle
Stephen.

00:16:02.516 --> 00:16:06.686 A:middle
[ Applause ]

00:16:07.186 --> 00:16:07.816 A:middle
&gt;&gt; Thank you, Etienne.

00:16:08.626 --> 00:16:09.396 A:middle
Good morning everybody.

00:16:09.396 --> 00:16:10.296 A:middle
My name is Stephen.

00:16:10.296 --> 00:16:12.176 A:middle
And now that Etienne has shown

00:16:12.176 --> 00:16:14.006 A:middle
you how to load and prepare your

00:16:14.006 --> 00:16:16.566 A:middle
depth data, it's my pleasure to

00:16:16.566 --> 00:16:18.106 A:middle
be here to show you a couple of

00:16:18.106 --> 00:16:20.136 A:middle
ways that you can use depth now

00:16:20.136 --> 00:16:22.356 A:middle
to achieve some new and

00:16:22.356 --> 00:16:23.746 A:middle
interesting effects on your

00:16:23.746 --> 00:16:24.206 A:middle
images.

00:16:24.946 --> 00:16:26.386 A:middle
So we're going to jump right in

00:16:26.386 --> 00:16:29.596 A:middle
with a demo.

00:16:29.966 --> 00:16:32.846 A:middle
Okay. What we're looking at here

00:16:32.846 --> 00:16:35.366 A:middle
is -- I'm in the Photos app.

00:16:36.336 --> 00:16:37.666 A:middle
And I'm going to enter Edit here

00:16:37.666 --> 00:16:38.306 A:middle
on this image.

00:16:38.596 --> 00:16:42.546 A:middle
So, this effect is implemented

00:16:42.546 --> 00:16:43.546 A:middle
here in a photo editing

00:16:43.546 --> 00:16:44.156 A:middle
extension.

00:16:44.746 --> 00:16:48.986 A:middle
And now that we got the rough

00:16:48.986 --> 00:16:51.026 A:middle
parts out of the way, we're

00:16:51.026 --> 00:16:52.116 A:middle
looking at the original image

00:16:52.116 --> 00:16:52.336 A:middle
here.

00:16:53.346 --> 00:16:54.206 A:middle
No edits applied.

00:16:54.506 --> 00:16:55.456 A:middle
And I'm going to go ahead and

00:16:55.456 --> 00:16:56.296 A:middle
turn on the effect now.

00:16:57.696 --> 00:16:58.476 A:middle
What you see is that I've

00:16:58.476 --> 00:17:00.056 A:middle
applied a de-saturating effect

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:58.476 --> 00:17:00.056 A:middle
applied a de-saturating effect

00:17:00.276 --> 00:17:01.706 A:middle
to the image, but only to the

00:17:01.706 --> 00:17:02.536 A:middle
background region.

00:17:03.596 --> 00:17:05.195 A:middle
And I can pick a different

00:17:05.435 --> 00:17:07.406 A:middle
background effect to apply.

00:17:07.406 --> 00:17:08.516 A:middle
In this case, I've picked just a

00:17:08.516 --> 00:17:09.445 A:middle
flat white image.

00:17:10.256 --> 00:17:13.376 A:middle
And maybe I'm not terribly

00:17:13.376 --> 00:17:14.516 A:middle
satisfied with where that

00:17:14.516 --> 00:17:15.955 A:middle
threshold is between background

00:17:15.955 --> 00:17:18.185 A:middle
and foreground, so I can pick a

00:17:18.185 --> 00:17:19.496 A:middle
new threshold by tapping.

00:17:20.646 --> 00:17:21.866 A:middle
And this is all based on the

00:17:22.076 --> 00:17:22.626 A:middle
depth data.

00:17:24.006 --> 00:17:25.586 A:middle
So let me bring it back here to

00:17:25.586 --> 00:17:25.986 A:middle
the front.

00:17:25.986 --> 00:17:27.215 A:middle
And you can clearly see there's

00:17:27.536 --> 00:17:29.706 A:middle
a pretty sharp boundary between

00:17:29.916 --> 00:17:31.066 A:middle
what's considered background and

00:17:31.066 --> 00:17:31.596 A:middle
foreground.

00:17:32.106 --> 00:17:33.386 A:middle
There's actually a narrow region

00:17:33.386 --> 00:17:34.726 A:middle
in between where we're doing a

00:17:34.726 --> 00:17:35.906 A:middle
little bit of blending between

00:17:35.906 --> 00:17:36.306 A:middle
the two.

00:17:36.856 --> 00:17:38.436 A:middle
And I have control over the size

00:17:38.436 --> 00:17:39.286 A:middle
of that blend region.

00:17:40.346 --> 00:17:42.986 A:middle
I can adjust that by pinching.

00:17:43.376 --> 00:17:44.556 A:middle
And there you can see it looks

00:17:44.936 --> 00:17:46.776 A:middle
like a pretty nice white fog

00:17:48.366 --> 00:17:48.536 A:middle
effect.

00:17:49.186 --> 00:17:51.206 A:middle
We've implemented this effect by

00:17:51.206 --> 00:17:53.306 A:middle
making use of a blend mask.

00:17:54.006 --> 00:17:54.736 A:middle
So let me show you what our

00:17:54.736 --> 00:17:55.896 A:middle
blend mask looks like here.

00:17:57.536 --> 00:17:59.096 A:middle
The black regions of the blend

00:17:59.096 --> 00:18:00.016 A:middle
mask correspond to the

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:59.096 --> 00:18:00.016 A:middle
mask correspond to the

00:18:00.016 --> 00:18:00.846 A:middle
background image.

00:18:01.266 --> 00:18:02.656 A:middle
Solid white is foreground.

00:18:02.656 --> 00:18:03.946 A:middle
And then everything in between

00:18:04.036 --> 00:18:05.146 A:middle
is where we blend between the

00:18:05.146 --> 00:18:05.386 A:middle
two.

00:18:06.146 --> 00:18:07.766 A:middle
So, this is what that blend mask

00:18:07.766 --> 00:18:08.996 A:middle
looks like as I pinch.

00:18:09.656 --> 00:18:10.876 A:middle
We're adjusting the size and

00:18:10.876 --> 00:18:11.966 A:middle
slope of that blend.

00:18:13.556 --> 00:18:14.506 A:middle
Okay, back to the original

00:18:14.506 --> 00:18:14.826 A:middle
image.

00:18:15.356 --> 00:18:16.506 A:middle
As many of you know, there are

00:18:16.506 --> 00:18:18.266 A:middle
so many built in interesting

00:18:18.266 --> 00:18:19.626 A:middle
Core Image filters we could

00:18:19.626 --> 00:18:20.466 A:middle
choose to apply.

00:18:21.036 --> 00:18:22.376 A:middle
I'm going to show you a couple

00:18:22.376 --> 00:18:22.756 A:middle
of others.

00:18:22.756 --> 00:18:24.596 A:middle
This one is a hexagonal pixelate

00:18:24.596 --> 00:18:24.986 A:middle
filter.

00:18:25.636 --> 00:18:27.796 A:middle
And a motion blur.

00:18:29.636 --> 00:18:30.836 A:middle
Let's say I'm happy with this.

00:18:30.836 --> 00:18:32.086 A:middle
And I'll save it back to my

00:18:32.766 --> 00:18:33.616 A:middle
photo library.

00:18:34.476 --> 00:18:36.226 A:middle
Okay, now let's talk about how

00:18:36.226 --> 00:18:36.786 A:middle
we did this.

00:18:40.806 --> 00:18:44.996 A:middle
As I mentioned, we accomplished

00:18:44.996 --> 00:18:46.506 A:middle
this effect by building a blend

00:18:46.506 --> 00:18:46.896 A:middle
mask.

00:18:47.446 --> 00:18:48.396 A:middle
And so I'll talk to you now

00:18:48.396 --> 00:18:49.376 A:middle
about how we build that blend

00:18:49.376 --> 00:18:49.716 A:middle
mask.

00:18:50.086 --> 00:18:51.216 A:middle
The basic idea is that we're

00:18:51.216 --> 00:18:52.626 A:middle
going to map our normalized

00:18:52.656 --> 00:18:55.106 A:middle
disparity values into values

00:18:55.106 --> 00:18:57.056 A:middle
between 0 and 1 for the mask.

00:18:58.556 --> 00:19:00.796 A:middle
And so we want some high region

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:58.556 --> 00:19:00.796 A:middle
And so we want some high region

00:19:00.796 --> 00:19:03.006 A:middle
of disparity values to map to 1

00:19:03.106 --> 00:19:04.276 A:middle
in our blend mask corresponding

00:19:04.276 --> 00:19:04.946 A:middle
to the foreground.

00:19:06.416 --> 00:19:07.736 A:middle
Some region of low disparity

00:19:07.736 --> 00:19:08.936 A:middle
values to map to 0.

00:19:08.936 --> 00:19:10.736 A:middle
And that will be the background

00:19:10.736 --> 00:19:11.106 A:middle
region.

00:19:11.216 --> 00:19:12.576 A:middle
And then all disparity values in

00:19:12.576 --> 00:19:14.366 A:middle
between will blend with the

00:19:14.366 --> 00:19:14.946 A:middle
linear ramp.

00:19:16.986 --> 00:19:18.126 A:middle
The first part of building this

00:19:18.126 --> 00:19:20.446 A:middle
blend mask is to pick the

00:19:20.716 --> 00:19:23.056 A:middle
threshold between background and

00:19:23.056 --> 00:19:23.526 A:middle
foreground.

00:19:24.446 --> 00:19:25.506 A:middle
So when the user taps on the

00:19:25.506 --> 00:19:29.196 A:middle
image what we do is to sample

00:19:29.196 --> 00:19:30.816 A:middle
the normalized disparity map at

00:19:30.816 --> 00:19:33.136 A:middle
that same location and set that

00:19:33.136 --> 00:19:34.806 A:middle
as our threshold between

00:19:35.146 --> 00:19:36.006 A:middle
background and foreground.

00:19:36.646 --> 00:19:39.126 A:middle
Now I'll show you the code for

00:19:39.126 --> 00:19:39.766 A:middle
what that looks like.

00:19:41.786 --> 00:19:43.006 A:middle
This is all accomplished using

00:19:43.166 --> 00:19:44.466 A:middle
built in Core Image filters.

00:19:44.466 --> 00:19:45.836 A:middle
So the first of which I'd like

00:19:45.836 --> 00:19:47.496 A:middle
to show you here is the CI Area

00:19:47.496 --> 00:19:48.796 A:middle
Min Max Red filter.

00:19:49.926 --> 00:19:51.466 A:middle
This filter, when you render it

00:19:51.466 --> 00:19:54.136 A:middle
into a single pixel will return

00:19:54.136 --> 00:19:55.676 A:middle
the minimum and maximum values

00:19:55.676 --> 00:19:57.136 A:middle
of the image within the region

00:19:57.136 --> 00:19:58.036 A:middle
that you specify.

00:19:58.386 --> 00:20:00.116 A:middle
Here we're passing in the small

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.386 --> 00:20:00.116 A:middle
Here we're passing in the small

00:20:00.116 --> 00:20:01.536 A:middle
rect that the user tapped on.

00:20:02.786 --> 00:20:04.226 A:middle
The other thing to note about

00:20:04.226 --> 00:20:05.496 A:middle
this line is that before we

00:20:05.496 --> 00:20:07.466 A:middle
apply the effect we're clamping

00:20:07.466 --> 00:20:08.896 A:middle
the disparity image so as to

00:20:08.896 --> 00:20:10.526 A:middle
image that if the user taps near

00:20:10.526 --> 00:20:11.856 A:middle
the boundary of the image we

00:20:11.856 --> 00:20:13.236 A:middle
won't sample any clear pixels

00:20:13.236 --> 00:20:14.056 A:middle
outside the boundary.

00:20:15.866 --> 00:20:18.046 A:middle
On this line we're simply

00:20:18.046 --> 00:20:20.176 A:middle
allocating a 4-byte buffer large

00:20:20.176 --> 00:20:21.426 A:middle
enough to store a single pixel.

00:20:22.606 --> 00:20:24.086 A:middle
And we render into that pixel on

00:20:24.086 --> 00:20:24.556 A:middle
this line.

00:20:25.346 --> 00:20:26.846 A:middle
Note that we're passing in nil

00:20:26.966 --> 00:20:27.876 A:middle
as our color space.

00:20:27.876 --> 00:20:29.696 A:middle
And this tells Core Image that

00:20:29.696 --> 00:20:31.196 A:middle
we don't want it to do any color

00:20:31.196 --> 00:20:32.076 A:middle
management for us.

00:20:34.256 --> 00:20:36.226 A:middle
Finally, we read the maximum

00:20:36.226 --> 00:20:37.346 A:middle
disparity value out of the

00:20:37.346 --> 00:20:39.476 A:middle
pixel's green channel and then

00:20:39.476 --> 00:20:41.326 A:middle
remap it to the range of 0 and 1

00:20:41.366 --> 00:20:43.066 A:middle
by dividing by 255.

00:20:43.716 --> 00:20:47.946 A:middle
The other input the user has

00:20:47.946 --> 00:20:49.286 A:middle
control over is the size and

00:20:49.286 --> 00:20:50.416 A:middle
slope of the blend region.

00:20:50.566 --> 00:20:52.496 A:middle
So as the user is pinching on

00:20:52.496 --> 00:20:54.596 A:middle
the view, we're adjusting the

00:20:54.596 --> 00:20:56.066 A:middle
size and slope accordingly.

00:20:58.306 --> 00:21:00.056 A:middle
And this is the result of a

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:58.306 --> 00:21:00.056 A:middle
And this is the result of a

00:21:00.056 --> 00:21:01.606 A:middle
mapping -- sorry, this mapping

00:21:01.606 --> 00:21:03.756 A:middle
is the result of applying a CI

00:21:03.756 --> 00:21:04.866 A:middle
Color Matrix filter.

00:21:05.236 --> 00:21:06.236 A:middle
So I'll show you in a second.

00:21:06.776 --> 00:21:08.676 A:middle
But then we also apply a CI

00:21:08.676 --> 00:21:10.456 A:middle
Color Clamp to ensure that the

00:21:10.456 --> 00:21:11.926 A:middle
values remain within the region

00:21:12.026 --> 00:21:13.866 A:middle
of 0 to 1, the range of 0 to 1.

00:21:15.126 --> 00:21:15.956 A:middle
So here's the code.

00:21:16.446 --> 00:21:17.966 A:middle
First we apply our CR Color

00:21:17.966 --> 00:21:19.026 A:middle
Matrix filter.

00:21:19.706 --> 00:21:22.236 A:middle
Its inputs are essentially the

00:21:22.706 --> 00:21:24.496 A:middle
slope and the bias that were

00:21:24.496 --> 00:21:26.016 A:middle
selected by the user by tapping

00:21:26.016 --> 00:21:26.486 A:middle
and pinching.

00:21:27.486 --> 00:21:29.346 A:middle
And then on a single line we

00:21:29.346 --> 00:21:31.386 A:middle
apply the CI Color Clamp filter.

00:21:32.816 --> 00:21:36.116 A:middle
Now that we've built the blend

00:21:36.116 --> 00:21:37.136 A:middle
mask, the rest is

00:21:37.136 --> 00:21:37.766 A:middle
straightforward.

00:21:37.856 --> 00:21:39.586 A:middle
What you see on the left is the

00:21:39.586 --> 00:21:40.456 A:middle
original image.

00:21:40.746 --> 00:21:42.016 A:middle
And on the right you see that

00:21:42.016 --> 00:21:43.556 A:middle
image with the background effect

00:21:43.556 --> 00:21:43.926 A:middle
applied.

00:21:45.836 --> 00:21:47.156 A:middle
When we apply the blend mask to

00:21:47.156 --> 00:21:49.216 A:middle
the original image, the

00:21:49.216 --> 00:21:50.596 A:middle
background region disappears.

00:21:50.716 --> 00:21:51.956 A:middle
And when we blend that together

00:21:52.606 --> 00:21:53.866 A:middle
with the background image, we

00:21:53.866 --> 00:21:54.676 A:middle
get our final effect.

00:21:55.666 --> 00:21:58.226 A:middle
One more slide of code.

00:21:59.396 --> 00:22:00.356 A:middle
Here's where we apply our

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:59.396 --> 00:22:00.356 A:middle
Here's where we apply our

00:22:00.356 --> 00:22:01.146 A:middle
background filter.

00:22:02.166 --> 00:22:03.676 A:middle
This could be any filter you

00:22:03.676 --> 00:22:04.156 A:middle
choose.

00:22:04.436 --> 00:22:05.636 A:middle
There are many built into Core

00:22:05.636 --> 00:22:05.956 A:middle
Image.

00:22:05.956 --> 00:22:06.756 A:middle
You could write your own.

00:22:08.326 --> 00:22:09.886 A:middle
And then we apply the CI Blend

00:22:09.886 --> 00:22:12.426 A:middle
With Mask filter, passing in

00:22:12.516 --> 00:22:13.816 A:middle
both the background image and

00:22:13.976 --> 00:22:14.330 A:middle
the mask.

00:22:16.576 --> 00:22:17.246 A:middle
And that's it.

00:22:18.086 --> 00:22:20.406 A:middle
That's how we accomplish this

00:22:20.406 --> 00:22:24.096 A:middle
effect using a suite of built-in

00:22:24.096 --> 00:22:25.026 A:middle
Core Image filters.

00:22:25.586 --> 00:22:27.846 A:middle
And next I'd like to jump in and

00:22:27.846 --> 00:22:28.956 A:middle
show you another demo.

00:22:30.656 --> 00:22:33.206 A:middle
For this one -- the previous one

00:22:33.696 --> 00:22:36.266 A:middle
we used disparity -- depth data

00:22:36.576 --> 00:22:37.966 A:middle
indirectly, right?

00:22:38.156 --> 00:22:40.086 A:middle
We used it to build a blend

00:22:40.086 --> 00:22:40.546 A:middle
mask.

00:22:41.326 --> 00:22:42.316 A:middle
For this one we're going to use

00:22:42.316 --> 00:22:44.736 A:middle
disparity a little bit in more

00:22:44.736 --> 00:22:45.706 A:middle
of a direct fashion.

00:22:46.306 --> 00:22:50.226 A:middle
And I'm going to pull up this

00:22:50.226 --> 00:22:51.566 A:middle
other editing extension here to

00:22:51.566 --> 00:22:52.036 A:middle
show it to you.

00:22:52.746 --> 00:22:53.846 A:middle
Okay. Here we are in photos

00:22:53.846 --> 00:22:54.116 A:middle
again.

00:22:55.086 --> 00:22:56.886 A:middle
Let's pick this next extension.

00:22:58.216 --> 00:22:58.966 A:middle
There we go.

00:22:59.946 --> 00:23:00.666 A:middle
Original image.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:59.946 --> 00:23:00.666 A:middle
Original image.

00:23:00.916 --> 00:23:02.176 A:middle
No edits applied just yet.

00:23:02.176 --> 00:23:04.386 A:middle
I have a slider at the bottom,

00:23:04.386 --> 00:23:04.646 A:middle
though.

00:23:04.886 --> 00:23:06.726 A:middle
And I'll start to move that now.

00:23:06.726 --> 00:23:09.706 A:middle
And you can see that the

00:23:09.706 --> 00:23:11.676 A:middle
background fades to black,

00:23:11.926 --> 00:23:13.226 A:middle
leaving us just this prominent

00:23:13.226 --> 00:23:13.956 A:middle
foreground figure.

00:23:14.526 --> 00:23:15.446 A:middle
That's a really nice effect,

00:23:17.056 --> 00:23:17.566 A:middle
wouldn't you say?

00:23:18.466 --> 00:23:20.766 A:middle
Let's save that back to the

00:23:21.026 --> 00:23:22.496 A:middle
library and show you how this

00:23:22.496 --> 00:23:22.916 A:middle
one's done.

00:23:23.596 --> 00:23:24.376 A:middle
What we're doing is we're

00:23:24.376 --> 00:23:25.686 A:middle
mapping our normalized disparity

00:23:25.686 --> 00:23:28.086 A:middle
values into a scale value, which

00:23:28.086 --> 00:23:29.406 A:middle
we then apply directly to our

00:23:29.406 --> 00:23:29.916 A:middle
pixels.

00:23:31.216 --> 00:23:33.286 A:middle
And for this particular effect

00:23:33.726 --> 00:23:36.066 A:middle
we're mapping our disparity

00:23:36.066 --> 00:23:37.736 A:middle
values through an exponential

00:23:37.736 --> 00:23:39.426 A:middle
function, which when we start

00:23:39.426 --> 00:23:41.656 A:middle
off, we raise our normalized

00:23:41.656 --> 00:23:44.136 A:middle
disparity values to the power of

00:23:44.136 --> 00:23:44.656 A:middle
0.

00:23:44.806 --> 00:23:47.186 A:middle
And that maps all of our scale

00:23:47.186 --> 00:23:49.556 A:middle
factors into one, producing no

00:23:49.556 --> 00:23:50.636 A:middle
effect on the output image.

00:23:51.186 --> 00:23:53.606 A:middle
When we raise the power to 1 as

00:23:53.606 --> 00:23:55.356 A:middle
we move the slider over, this is

00:23:55.356 --> 00:23:57.956 A:middle
effectively the same thing as

00:23:58.426 --> 00:24:00.926 A:middle
scaling our pixel intensities by

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:58.426 --> 00:24:00.926 A:middle
scaling our pixel intensities by

00:24:01.166 --> 00:24:04.006 A:middle
the inverse of the depth because

00:24:04.006 --> 00:24:05.476 A:middle
we're scaling by disparity

00:24:05.476 --> 00:24:05.926 A:middle
directly.

00:24:06.846 --> 00:24:08.866 A:middle
The effect becomes more

00:24:08.866 --> 00:24:10.106 A:middle
interesting as we start to raise

00:24:10.106 --> 00:24:11.476 A:middle
it to higher and higher powers.

00:24:12.146 --> 00:24:14.236 A:middle
As you can see, the shape of the

00:24:14.236 --> 00:24:15.476 A:middle
curve becomes such that there's

00:24:15.476 --> 00:24:16.746 A:middle
a sharper distinction between

00:24:16.746 --> 00:24:18.786 A:middle
background and foreground with

00:24:18.786 --> 00:24:19.836 A:middle
the background quickly going to

00:24:19.836 --> 00:24:20.156 A:middle
black.

00:24:20.596 --> 00:24:24.566 A:middle
So I'm going to show you the

00:24:24.566 --> 00:24:25.886 A:middle
code for this effect in just one

00:24:25.886 --> 00:24:26.236 A:middle
slide.

00:24:26.386 --> 00:24:28.506 A:middle
We've implemented this effect as

00:24:28.506 --> 00:24:29.936 A:middle
a custom CI Color Kernel.

00:24:29.986 --> 00:24:31.076 A:middle
And there are a couple of

00:24:31.076 --> 00:24:32.826 A:middle
notable advantages to using a

00:24:32.826 --> 00:24:33.916 A:middle
customer CI Color Kernel.

00:24:34.446 --> 00:24:35.976 A:middle
One of which is performance.

00:24:35.976 --> 00:24:37.446 A:middle
If you are able to express your

00:24:37.446 --> 00:24:39.076 A:middle
effect in terms of a custom CI

00:24:39.076 --> 00:24:40.766 A:middle
Color Kernel, Core Image is able

00:24:40.766 --> 00:24:42.196 A:middle
to optimize that by

00:24:42.196 --> 00:24:43.726 A:middle
concatenating your kernel into

00:24:43.726 --> 00:24:46.086 A:middle
its render graph, thereby

00:24:46.346 --> 00:24:49.596 A:middle
skipping any potentially costly

00:24:49.596 --> 00:24:50.916 A:middle
intermediate images along the

00:24:50.916 --> 00:24:51.116 A:middle
way.

00:24:51.976 --> 00:24:54.406 A:middle
The other nice thing about this

00:24:54.406 --> 00:24:56.376 A:middle
is that Core Image allows us to

00:24:56.376 --> 00:24:59.486 A:middle
pass in multiple input images.

00:24:59.486 --> 00:25:00.136 A:middle
And Core Image will

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.486 --> 00:25:00.136 A:middle
And Core Image will

00:25:00.136 --> 00:25:01.626 A:middle
automatically sample those for

00:25:01.626 --> 00:25:03.006 A:middle
us and passing in those sample

00:25:03.006 --> 00:25:04.456 A:middle
values to us as parameters to

00:25:04.456 --> 00:25:05.786 A:middle
our kernel function, which you

00:25:05.786 --> 00:25:06.346 A:middle
see here.

00:25:06.766 --> 00:25:08.606 A:middle
The first parameter is a sample

00:25:08.606 --> 00:25:09.676 A:middle
from the original image.

00:25:09.926 --> 00:25:11.126 A:middle
The second is a sample from the

00:25:11.126 --> 00:25:12.236 A:middle
normalized disparity map.

00:25:12.476 --> 00:25:14.096 A:middle
And then third is the power

00:25:14.096 --> 00:25:15.296 A:middle
selected by the user moving the

00:25:15.296 --> 00:25:15.706 A:middle
slider.

00:25:17.356 --> 00:25:18.306 A:middle
The first thing we do with a

00:25:18.306 --> 00:25:19.946 A:middle
normalized disparity is to raise

00:25:19.946 --> 00:25:21.266 A:middle
it to a power, as I mentioned.

00:25:22.056 --> 00:25:23.366 A:middle
That gives us our scale factor.

00:25:24.556 --> 00:25:25.706 A:middle
Then we take our scale factor

00:25:25.706 --> 00:25:27.446 A:middle
and apply it to the intensity of

00:25:27.446 --> 00:25:28.926 A:middle
the pixel while preserving the

00:25:28.926 --> 00:25:29.946 A:middle
original alpha value.

00:25:32.096 --> 00:25:33.616 A:middle
This last line is a line of

00:25:33.616 --> 00:25:36.156 A:middle
Swift code illustrating how we

00:25:36.156 --> 00:25:37.706 A:middle
can apply our custom kernel to

00:25:37.706 --> 00:25:39.106 A:middle
our original image once it's

00:25:39.106 --> 00:25:40.386 A:middle
been constructed from the source

00:25:40.386 --> 00:25:41.096 A:middle
code you see above.

00:25:41.496 --> 00:25:43.576 A:middle
We pass in our image extent as

00:25:43.576 --> 00:25:45.266 A:middle
well as a list of arguments.

00:25:45.356 --> 00:25:46.986 A:middle
Here these are the original

00:25:46.986 --> 00:25:48.416 A:middle
image, the normalized disparity

00:25:48.416 --> 00:25:49.976 A:middle
map, and the power selected by

00:25:49.976 --> 00:25:50.466 A:middle
the user.

00:25:50.566 --> 00:25:52.046 A:middle
Note that these arguments

00:25:52.046 --> 00:25:53.576 A:middle
correspond one to one with the

00:25:53.576 --> 00:25:55.266 A:middle
parameters defined in our kernel

00:25:55.266 --> 00:25:55.706 A:middle
signature.

00:25:57.666 --> 00:25:58.886 A:middle
Okay. So that's it.

00:25:58.886 --> 00:26:00.016 A:middle
I've just shown you how to use a

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.886 --> 00:26:00.016 A:middle
I've just shown you how to use a

00:26:00.016 --> 00:26:02.006 A:middle
custom CI Color Kernel to

00:26:02.006 --> 00:26:03.466 A:middle
produce this really nice

00:26:03.546 --> 00:26:04.826 A:middle
darkening background effect.

00:26:05.476 --> 00:26:06.666 A:middle
And hopefully it gives you some

00:26:06.666 --> 00:26:08.076 A:middle
ideas of other things you can do

00:26:08.076 --> 00:26:09.766 A:middle
with custom CI Color Kernels

00:26:09.766 --> 00:26:10.916 A:middle
combined with depth to produce

00:26:10.916 --> 00:26:11.686 A:middle
some nice effects.

00:26:11.686 --> 00:26:13.036 A:middle
So now I'm going to invite my

00:26:13.036 --> 00:26:14.866 A:middle
colleague, Alex, up onto the

00:26:14.866 --> 00:26:16.156 A:middle
stage to show you something

00:26:16.226 --> 00:26:17.576 A:middle
brand new in Core Image.

00:26:18.306 --> 00:26:19.000 A:middle
Alex.

00:26:20.516 --> 00:26:24.126 A:middle
[ Applause ]

00:26:24.626 --> 00:26:26.256 A:middle
&gt;&gt; Thank you, Stephen.

00:26:26.366 --> 00:26:27.106 A:middle
Good morning everyone.

00:26:27.906 --> 00:26:29.206 A:middle
May name is Alexander Neimann.

00:26:29.206 --> 00:26:30.936 A:middle
And today I'm really excited to

00:26:30.936 --> 00:26:31.166 A:middle
be here.

00:26:31.166 --> 00:26:31.896 A:middle
And today I'm going to talk to

00:26:31.896 --> 00:26:32.916 A:middle
you about a new Core Image

00:26:32.916 --> 00:26:33.486 A:middle
filter we have.

00:26:34.296 --> 00:26:37.566 A:middle
So as you know, in iOS 10 using

00:26:37.566 --> 00:26:38.596 A:middle
the iPhone 7+.

00:26:39.146 --> 00:26:41.156 A:middle
You could capture images using

00:26:41.156 --> 00:26:42.866 A:middle
-- with depth capabilities,

00:26:42.926 --> 00:26:44.626 A:middle
using the camera app and the

00:26:44.626 --> 00:26:46.356 A:middle
portrait mode.

00:26:46.576 --> 00:26:49.646 A:middle
Now, with iOS 11, and Mac OS

00:26:49.646 --> 00:26:51.706 A:middle
High Sierra, we're enhancing

00:26:51.706 --> 00:26:53.836 A:middle
those capabilities by allowing

00:26:53.836 --> 00:26:55.026 A:middle
you to use those exact same

00:26:55.026 --> 00:26:56.886 A:middle
algorithms via a new Core Image

00:26:56.886 --> 00:26:58.416 A:middle
filter called the CI Depth Blur

00:26:58.416 --> 00:26:58.766 A:middle
Effect.

00:26:59.836 --> 00:27:02.296 A:middle
So, now let's try and switch

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:59.836 --> 00:27:02.296 A:middle
So, now let's try and switch

00:27:02.296 --> 00:27:04.206 A:middle
over to a demo and see how that

00:27:04.206 --> 00:27:04.976 A:middle
works in real life.

00:27:07.616 --> 00:27:07.806 A:middle
Yay!

00:27:09.726 --> 00:27:10.006 A:middle
All right.

00:27:10.006 --> 00:27:10.886 A:middle
So here we have an asset, a

00:27:10.886 --> 00:27:12.076 A:middle
photo that was taken with depth.

00:27:12.076 --> 00:27:13.646 A:middle
And we're just viewing the image

00:27:13.956 --> 00:27:14.876 A:middle
without having applied any

00:27:14.876 --> 00:27:16.596 A:middle
filters to it.

00:27:18.446 --> 00:27:20.556 A:middle
If I tap on this once, we can

00:27:20.556 --> 00:27:22.226 A:middle
see what the disparity data

00:27:22.226 --> 00:27:22.696 A:middle
looks like.

00:27:23.546 --> 00:27:24.706 A:middle
I'm going to tap on it once more

00:27:24.706 --> 00:27:25.486 A:middle
and we'll back to the main

00:27:25.486 --> 00:27:25.866 A:middle
image.

00:27:26.026 --> 00:27:28.206 A:middle
And if I tap once more, we're

00:27:28.206 --> 00:27:29.016 A:middle
going to see what happens when

00:27:29.016 --> 00:27:30.396 A:middle
we use those two images together

00:27:30.736 --> 00:27:32.176 A:middle
along with the new CI Depth Blur

00:27:32.176 --> 00:27:33.776 A:middle
Effect filter to create a new

00:27:33.906 --> 00:27:34.526 A:middle
rendered result.

00:27:34.956 --> 00:27:35.886 A:middle
We should see the background get

00:27:35.886 --> 00:27:36.186 A:middle
blurry.

00:27:36.956 --> 00:27:37.146 A:middle
Yay.

00:27:39.566 --> 00:27:41.496 A:middle
Now, in addition to just

00:27:41.496 --> 00:27:44.196 A:middle
applying the filter as is, there

00:27:44.196 --> 00:27:45.936 A:middle
are many tunable parameters that

00:27:45.936 --> 00:27:46.476 A:middle
we can set.

00:27:46.726 --> 00:27:48.136 A:middle
And inside of this application

00:27:48.626 --> 00:27:49.876 A:middle
I've set things up such that it

00:27:49.946 --> 00:27:51.346 A:middle
will respond to a few gestures.

00:27:51.586 --> 00:27:53.686 A:middle
So, if I now, for example,

00:27:53.686 --> 00:27:56.046 A:middle
pinch, we can dynamically change

00:27:56.046 --> 00:27:58.086 A:middle
the aperture and get a new

00:27:58.086 --> 00:27:58.856 A:middle
simulated look.

00:27:58.856 --> 00:28:00.536 A:middle
And so we can simulate any lens

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.856 --> 00:28:00.536 A:middle
And so we can simulate any lens

00:28:01.006 --> 00:28:02.446 A:middle
opening that we would like quite

00:28:02.446 --> 00:28:02.846 A:middle
simply.

00:28:05.836 --> 00:28:06.946 A:middle
Another gesture I've set up in

00:28:06.946 --> 00:28:08.536 A:middle
this application is such that

00:28:08.826 --> 00:28:10.186 A:middle
when we tap at a different

00:28:10.186 --> 00:28:11.276 A:middle
location it's going to change

00:28:11.276 --> 00:28:12.326 A:middle
the focus rectangle.

00:28:12.676 --> 00:28:14.406 A:middle
And so we can see right now the

00:28:14.406 --> 00:28:15.776 A:middle
aperture is quite wide open.

00:28:16.166 --> 00:28:17.776 A:middle
And only the lady in the front

00:28:17.776 --> 00:28:18.296 A:middle
is in focus.

00:28:18.346 --> 00:28:19.666 A:middle
But if I tap on the lady on the

00:28:19.666 --> 00:28:20.926 A:middle
left, all of a sudden now she's

00:28:20.926 --> 00:28:21.456 A:middle
in focus.

00:28:21.456 --> 00:28:22.796 A:middle
The background is a little less

00:28:22.796 --> 00:28:23.176 A:middle
blurry.

00:28:23.176 --> 00:28:24.526 A:middle
And the gentleman on the right

00:28:24.526 --> 00:28:26.036 A:middle
is still a little blurry.

00:28:26.036 --> 00:28:27.376 A:middle
And I can tap on him now and

00:28:27.376 --> 00:28:28.366 A:middle
change the focus rect once

00:28:28.366 --> 00:28:28.706 A:middle
again.

00:28:29.836 --> 00:28:32.726 A:middle
And now they're all three in

00:28:32.726 --> 00:28:33.756 A:middle
focus and the background still

00:28:33.756 --> 00:28:34.276 A:middle
remains blurry.

00:28:35.906 --> 00:28:37.086 A:middle
Now that we're done with our

00:28:37.086 --> 00:28:38.696 A:middle
demo, let's go and look at how

00:28:38.696 --> 00:28:38.976 A:middle
this happens --

00:28:39.516 --> 00:28:42.246 A:middle
[ Applause ]

00:28:42.746 --> 00:28:45.076 A:middle
in terms of code.

00:28:46.946 --> 00:28:47.276 A:middle
Okay.

00:28:50.746 --> 00:28:53.206 A:middle
So as I was mentioning, at its

00:28:53.206 --> 00:28:54.876 A:middle
base the CI Depth Blur Effect

00:28:54.876 --> 00:28:56.756 A:middle
really just has two inputs: the

00:28:56.756 --> 00:28:58.026 A:middle
input image and the input

00:28:58.056 --> 00:28:58.826 A:middle
disparity image.

00:28:59.036 --> 00:29:00.406 A:middle
And with those two, Core Image

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:59.036 --> 00:29:00.406 A:middle
And with those two, Core Image

00:29:00.406 --> 00:29:01.326 A:middle
is going to extract a lot of

00:29:01.326 --> 00:29:04.216 A:middle
metadata for you and apply the

00:29:04.216 --> 00:29:07.466 A:middle
effect in order to render a new

00:29:07.886 --> 00:29:08.000 A:middle
image.

00:29:12.086 --> 00:29:13.186 A:middle
Internally, however, there are

00:29:13.186 --> 00:29:14.146 A:middle
many parameters that you can

00:29:14.146 --> 00:29:15.116 A:middle
set, as I was mentioning

00:29:15.116 --> 00:29:15.516 A:middle
earlier.

00:29:16.096 --> 00:29:17.186 A:middle
We already know that you can set

00:29:17.186 --> 00:29:18.086 A:middle
the input image and the input

00:29:18.086 --> 00:29:18.946 A:middle
disparity image.

00:29:19.296 --> 00:29:20.016 A:middle
And in the case of the

00:29:20.016 --> 00:29:21.096 A:middle
application that we were looking

00:29:21.096 --> 00:29:23.886 A:middle
at earlier, when we were

00:29:23.886 --> 00:29:25.896 A:middle
tapping, we were setting the

00:29:25.896 --> 00:29:26.896 A:middle
input focus rect.

00:29:28.276 --> 00:29:31.566 A:middle
And then as we were pinching, we

00:29:31.566 --> 00:29:32.496 A:middle
were setting the aperture.

00:29:33.496 --> 00:29:35.106 A:middle
So now that we have an idea of

00:29:35.106 --> 00:29:35.946 A:middle
how we want to do this from a

00:29:35.946 --> 00:29:37.406 A:middle
conceptual standpoint, let's

00:29:37.406 --> 00:29:38.926 A:middle
take a look at how this will be

00:29:38.926 --> 00:29:39.986 A:middle
done in terms of code.

00:29:41.386 --> 00:29:44.216 A:middle
And this is effectively my only

00:29:44.216 --> 00:29:45.296 A:middle
slide that has any code on it,

00:29:45.296 --> 00:29:46.316 A:middle
so you can see how simple it is

00:29:46.316 --> 00:29:46.716 A:middle
to use.

00:29:47.616 --> 00:29:49.796 A:middle
As we saw earlier, you can load

00:29:49.796 --> 00:29:51.736 A:middle
a CI Image via URL, quite

00:29:51.736 --> 00:29:51.996 A:middle
simply.

00:29:51.996 --> 00:29:53.136 A:middle
This gives us the main image.

00:29:53.136 --> 00:29:54.506 A:middle
And then in order to get the

00:29:54.506 --> 00:29:56.066 A:middle
disparity image, all you need to

00:29:56.066 --> 00:29:58.386 A:middle
do is use that same URL and ask

00:29:58.986 --> 00:30:02.026 A:middle
for the auxiliary disparity

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:58.986 --> 00:30:02.026 A:middle
for the auxiliary disparity

00:30:02.026 --> 00:30:03.196 A:middle
information via the Options

00:30:03.196 --> 00:30:04.836 A:middle
dictionary as Etienne mentioned.

00:30:06.316 --> 00:30:08.956 A:middle
Once we have our two images, we

00:30:08.956 --> 00:30:10.476 A:middle
can create a filter.

00:30:10.966 --> 00:30:13.366 A:middle
And we do that by name, CI Depth

00:30:13.366 --> 00:30:13.796 A:middle
Blur Effect.

00:30:13.796 --> 00:30:14.826 A:middle
And then we specify our two

00:30:14.826 --> 00:30:15.246 A:middle
images.

00:30:16.796 --> 00:30:18.756 A:middle
Once that's done, we can then

00:30:18.756 --> 00:30:20.946 A:middle
ask for the output image via

00:30:20.946 --> 00:30:21.916 A:middle
.outputImage.

00:30:21.916 --> 00:30:23.696 A:middle
And we have a new CI Image that

00:30:23.696 --> 00:30:25.036 A:middle
we can then render in any number

00:30:25.036 --> 00:30:25.436 A:middle
of ways.

00:30:26.056 --> 00:30:27.286 A:middle
And it's important to remember

00:30:27.286 --> 00:30:29.076 A:middle
that a CI Image is really just a

00:30:29.076 --> 00:30:30.046 A:middle
recipe for how to render.

00:30:30.046 --> 00:30:31.036 A:middle
So this is actually a quite

00:30:31.036 --> 00:30:31.816 A:middle
lightweight object.

00:30:34.416 --> 00:30:35.586 A:middle
In the case of the application

00:30:35.586 --> 00:30:36.636 A:middle
that we were looking at earlier,

00:30:37.506 --> 00:30:38.686 A:middle
all we had to do in order to

00:30:38.686 --> 00:30:40.046 A:middle
render a new effect with a new

00:30:40.046 --> 00:30:42.106 A:middle
look was to change two values.

00:30:42.276 --> 00:30:43.926 A:middle
So in this case, we changed the

00:30:43.926 --> 00:30:44.666 A:middle
input aperture.

00:30:44.666 --> 00:30:45.906 A:middle
And we do that by calling filter

00:30:45.906 --> 00:30:48.996 A:middle
setValue forKey and specifying a

00:30:48.996 --> 00:30:51.236 A:middle
float value between 1 and 22 to

00:30:51.236 --> 00:30:52.476 A:middle
create a new simulated aperture.

00:30:53.406 --> 00:30:55.386 A:middle
And we specified a new rectangle

00:30:55.586 --> 00:30:56.896 A:middle
where we wanted to focus on via

00:30:57.156 --> 00:30:58.936 A:middle
the input focus rec key, which

00:30:58.936 --> 00:31:00.856 A:middle
corresponds to a lower left

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:58.936 --> 00:31:00.856 A:middle
corresponds to a lower left

00:31:01.286 --> 00:31:03.946 A:middle
based rectangle in normalized

00:31:03.946 --> 00:31:04.466 A:middle
coordinates.

00:31:06.046 --> 00:31:07.346 A:middle
Once those two things are done,

00:31:07.466 --> 00:31:08.886 A:middle
we can ask that filter for a new

00:31:08.886 --> 00:31:12.866 A:middle
output image and then render as

00:31:12.866 --> 00:31:13.496 A:middle
we wish.

00:31:15.506 --> 00:31:17.106 A:middle
Now as I was mentioning, Core

00:31:17.106 --> 00:31:18.326 A:middle
Image does a lot of things for

00:31:18.326 --> 00:31:20.126 A:middle
you automatically by examining

00:31:20.126 --> 00:31:20.786 A:middle
the metadata.

00:31:21.556 --> 00:31:22.556 A:middle
There are, however, a few things

00:31:22.556 --> 00:31:25.046 A:middle
you can do in order to further

00:31:25.046 --> 00:31:27.026 A:middle
enhance the render that we don't

00:31:27.026 --> 00:31:28.066 A:middle
do for you automatically.

00:31:28.726 --> 00:31:31.316 A:middle
And those relate to finding

00:31:31.316 --> 00:31:32.176 A:middle
facial landmarks.

00:31:33.266 --> 00:31:35.316 A:middle
And you can use the new vision

00:31:35.316 --> 00:31:37.076 A:middle
framework that we have in order

00:31:37.076 --> 00:31:37.556 A:middle
to do this.

00:31:37.826 --> 00:31:39.256 A:middle
So, via the vision framework you

00:31:39.256 --> 00:31:41.316 A:middle
can get the left eye positions,

00:31:41.536 --> 00:31:43.876 A:middle
right eye positions, nose

00:31:43.876 --> 00:31:45.736 A:middle
positions and chin positions.

00:31:45.736 --> 00:31:48.566 A:middle
And you can specify up to four

00:31:48.566 --> 00:31:50.726 A:middle
faces to be used inside of the

00:31:50.726 --> 00:31:51.856 A:middle
CI Depth Blur Effect.

00:31:52.766 --> 00:31:53.836 A:middle
In the case of this image,

00:31:54.116 --> 00:31:55.356 A:middle
because there are three faces,

00:31:55.806 --> 00:31:57.876 A:middle
we would actually specify six

00:31:58.076 --> 00:32:00.496 A:middle
floating-point values into a CI

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.076 --> 00:32:00.496 A:middle
floating-point values into a CI

00:32:00.496 --> 00:32:02.196 A:middle
vector and set that for each

00:32:02.196 --> 00:32:03.206 A:middle
landmark that we found.

00:32:04.406 --> 00:32:06.756 A:middle
And there are triples, so it

00:32:06.756 --> 00:32:11.766 A:middle
would be xy, xy, xy.

00:32:12.256 --> 00:32:13.476 A:middle
The next thing I'd like to talk

00:32:13.476 --> 00:32:14.536 A:middle
to you a little bit about is

00:32:14.656 --> 00:32:17.256 A:middle
dealing with rendering outputs

00:32:17.256 --> 00:32:19.676 A:middle
of different sizes.

00:32:21.796 --> 00:32:23.646 A:middle
Although the inputs are quite

00:32:23.646 --> 00:32:25.606 A:middle
large, 12 megapixels, chances

00:32:25.606 --> 00:32:26.906 A:middle
are you won't often be rendering

00:32:26.906 --> 00:32:27.696 A:middle
the entire image.

00:32:27.956 --> 00:32:29.136 A:middle
And you may want to down sample

00:32:29.136 --> 00:32:29.576 A:middle
the output.

00:32:30.576 --> 00:32:32.296 A:middle
Your initial reflex may be to

00:32:32.296 --> 00:32:34.336 A:middle
just down sample it, the result

00:32:34.336 --> 00:32:35.756 A:middle
of the CI Depth Blur Effect.

00:32:35.996 --> 00:32:37.216 A:middle
But that's actually not very

00:32:37.216 --> 00:32:38.416 A:middle
efficient because the CI Depth

00:32:38.416 --> 00:32:39.436 A:middle
Blur Effect is actually quite

00:32:39.436 --> 00:32:40.506 A:middle
computationally expensive.

00:32:40.506 --> 00:32:43.396 A:middle
It makes more sense to, instead,

00:32:43.396 --> 00:32:44.436 A:middle
down sample the input.

00:32:44.916 --> 00:32:47.776 A:middle
And if you do this, we can then

00:32:48.136 --> 00:32:49.266 A:middle
take advantage of the fact that

00:32:49.266 --> 00:32:51.016 A:middle
the input image is smaller and

00:32:51.016 --> 00:32:52.156 A:middle
perform some optimizations.

00:32:53.436 --> 00:32:54.376 A:middle
In order to do this, however,

00:32:54.376 --> 00:32:55.396 A:middle
you do have to set one more

00:32:55.396 --> 00:32:56.836 A:middle
parameter, which is called the

00:32:56.836 --> 00:32:57.906 A:middle
Input Scale Factor.

00:32:58.786 --> 00:33:00.436 A:middle
So in this case if we wanted to

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.786 --> 00:33:00.436 A:middle
So in this case if we wanted to

00:33:00.436 --> 00:33:02.106 A:middle
down sample the image by 2, we

00:33:02.106 --> 00:33:03.396 A:middle
would set the input scale factor

00:33:03.396 --> 00:33:04.196 A:middle
to 0.5.

00:33:04.566 --> 00:33:06.336 A:middle
And doing so ensures that we

00:33:06.736 --> 00:33:07.846 A:middle
sample appropriately from the

00:33:07.846 --> 00:33:09.176 A:middle
image and also take into account

00:33:09.176 --> 00:33:10.916 A:middle
other effects such as the noise

00:33:10.916 --> 00:33:11.306 A:middle
in the image.

00:33:13.876 --> 00:33:16.146 A:middle
There are a few additional

00:33:16.146 --> 00:33:17.316 A:middle
things that I'd like to mention

00:33:17.806 --> 00:33:19.166 A:middle
about using the CI Depth Blue

00:33:19.166 --> 00:33:20.066 A:middle
Effect which are important to

00:33:20.066 --> 00:33:20.606 A:middle
keep in mind.

00:33:21.526 --> 00:33:23.786 A:middle
The first and foremost is that

00:33:23.786 --> 00:33:25.666 A:middle
when you create your CI context

00:33:26.336 --> 00:33:27.386 A:middle
where you'll be using these

00:33:27.386 --> 00:33:28.826 A:middle
filters, you're going to want to

00:33:28.826 --> 00:33:30.116 A:middle
make sure that you're using half

00:33:30.116 --> 00:33:31.056 A:middle
float intermediates.

00:33:31.366 --> 00:33:32.286 A:middle
And you can do this by

00:33:32.286 --> 00:33:34.036 A:middle
specifying the kCI Context

00:33:34.036 --> 00:33:36.956 A:middle
Working Format to be RWAH.

00:33:38.326 --> 00:33:39.806 A:middle
On MacOS this is the default.

00:33:39.806 --> 00:33:41.766 A:middle
But on iOS, by default we use

00:33:41.766 --> 00:33:42.126 A:middle
8-bit.

00:33:42.126 --> 00:33:43.636 A:middle
And if you don't, you will see

00:33:43.636 --> 00:33:45.246 A:middle
that the data will be clipped

00:33:45.246 --> 00:33:47.196 A:middle
because disparity data comes in

00:33:47.196 --> 00:33:47.976 A:middle
extended range.

00:33:48.366 --> 00:33:49.806 A:middle
And without specifying this, it

00:33:49.806 --> 00:33:50.816 A:middle
will get clipped and the result

00:33:50.816 --> 00:33:51.656 A:middle
won't look very good.

00:33:51.656 --> 00:33:52.676 A:middle
So it's really important to

00:33:52.676 --> 00:33:53.816 A:middle
remember to keep doing this when

00:33:53.816 --> 00:33:54.796 A:middle
you use this filter.

00:33:57.496 --> 00:33:59.996 A:middle
Also as I mentioned earlier, the

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:00.216 --> 00:34:02.536 A:middle
CI Depth Blur Effect will

00:34:02.536 --> 00:34:03.976 A:middle
automatically set many

00:34:03.976 --> 00:34:05.576 A:middle
properties for you on the

00:34:05.576 --> 00:34:05.966 A:middle
filter.

00:34:05.966 --> 00:34:08.016 A:middle
In order to do so, it will

00:34:08.016 --> 00:34:09.226 A:middle
examine the metadata from the

00:34:09.226 --> 00:34:13.436 A:middle
main image as well the data that

00:34:13.436 --> 00:34:16.346 A:middle
exists inside of the auxiliary

00:34:16.346 --> 00:34:16.616 A:middle
image.

00:34:16.766 --> 00:34:18.186 A:middle
And so it's important to try to

00:34:18.516 --> 00:34:19.626 A:middle
preserve that throughout your

00:34:19.626 --> 00:34:20.126 A:middle
pipeline.

00:34:20.485 --> 00:34:22.255 A:middle
Core Image will do its best in

00:34:22.255 --> 00:34:23.096 A:middle
order to ensure that this

00:34:23.096 --> 00:34:23.516 A:middle
happens.

00:34:23.886 --> 00:34:24.656 A:middle
But it's something you're going

00:34:24.656 --> 00:34:25.485 A:middle
to want to keep in mind as

00:34:25.485 --> 00:34:26.315 A:middle
you're using this filter.

00:34:26.356 --> 00:34:27.676 A:middle
And Etienne's going to talk to

00:34:27.676 --> 00:34:28.686 A:middle
you a little bit later about how

00:34:28.686 --> 00:34:30.005 A:middle
to ensure that you do this when

00:34:30.005 --> 00:34:31.000 A:middle
you save images.

00:34:33.646 --> 00:34:34.106 A:middle
All right.

00:34:34.696 --> 00:34:36.335 A:middle
Well, the last thing I'd like to

00:34:36.335 --> 00:34:37.926 A:middle
talk to you about today has to

00:34:37.926 --> 00:34:40.606 A:middle
do with some internals of the CI

00:34:40.606 --> 00:34:41.306 A:middle
Depth Blur Effect.

00:34:42.485 --> 00:34:43.636 A:middle
It's been mentioned many times

00:34:43.636 --> 00:34:46.326 A:middle
so far already today, the main

00:34:46.326 --> 00:34:47.466 A:middle
image and the disparity image

00:34:47.466 --> 00:34:49.266 A:middle
are of very different

00:34:49.266 --> 00:34:49.835 A:middle
resolutions.

00:34:49.835 --> 00:34:52.835 A:middle
And now internally, Core Image

00:34:52.835 --> 00:34:54.386 A:middle
is going to up sample the

00:34:54.386 --> 00:34:56.186 A:middle
disparity image up to a certain

00:34:56.186 --> 00:34:58.246 A:middle
point in order to achieve the

00:34:58.246 --> 00:34:58.936 A:middle
final result.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:00.256 --> 00:35:02.036 A:middle
And this is an area where we

00:35:02.036 --> 00:35:03.076 A:middle
feel like if you have additional

00:35:03.076 --> 00:35:04.396 A:middle
processing time you could

00:35:04.396 --> 00:35:05.896 A:middle
perhaps do something a little

00:35:05.896 --> 00:35:06.296 A:middle
different.

00:35:06.856 --> 00:35:08.076 A:middle
Maybe some of the methods that

00:35:08.076 --> 00:35:09.406 A:middle
Etienne spoke of earlier.

00:35:10.976 --> 00:35:12.876 A:middle
And that concludes pretty much

00:35:12.876 --> 00:35:13.766 A:middle
everything I wanted to tell you

00:35:13.766 --> 00:35:15.136 A:middle
about using the CI Depth Blur

00:35:15.136 --> 00:35:15.436 A:middle
Effect.

00:35:15.756 --> 00:35:17.046 A:middle
And I hope you all go and start

00:35:17.046 --> 00:35:18.176 A:middle
adding it to your apps.

00:35:18.496 --> 00:35:19.576 A:middle
And on that, I'm going to hand

00:35:19.576 --> 00:35:20.436 A:middle
it back over to Etienne.

00:35:20.436 --> 00:35:21.166 A:middle
Thank you very much.

00:35:22.016 --> 00:35:23.666 A:middle
[ Applause ]

00:35:23.666 --> 00:35:24.226 A:middle
&gt;&gt; Thank you, Alex.

00:35:26.566 --> 00:35:27.556 A:middle
All right.

00:35:27.886 --> 00:35:29.016 A:middle
So, so far we've seen

00:35:29.016 --> 00:35:30.616 A:middle
interesting cool new effects

00:35:30.616 --> 00:35:32.056 A:middle
that you can do using depth

00:35:32.056 --> 00:35:32.206 A:middle
data.

00:35:32.346 --> 00:35:34.566 A:middle
But the depth data was really

00:35:34.566 --> 00:35:36.746 A:middle
used as a mask to apply

00:35:36.746 --> 00:35:38.466 A:middle
different effects to different

00:35:38.466 --> 00:35:39.666 A:middle
part of the image.

00:35:40.386 --> 00:35:42.136 A:middle
And so now we want to show you

00:35:42.136 --> 00:35:44.776 A:middle
something different, something

00:35:44.776 --> 00:35:46.566 A:middle
that actually uses depth as a

00:35:46.566 --> 00:35:47.366 A:middle
third dimension.

00:35:48.406 --> 00:35:49.806 A:middle
And this will give you a taste

00:35:49.806 --> 00:35:51.036 A:middle
of what kind of new creative

00:35:51.036 --> 00:35:52.286 A:middle
effects you could apply using

00:35:52.286 --> 00:35:52.966 A:middle
this data.

00:35:53.986 --> 00:35:55.576 A:middle
And to tell you all about it,

00:35:55.576 --> 00:35:57.066 A:middle
I'm going to invite Stephen back

00:35:57.066 --> 00:35:57.496 A:middle
on stage.

00:35:57.826 --> 00:35:58.000 A:middle
Stephen.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:00.516 --> 00:36:02.856 A:middle
[ Applause ]

00:36:03.356 --> 00:36:04.216 A:middle
&gt;&gt; Thank you, Etienne.

00:36:05.246 --> 00:36:06.376 A:middle
It's good to be back with you.

00:36:06.376 --> 00:36:07.856 A:middle
What I'm going to show you now

00:36:09.456 --> 00:36:11.106 A:middle
is a true 3-D effect.

00:36:12.976 --> 00:36:14.316 A:middle
And this particular effect that

00:36:14.316 --> 00:36:15.306 A:middle
we're going to show you is

00:36:15.306 --> 00:36:16.156 A:middle
called dolly zoom.

00:36:16.436 --> 00:36:17.466 A:middle
Many of you are probably already

00:36:17.466 --> 00:36:18.896 A:middle
familiar with what dolly zoom

00:36:18.896 --> 00:36:20.106 A:middle
is, especially if you've ever

00:36:20.106 --> 00:36:20.996 A:middle
seen a scary movie.

00:36:21.566 --> 00:36:23.926 A:middle
But to get everybody up to speed

00:36:23.926 --> 00:36:24.796 A:middle
a little bit, I'm going to show

00:36:24.796 --> 00:36:26.426 A:middle
you a little animation of what's

00:36:26.426 --> 00:36:27.486 A:middle
going on with dolly zoom.

00:36:28.146 --> 00:36:29.256 A:middle
So what you're looking at here

00:36:30.506 --> 00:36:32.146 A:middle
is a scene consisting of three

00:36:32.146 --> 00:36:32.726 A:middle
spheres.

00:36:33.756 --> 00:36:35.476 A:middle
While the camera is dollying

00:36:35.646 --> 00:36:37.726 A:middle
back and forth, it's also doing

00:36:37.726 --> 00:36:39.626 A:middle
it so in such a way that the

00:36:39.626 --> 00:36:40.756 A:middle
field of view is also

00:36:40.996 --> 00:36:43.056 A:middle
simultaneously constrained so

00:36:43.106 --> 00:36:44.736 A:middle
that the gray sphere in the

00:36:44.736 --> 00:36:46.716 A:middle
center on the focal plane

00:36:47.226 --> 00:36:49.816 A:middle
remains at roughly the same size

00:36:50.036 --> 00:36:51.056 A:middle
throughout the effect in the

00:36:51.056 --> 00:36:52.656 A:middle
output image, which you see on

00:36:52.656 --> 00:36:52.936 A:middle
the right.

00:36:53.316 --> 00:36:54.376 A:middle
Everything else in the scene

00:36:54.376 --> 00:36:56.146 A:middle
will move around due to

00:36:56.146 --> 00:36:57.076 A:middle
perspective effects.

00:36:58.856 --> 00:36:59.736 A:middle
So let's take a look.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:00.916 --> 00:37:02.046 A:middle
Let's switch over here to the

00:37:02.046 --> 00:37:02.616 A:middle
device.

00:37:04.506 --> 00:37:05.936 A:middle
Perfect.

00:37:06.046 --> 00:37:06.386 A:middle
All right.

00:37:09.206 --> 00:37:10.906 A:middle
Let me pull up the dolly zoom

00:37:10.906 --> 00:37:11.936 A:middle
editing extension.

00:37:14.446 --> 00:37:15.846 A:middle
And I'll draw your attention now

00:37:15.846 --> 00:37:17.716 A:middle
to the group of flowers in the

00:37:17.716 --> 00:37:18.696 A:middle
center of the image.

00:37:18.806 --> 00:37:20.596 A:middle
Those are on the focal plane.

00:37:21.546 --> 00:37:22.526 A:middle
So as I begin to move the

00:37:22.526 --> 00:37:23.000 A:middle
camera,

00:37:25.496 --> 00:37:27.486 A:middle
there you see the dolly zoom

00:37:27.486 --> 00:37:29.316 A:middle
effects in its full glory.

00:37:29.346 --> 00:37:31.716 A:middle
When I pull the camera in this

00:37:31.716 --> 00:37:32.976 A:middle
direction in particular you can

00:37:32.976 --> 00:37:34.476 A:middle
really see the true 3-D nature

00:37:34.476 --> 00:37:36.346 A:middle
of this effect with the

00:37:36.436 --> 00:37:37.636 A:middle
foreground flowers really

00:37:37.966 --> 00:37:39.486 A:middle
popping out and the background

00:37:39.486 --> 00:37:41.486 A:middle
sort of fading or pulling away

00:37:41.486 --> 00:37:42.096 A:middle
from the camera.

00:37:42.996 --> 00:37:44.186 A:middle
You do also see a couple of

00:37:44.186 --> 00:37:45.326 A:middle
artifacts, of course.

00:37:45.706 --> 00:37:47.546 A:middle
One of which are the black

00:37:47.546 --> 00:37:49.326 A:middle
pixels that you see coming into

00:37:49.326 --> 00:37:50.596 A:middle
view around the background.

00:37:51.346 --> 00:37:53.126 A:middle
This is due to the fact that in

00:37:53.126 --> 00:37:54.076 A:middle
the camera's current

00:37:54.146 --> 00:37:55.416 A:middle
configuration, the virtual

00:37:55.416 --> 00:37:57.386 A:middle
camera, its field of view is

00:37:57.386 --> 00:38:00.126 A:middle
wider than the iPhone that

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:57.386 --> 00:38:00.126 A:middle
wider than the iPhone that

00:38:00.126 --> 00:38:00.896 A:middle
captured the image.

00:38:01.956 --> 00:38:04.036 A:middle
And so the virtual camera sees

00:38:04.036 --> 00:38:05.386 A:middle
more of the scene than the

00:38:05.536 --> 00:38:06.646 A:middle
iPhone did at the time of

00:38:06.646 --> 00:38:07.156 A:middle
capture.

00:38:07.696 --> 00:38:08.876 A:middle
So we're just filling those

00:38:08.876 --> 00:38:10.666 A:middle
pixels in with black.

00:38:10.916 --> 00:38:12.966 A:middle
Similarly, the stretching you

00:38:12.966 --> 00:38:14.316 A:middle
see in between the foreground

00:38:14.316 --> 00:38:15.826 A:middle
flowers and the green leaves

00:38:15.826 --> 00:38:17.076 A:middle
behind them is due to the fact

00:38:17.076 --> 00:38:18.246 A:middle
that this camera, the virtual

00:38:18.246 --> 00:38:19.176 A:middle
camera, has exposed some

00:38:19.176 --> 00:38:20.456 A:middle
portions of the scene that

00:38:20.456 --> 00:38:22.566 A:middle
weren't visible to the iPhone at

00:38:22.566 --> 00:38:24.436 A:middle
the time of capture.

00:38:24.436 --> 00:38:26.296 A:middle
One strategy you might take to

00:38:26.296 --> 00:38:27.816 A:middle
work around some of these issues

00:38:28.516 --> 00:38:30.606 A:middle
is to set a new focal plane.

00:38:31.306 --> 00:38:33.406 A:middle
So, now I've tapped on the

00:38:33.406 --> 00:38:35.056 A:middle
yellow flower in the foreground,

00:38:35.056 --> 00:38:35.996 A:middle
which is in the bottom right

00:38:35.996 --> 00:38:38.106 A:middle
corner of the image to set that

00:38:38.356 --> 00:38:39.386 A:middle
as the focal plane.

00:38:39.876 --> 00:38:41.286 A:middle
And as I move the camera now in

00:38:41.286 --> 00:38:42.666 A:middle
this direction you can see that

00:38:43.216 --> 00:38:44.836 A:middle
none of the black pixels are

00:38:44.836 --> 00:38:45.586 A:middle
coming into view.

00:38:45.906 --> 00:38:47.506 A:middle
Of course if I move the camera

00:38:47.506 --> 00:38:49.436 A:middle
again in this direction, they

00:38:49.436 --> 00:38:50.106 A:middle
show up again.

00:38:50.616 --> 00:38:51.976 A:middle
And really, that 3-D effect is

00:38:51.976 --> 00:38:54.686 A:middle
quite strong here.

00:38:55.306 --> 00:38:57.466 A:middle
Correspondingly, I can tap on a

00:38:57.466 --> 00:38:58.496 A:middle
background region of the image,

00:38:58.496 --> 00:39:00.056 A:middle
such as the trees you see in the

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:58.496 --> 00:39:00.056 A:middle
such as the trees you see in the

00:39:00.056 --> 00:39:00.816 A:middle
upper left corner.

00:39:01.786 --> 00:39:03.676 A:middle
And when I pull the camera now

00:39:03.676 --> 00:39:06.536 A:middle
in this direction, it really

00:39:07.606 --> 00:39:09.086 A:middle
produces a pleasing sort of

00:39:09.086 --> 00:39:11.106 A:middle
prominent effect on that central

00:39:11.146 --> 00:39:11.996 A:middle
group of flowers.

00:39:12.786 --> 00:39:15.076 A:middle
So let's take a look now at how

00:39:15.076 --> 00:39:15.876 A:middle
we implemented this.

00:39:16.196 --> 00:39:18.096 A:middle
Because of the true 3-D nature

00:39:18.096 --> 00:39:20.866 A:middle
of this problem, we turned to

00:39:20.866 --> 00:39:23.396 A:middle
Metal as a true 3-D tool to

00:39:23.396 --> 00:39:26.256 A:middle
solve this effect, to produce

00:39:26.256 --> 00:39:26.706 A:middle
the effect.

00:39:27.136 --> 00:39:28.916 A:middle
We were able to get our system

00:39:28.916 --> 00:39:30.336 A:middle
up and running quite quickly in

00:39:30.336 --> 00:39:31.826 A:middle
Metal because of all the work

00:39:31.826 --> 00:39:33.506 A:middle
that it does for us.

00:39:33.806 --> 00:39:36.576 A:middle
Basically all we had to do to

00:39:36.576 --> 00:39:38.386 A:middle
start off with was to construct

00:39:38.386 --> 00:39:40.236 A:middle
a triangular mesh that we mapped

00:39:40.336 --> 00:39:42.396 A:middle
onto the image, much like what

00:39:42.396 --> 00:39:43.836 A:middle
you saw in Craig's Depth

00:39:43.836 --> 00:39:45.626 A:middle
Explorer demo at the beginning

00:39:45.626 --> 00:39:46.206 A:middle
of the session.

00:39:46.856 --> 00:39:49.196 A:middle
And we mapped the -- excuse me

00:39:49.196 --> 00:39:50.736 A:middle
-- we mapped the image -- we

00:39:50.736 --> 00:39:51.826 A:middle
center the image around the

00:39:51.826 --> 00:39:52.286 A:middle
origin.

00:39:54.096 --> 00:39:55.806 A:middle
Metal also gives us the

00:39:55.806 --> 00:39:57.336 A:middle
opportunity to program a couple

00:39:57.336 --> 00:39:59.146 A:middle
of stages of its pipeline, one

00:39:59.146 --> 00:40:00.476 A:middle
of which is the vertex shader.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:59.146 --> 00:40:00.476 A:middle
of which is the vertex shader.

00:40:00.526 --> 00:40:01.856 A:middle
And the job of the vertex

00:40:01.856 --> 00:40:03.426 A:middle
shader, it gives us the

00:40:03.426 --> 00:40:04.756 A:middle
opportunity to process the

00:40:04.756 --> 00:40:06.326 A:middle
geometry of the scene in some

00:40:06.326 --> 00:40:06.556 A:middle
way.

00:40:08.036 --> 00:40:09.486 A:middle
And we can also program the

00:40:09.486 --> 00:40:11.146 A:middle
fragment shader, which gives us

00:40:11.146 --> 00:40:12.866 A:middle
the opportunity to produce a

00:40:13.246 --> 00:40:14.996 A:middle
color for each pixel in the

00:40:14.996 --> 00:40:15.346 A:middle
output.

00:40:16.336 --> 00:40:18.806 A:middle
We were able to reintegrate all

00:40:18.806 --> 00:40:20.446 A:middle
of this 3-D Metal rendering back

00:40:20.446 --> 00:40:22.256 A:middle
into our Core Image pipeline by

00:40:22.256 --> 00:40:23.876 A:middle
using a CI Image Processor

00:40:23.876 --> 00:40:24.286 A:middle
Kernel.

00:40:25.496 --> 00:40:28.566 A:middle
So here's the code for the

00:40:28.566 --> 00:40:29.306 A:middle
vertex shader.

00:40:31.586 --> 00:40:33.136 A:middle
Again, the job of the vertex

00:40:33.136 --> 00:40:34.156 A:middle
shader is to process the

00:40:34.156 --> 00:40:34.846 A:middle
geometry.

00:40:34.936 --> 00:40:36.286 A:middle
And it does so one vertex at a

00:40:36.286 --> 00:40:36.656 A:middle
time.

00:40:37.036 --> 00:40:38.536 A:middle
So we get one vertex of the

00:40:38.536 --> 00:40:39.826 A:middle
original mesh as input.

00:40:40.566 --> 00:40:41.656 A:middle
And then we'll produce something

00:40:41.656 --> 00:40:42.456 A:middle
new on the output.

00:40:42.776 --> 00:40:44.256 A:middle
The first thing we do in the

00:40:44.256 --> 00:40:46.856 A:middle
vertex shader is sample the

00:40:46.856 --> 00:40:48.626 A:middle
depth at that vertex.

00:40:49.466 --> 00:40:50.616 A:middle
That's this line you see here.

00:40:50.616 --> 00:40:52.006 A:middle
We're storing it in a variable

00:40:52.006 --> 00:40:53.546 A:middle
called z, which will get used in

00:40:53.546 --> 00:40:54.556 A:middle
a couple of places in this

00:40:54.556 --> 00:40:54.906 A:middle
shader.

00:40:55.956 --> 00:40:57.986 A:middle
The first of which is this

00:40:57.986 --> 00:40:59.226 A:middle
magical line right here.

00:40:59.656 --> 00:41:01.296 A:middle
This line is the line that every

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:59.656 --> 00:41:01.296 A:middle
This line is the line that every

00:41:01.296 --> 00:41:02.836 A:middle
young engineer grows up dreaming

00:41:02.836 --> 00:41:03.866 A:middle
that they'll write some day.

00:41:03.986 --> 00:41:05.496 A:middle
Because this is where we do the

00:41:05.496 --> 00:41:05.636 A:middle
math.

00:41:07.276 --> 00:41:08.836 A:middle
There are three variables as

00:41:08.836 --> 00:41:11.506 A:middle
input to this equation.

00:41:12.476 --> 00:41:13.786 A:middle
One is the depth, which we just

00:41:13.786 --> 00:41:14.436 A:middle
sampled above.

00:41:14.846 --> 00:41:16.116 A:middle
And the others correspond to the

00:41:16.116 --> 00:41:18.856 A:middle
user inputs of the focal plane

00:41:18.856 --> 00:41:20.396 A:middle
and the camera's configuration.

00:41:22.086 --> 00:41:24.516 A:middle
This produces a scale factor,

00:41:24.776 --> 00:41:26.596 A:middle
which we can apply to our

00:41:27.346 --> 00:41:30.166 A:middle
vertices, which we do on this

00:41:30.166 --> 00:41:30.806 A:middle
line right here.

00:41:30.806 --> 00:41:32.936 A:middle
And we can apply a scale factor

00:41:32.936 --> 00:41:35.166 A:middle
to it because the vertices are

00:41:35.166 --> 00:41:37.136 A:middle
centered around the origin.

00:41:37.676 --> 00:41:39.676 A:middle
So this scale factor serves to

00:41:39.986 --> 00:41:42.076 A:middle
move vertices either radially

00:41:42.076 --> 00:41:43.466 A:middle
away from the center or toward

00:41:43.466 --> 00:41:44.376 A:middle
the center of the image.

00:41:45.056 --> 00:41:46.436 A:middle
And this is what produces the

00:41:46.436 --> 00:41:48.226 A:middle
illusion of three dimensions.

00:41:49.346 --> 00:41:51.016 A:middle
Once we have transformed our

00:41:51.016 --> 00:41:52.906 A:middle
vertex position, we output it

00:41:52.906 --> 00:41:54.546 A:middle
here in the new output vertex

00:41:55.146 --> 00:41:56.276 A:middle
while preserving the original

00:41:56.276 --> 00:41:57.616 A:middle
depth value, z.

00:41:58.006 --> 00:41:59.546 A:middle
And this is important because it

00:41:59.546 --> 00:42:01.026 A:middle
will get passed into the z

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:59.546 --> 00:42:01.026 A:middle
will get passed into the z

00:42:01.026 --> 00:42:02.716 A:middle
buffer machinery of Metal, which

00:42:02.716 --> 00:42:03.856 A:middle
will then just do the right

00:42:03.856 --> 00:42:05.296 A:middle
thing for us as pixels move

00:42:05.296 --> 00:42:06.466 A:middle
around in the output and start

00:42:06.466 --> 00:42:07.386 A:middle
to overlap each other.

00:42:09.546 --> 00:42:11.426 A:middle
Also, we output the texture

00:42:11.426 --> 00:42:12.586 A:middle
coordinate of the original

00:42:12.586 --> 00:42:13.136 A:middle
vertex.

00:42:13.906 --> 00:42:14.756 A:middle
This will get used by the

00:42:14.756 --> 00:42:16.676 A:middle
fragment shader, which I'll show

00:42:16.676 --> 00:42:18.256 A:middle
you now.

00:42:19.546 --> 00:42:20.636 A:middle
Remember, the fragment shader's

00:42:20.636 --> 00:42:23.216 A:middle
job is to produce a color pixel

00:42:23.216 --> 00:42:23.646 A:middle
output.

00:42:26.086 --> 00:42:28.276 A:middle
And since Metal interpolates all

00:42:28.276 --> 00:42:30.176 A:middle
of these texture coordinates for

00:42:30.176 --> 00:42:32.016 A:middle
us, all we have to do in our

00:42:32.016 --> 00:42:33.906 A:middle
fragment shader is to sample the

00:42:33.906 --> 00:42:35.286 A:middle
original image at the

00:42:35.286 --> 00:42:36.546 A:middle
interpolated texture coordinate.

00:42:37.156 --> 00:42:38.046 A:middle
And that's it.

00:42:38.046 --> 00:42:39.216 A:middle
That's really all the code you

00:42:39.216 --> 00:42:41.176 A:middle
need to see to implement the

00:42:41.176 --> 00:42:42.076 A:middle
dolly zoom effect.

00:42:42.356 --> 00:42:43.506 A:middle
And hopefully it's given you

00:42:43.506 --> 00:42:45.986 A:middle
some ideas of new directions you

00:42:45.986 --> 00:42:47.616 A:middle
can take this in to produce your

00:42:47.616 --> 00:42:49.286 A:middle
own brand new custom 3-D

00:42:49.286 --> 00:42:49.796 A:middle
effects.

00:42:50.146 --> 00:42:51.406 A:middle
We're really excited to see what

00:42:51.406 --> 00:42:51.936 A:middle
you come up with.

00:42:52.716 --> 00:42:55.196 A:middle
And now, I'll hand the stage

00:42:55.196 --> 00:42:57.676 A:middle
back over to Etienne to finish

00:42:57.676 --> 00:42:58.000 A:middle
up.

00:42:59.516 --> 00:43:03.126 A:middle
[ Applause ]

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:59.516 --> 00:43:03.126 A:middle
[ Applause ]

00:43:03.626 --> 00:43:04.476 A:middle
&gt;&gt; Thank you, Stephen.

00:43:05.466 --> 00:43:06.216 A:middle
All right.

00:43:06.796 --> 00:43:08.366 A:middle
So now that we've applied

00:43:08.366 --> 00:43:10.096 A:middle
various new effects to our

00:43:10.096 --> 00:43:12.046 A:middle
images, there's one more step

00:43:12.046 --> 00:43:12.756 A:middle
that we need to take.

00:43:13.336 --> 00:43:18.046 A:middle
And that's save your depth data.

00:43:18.146 --> 00:43:20.276 A:middle
So, you should always preserve

00:43:20.276 --> 00:43:21.156 A:middle
the depth data.

00:43:21.156 --> 00:43:22.456 A:middle
All right?

00:43:22.686 --> 00:43:24.836 A:middle
That way your users will be able

00:43:24.836 --> 00:43:26.826 A:middle
to use other apps like yours to

00:43:26.826 --> 00:43:28.396 A:middle
apply their own depth effects on

00:43:28.396 --> 00:43:29.156 A:middle
top of yours.

00:43:30.306 --> 00:43:31.756 A:middle
Even if you don't use the depth

00:43:31.756 --> 00:43:33.436 A:middle
data, you should always preserve

00:43:33.436 --> 00:43:34.826 A:middle
it if it was present in your

00:43:34.826 --> 00:43:35.626 A:middle
original image.

00:43:37.406 --> 00:43:38.956 A:middle
This will really ensure the best

00:43:38.956 --> 00:43:40.246 A:middle
possible experience for your

00:43:40.246 --> 00:43:40.766 A:middle
users.

00:43:41.776 --> 00:43:43.246 A:middle
However, when you store the

00:43:43.246 --> 00:43:45.106 A:middle
depth data, be sure to match the

00:43:45.106 --> 00:43:47.166 A:middle
geometry of image data.

00:43:48.376 --> 00:43:49.616 A:middle
If you don't apply geometry

00:43:49.616 --> 00:43:51.786 A:middle
correctly, the depth data will

00:43:51.786 --> 00:43:53.206 A:middle
no longer match the image data.

00:43:53.576 --> 00:43:55.186 A:middle
And so further depth effect

00:43:55.186 --> 00:43:56.756 A:middle
applied on top of that will no

00:43:56.756 --> 00:43:57.606 A:middle
longer work properly.

00:43:58.456 --> 00:44:00.746 A:middle
So let's take a look at how the

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:58.456 --> 00:44:00.746 A:middle
So let's take a look at how the

00:44:00.746 --> 00:44:01.996 A:middle
kind of geometry transforming

00:44:01.996 --> 00:44:04.086 A:middle
might apply to depth data.

00:44:05.366 --> 00:44:08.126 A:middle
A very common operation is

00:44:08.126 --> 00:44:08.706 A:middle
orientation.

00:44:09.256 --> 00:44:10.916 A:middle
Often times you get to work with

00:44:10.916 --> 00:44:12.136 A:middle
a portrait image that was

00:44:12.136 --> 00:44:13.686 A:middle
actually shot in landscape and

00:44:13.686 --> 00:44:15.276 A:middle
has an [inaudible] orientation.

00:44:16.696 --> 00:44:18.496 A:middle
So, the depth data may look like

00:44:18.496 --> 00:44:18.866 A:middle
this.

00:44:19.176 --> 00:44:21.316 A:middle
And so you want to make sure to

00:44:21.316 --> 00:44:22.836 A:middle
orient the depth as well.

00:44:23.116 --> 00:44:24.046 A:middle
So make sure to apply

00:44:24.046 --> 00:44:24.636 A:middle
orientation.

00:44:25.656 --> 00:44:27.836 A:middle
Another very common operation is

00:44:27.836 --> 00:44:28.176 A:middle
crop.

00:44:28.736 --> 00:44:31.006 A:middle
Right? And so again, make sure

00:44:31.006 --> 00:44:33.176 A:middle
you crop the depth data to

00:44:33.176 --> 00:44:33.596 A:middle
match.

00:44:35.266 --> 00:44:36.636 A:middle
Now, you may have a more

00:44:36.636 --> 00:44:37.946 A:middle
advanced transform that you also

00:44:37.946 --> 00:44:39.776 A:middle
apply to your image such as

00:44:39.966 --> 00:44:41.256 A:middle
[inaudible] transform like this

00:44:41.876 --> 00:44:41.976 A:middle
one.

00:44:42.526 --> 00:44:43.796 A:middle
Right? Or maybe you have a

00:44:43.796 --> 00:44:45.006 A:middle
custom [inaudible] transform

00:44:45.216 --> 00:44:46.976 A:middle
such as a perspective transform.

00:44:47.226 --> 00:44:48.896 A:middle
Or maybe even a 3-D transform

00:44:48.896 --> 00:44:50.496 A:middle
like the one we saw in the dolly

00:44:50.496 --> 00:44:50.956 A:middle
zoom demo.

00:44:52.606 --> 00:44:54.266 A:middle
In any case, you want to also

00:44:54.266 --> 00:44:55.626 A:middle
apply the same transform to the

00:44:55.626 --> 00:44:57.186 A:middle
depth data so that it matches

00:44:57.186 --> 00:44:58.176 A:middle
the image perfectly.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:01.256 --> 00:45:03.186 A:middle
Okay. So the key thing to

00:45:03.186 --> 00:45:04.846 A:middle
remember here is to apply your

00:45:04.846 --> 00:45:06.206 A:middle
transform at the native

00:45:06.206 --> 00:45:07.796 A:middle
resolution of the depth data.

00:45:08.666 --> 00:45:10.276 A:middle
So you want to scale your

00:45:10.276 --> 00:45:11.456 A:middle
transform parameter from the

00:45:11.456 --> 00:45:13.986 A:middle
full size image to that size of

00:45:14.026 --> 00:45:18.276 A:middle
the depth image.

00:45:18.826 --> 00:45:21.246 A:middle
Otherwise, right, your transform

00:45:21.246 --> 00:45:22.546 A:middle
will be applied incorrectly.

00:45:22.546 --> 00:45:24.066 A:middle
And then the depth image will no

00:45:24.066 --> 00:45:26.776 A:middle
longer match the image, the

00:45:26.776 --> 00:45:27.416 A:middle
output image.

00:45:28.966 --> 00:45:30.256 A:middle
Another thing to note is that

00:45:30.486 --> 00:45:31.916 A:middle
depth data is not color data.

00:45:31.916 --> 00:45:33.456 A:middle
So when you are rending a new

00:45:33.456 --> 00:45:35.286 A:middle
depth image, make sure you don't

00:45:35.596 --> 00:45:36.826 A:middle
apply any kind of color match

00:45:36.826 --> 00:45:39.996 A:middle
into it.

00:45:39.996 --> 00:45:40.246 A:middle
All right.

00:45:41.516 --> 00:45:43.156 A:middle
So now that we've seen what kind

00:45:43.156 --> 00:45:44.816 A:middle
of transform we may apply to

00:45:44.816 --> 00:45:46.986 A:middle
depth data we can render it into

00:45:46.986 --> 00:45:48.196 A:middle
a new CV pixel buffer.

00:45:49.036 --> 00:45:50.556 A:middle
Once we have a new CV pixel

00:45:50.556 --> 00:45:52.606 A:middle
buffer we can create a new AV

00:45:52.606 --> 00:45:53.746 A:middle
depth data object from it.

00:45:54.026 --> 00:45:54.476 A:middle
Here's how.

00:45:55.166 --> 00:45:56.556 A:middle
We start from our original depth

00:45:56.556 --> 00:45:58.386 A:middle
data object and then we call

00:45:58.386 --> 00:45:59.966 A:middle
Depth Data by replacing Depth

00:45:59.966 --> 00:46:00.426 A:middle
Data Map.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:59.966 --> 00:46:00.426 A:middle
Data Map.

00:46:00.706 --> 00:46:01.876 A:middle
And we pass in all newly

00:46:01.876 --> 00:46:03.006 A:middle
rendered depth buffer.

00:46:04.036 --> 00:46:06.586 A:middle
Now returns a new AV depth data

00:46:06.586 --> 00:46:07.066 A:middle
object.

00:46:07.066 --> 00:46:08.806 A:middle
And we can then save into our

00:46:08.876 --> 00:46:10.076 A:middle
output image.

00:46:10.956 --> 00:46:12.026 A:middle
Let's a take a look at how to

00:46:12.026 --> 00:46:13.886 A:middle
write depth data using Image IO.

00:46:15.876 --> 00:46:18.386 A:middle
We start from an image

00:46:18.386 --> 00:46:20.056 A:middle
destination that we create for

00:46:20.056 --> 00:46:20.766 A:middle
our output file.

00:46:22.476 --> 00:46:23.816 A:middle
And here we ask for a JPEG

00:46:23.816 --> 00:46:24.296 A:middle
format.

00:46:24.616 --> 00:46:26.006 A:middle
So please note that not all

00:46:26.006 --> 00:46:27.096 A:middle
image from that [inaudible]

00:46:27.096 --> 00:46:28.896 A:middle
depth, but JPEG does.

00:46:30.196 --> 00:46:31.896 A:middle
Next we add our output image to

00:46:31.896 --> 00:46:32.926 A:middle
the image destination.

00:46:35.456 --> 00:46:37.226 A:middle
And then we ask all depth data

00:46:37.226 --> 00:46:38.456 A:middle
object that we want to store

00:46:38.456 --> 00:46:40.566 A:middle
into the image for a dictionary

00:46:40.566 --> 00:46:42.046 A:middle
representation for the auxiliary

00:46:42.046 --> 00:46:43.306 A:middle
data to store in the file.

00:46:44.096 --> 00:46:44.986 A:middle
So this is will return the

00:46:44.986 --> 00:46:46.666 A:middle
dictionary for the auxiliary

00:46:46.666 --> 00:46:48.516 A:middle
data as well as by reference the

00:46:48.516 --> 00:46:49.966 A:middle
type of the auxiliary data to

00:46:49.966 --> 00:46:50.346 A:middle
store.

00:46:51.616 --> 00:46:53.486 A:middle
Then we ask the CG image

00:46:53.486 --> 00:46:54.576 A:middle
destination to add that

00:46:54.576 --> 00:46:56.246 A:middle
auxiliary data, passing in the

00:46:56.246 --> 00:46:57.466 A:middle
type and the dictionary.

00:46:58.566 --> 00:47:00.186 A:middle
And finally, all we have to do

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:58.566 --> 00:47:00.186 A:middle
And finally, all we have to do

00:47:00.186 --> 00:47:01.586 A:middle
is to call CG image destination

00:47:01.586 --> 00:47:02.916 A:middle
finalized to write everything

00:47:02.916 --> 00:47:03.486 A:middle
down to disk.

00:47:05.376 --> 00:47:06.596 A:middle
If you're working with Core

00:47:06.596 --> 00:47:08.816 A:middle
Image, there's a new very

00:47:08.816 --> 00:47:10.956 A:middle
convenient way you can do this

00:47:11.796 --> 00:47:12.286 A:middle
as well.

00:47:12.526 --> 00:47:15.756 A:middle
So, if you are using CI context

00:47:15.756 --> 00:47:18.256 A:middle
[inaudible] representation for a

00:47:18.256 --> 00:47:20.366 A:middle
particular CI image directly in

00:47:20.366 --> 00:47:21.906 A:middle
order to render and save to a

00:47:21.906 --> 00:47:24.856 A:middle
JPEG file, you may now pass in

00:47:25.366 --> 00:47:28.086 A:middle
using an option key a depth data

00:47:28.086 --> 00:47:29.586 A:middle
object that you want to store as

00:47:29.586 --> 00:47:30.316 A:middle
part of that file.

00:47:32.326 --> 00:47:35.266 A:middle
Even better, if you have an

00:47:35.266 --> 00:47:37.626 A:middle
image, a depth image that you

00:47:37.626 --> 00:47:38.506 A:middle
have -- let's say you have

00:47:38.506 --> 00:47:39.626 A:middle
applied a transform to it or

00:47:39.626 --> 00:47:40.026 A:middle
something.

00:47:40.526 --> 00:47:44.216 A:middle
You can also specify it as an

00:47:44.216 --> 00:47:46.636 A:middle
option to that method so that

00:47:47.356 --> 00:47:49.226 A:middle
Core Image will render both the

00:47:49.226 --> 00:47:50.636 A:middle
regular image and the depth

00:47:50.636 --> 00:47:52.346 A:middle
image and save everything down

00:47:52.866 --> 00:47:54.666 A:middle
to the file in one call.

00:47:55.116 --> 00:47:55.756 A:middle
Very convenient.

00:47:57.266 --> 00:47:57.806 A:middle
And so that's it.

00:47:57.806 --> 00:47:59.336 A:middle
That concludes our session on

00:47:59.496 --> 00:48:00.816 A:middle
editing images with depth.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.496 --> 00:48:00.816 A:middle
editing images with depth.

00:48:01.806 --> 00:48:02.856 A:middle
So, let's recap what we've

00:48:02.856 --> 00:48:03.356 A:middle
learned today.

00:48:04.826 --> 00:48:06.916 A:middle
We've learned what depth is and

00:48:06.916 --> 00:48:08.196 A:middle
what depth and disparity looks

00:48:08.196 --> 00:48:08.466 A:middle
like.

00:48:10.786 --> 00:48:12.386 A:middle
We've learned how to read and

00:48:12.386 --> 00:48:13.936 A:middle
prepare depth data for editing.

00:48:14.796 --> 00:48:18.066 A:middle
And then we saw several ways,

00:48:18.066 --> 00:48:19.126 A:middle
and we showed you several ways

00:48:19.126 --> 00:48:21.256 A:middle
to apply new depth effects to

00:48:21.256 --> 00:48:21.906 A:middle
your images.

00:48:22.256 --> 00:48:23.486 A:middle
The first one was background

00:48:23.486 --> 00:48:25.646 A:middle
effects using a built in Core

00:48:25.646 --> 00:48:26.326 A:middle
Image filter.

00:48:26.986 --> 00:48:28.406 A:middle
Then we had a custom darkness

00:48:28.406 --> 00:48:30.336 A:middle
effect using a custom Core Image

00:48:30.336 --> 00:48:30.706 A:middle
kernel.

00:48:31.656 --> 00:48:32.926 A:middle
And then we showed you how you

00:48:32.926 --> 00:48:34.886 A:middle
can apply your depth effect

00:48:35.186 --> 00:48:37.056 A:middle
using a new CI filter.

00:48:38.246 --> 00:48:39.646 A:middle
And then we saw how you can

00:48:39.646 --> 00:48:42.116 A:middle
create a brand new 3-D effect

00:48:42.326 --> 00:48:42.956 A:middle
using depth.

00:48:43.736 --> 00:48:45.316 A:middle
I hope that this session will

00:48:45.316 --> 00:48:47.016 A:middle
inspire you to use depth data

00:48:47.016 --> 00:48:48.326 A:middle
into your own applications.

00:48:48.556 --> 00:48:49.626 A:middle
And I can't wait to see what

00:48:49.626 --> 00:48:50.516 A:middle
cool effects you'll come up

00:48:50.516 --> 00:48:50.706 A:middle
with.

00:48:51.566 --> 00:48:53.276 A:middle
For more information, please go

00:48:53.276 --> 00:48:54.606 A:middle
to the [inaudible] at Apple.com.

00:48:56.266 --> 00:48:57.476 A:middle
We have a couple related

00:48:57.476 --> 00:48:58.036 A:middle
sessions.

00:48:58.376 --> 00:49:00.616 A:middle
There's a session on Advances in

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:58.376 --> 00:49:00.616 A:middle
There's a session on Advances in

00:49:00.616 --> 00:49:01.986 A:middle
Core Image that's going to take

00:49:01.986 --> 00:49:03.056 A:middle
place later today.

00:49:03.056 --> 00:49:04.586 A:middle
So we strongly encourage you to

00:49:04.666 --> 00:49:05.076 A:middle
go there.

00:49:05.606 --> 00:49:06.246 A:middle
Check it out.

00:49:06.246 --> 00:49:08.396 A:middle
And there was a couple of

00:49:08.396 --> 00:49:10.376 A:middle
session yesterday was doing

00:49:10.376 --> 00:49:12.896 A:middle
Photo Kit and also how to

00:49:12.896 --> 00:49:14.526 A:middle
capture depth with iPhone.

00:49:15.276 --> 00:49:17.076 A:middle
And with that, I hope that you

00:49:17.076 --> 00:49:18.956 A:middle
have a good rest of the WWDC.

00:49:19.216 --> 00:49:19.896 A:middle
Thank you very much.

